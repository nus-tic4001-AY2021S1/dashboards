%%[This page was last updated on Oct 24 2020]%%


<panel type="info" header="### 1. DANIEL LIM WEE SOONG `@daniellimws` (185 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/6#discussion_r497240817" expanded>

Who dis
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/9#discussion_r499535008" expanded>

I think it would be better to have

```
if (!csvFile.isFile()) {
    // handle error
    return null;
}
```

so that we don't have all the main logic inside an if-block.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/9#discussion_r499535669" expanded>

Over here `output` is instantiated in every iteration of the loop. Is this intended?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/9#discussion_r499535880" expanded>

Is it supposed to be `split(",")` instead?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/12#discussion_r499561680" expanded>

HAHA nice
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499566137" expanded>

The `To` at the end of the method name feels unnecessary. Shall we use `changeAttributes`? Or `editAttributes` or `edit` which I think will match the user functionality more closely too.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499567604" expanded>

I think naming this method as `addTask` would be better as it is consistent with the other method names such as `editTask` and `deleteTask`.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499567951" expanded>

I think `getTaskDescription` would be a more descriptive name for this method?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102507" expanded>

Consider renaming `s` and `d` to more descriptive names? Like `cmd` and `details`
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102526" expanded>

More descriptive names for `t`, `u`, and `s`?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102557" expanded>

More descriptive names for `t`, `u`, and `s`?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102583" expanded>

More descriptive names for `t`, `u`, and `s`?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102591" expanded>

More descriptive names for `t`, `u`, and `s`?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102599" expanded>

More descriptive names for `t`, `u`, and `s`?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102612" expanded>

More descriptive names for `t`, `u`, and `s`?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102617" expanded>

More descriptive names for `t`, `u`, and `s`?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499102622" expanded>

More descriptive names for `t`, `u`, and `s`?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499538970" expanded>

Why are these fields `static`? I also think they can just be `private` instead of `protected`.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499539245" expanded>

Why `static`?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499539325" expanded>

Same as above, consider `private` instead of `protected static`?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499539411" expanded>

Same as above, consider `private` instead of `protected static`?
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499540909" expanded>

Same as above, consider `private` instead of `protected static`?
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499541231" expanded>

Why you got a space after the `ui.` lol
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499541339" expanded>

Same as above, consider `private` instead of `protected static`?
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499555610" expanded>

We should refactor this part out since it is repeated like 10 times, but I think it is ok to do it after tomorrow's meeting.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/30#discussion_r500849613" expanded>

Moving lines 84,85 to right before line 116 here should fix the checkstyle error

```
Error: eckstyle] [ERROR] /home/runner/work/tp/tp/src/main/java/athena/Parser.java:84: Distance between variable 'name' declaration and its first usage is 6, but allowed 3.  Consider making that variable final if you still need to store its value in advance (before method calls that might have side effects on the original value). [VariableDeclarationUsageDistance]
Error: eckstyle] [ERROR] /home/runner/work/tp/tp/src/main/java/athena/Parser.java:85: Distance between variable 'time' declaration and its first usage is 6, but allowed 3.  Consider making that variable final if you still need to store its value in advance (before method calls that might have side effects on the original value). [VariableDeclarationUsageDistance]
```
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/30#discussion_r500851598" expanded>

These 2 methods look like they are doing almost the same thing. Can we combine them together?
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/28#discussion_r500847537" expanded>

Need an empty line before method definition.

```
Error: eckstyle] [ERROR] /home/runner/work/tp/tp/src/main/java/athena/ListCommand.java:17: 'METHOD_DEF' should be separated from previous statement. [EmptyLineSeparator]
```
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/28#discussion_r500873202" expanded>

Need a space before `taskDuration`.
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/28#discussion_r500873268" expanded>

Need a space before `taskDuration`.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/28#discussion_r500873473" expanded>

Need a space before `taskDuration`.
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/28#discussion_r500873531" expanded>

Need a space before `taskDuration`.
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/28#discussion_r500985072" expanded>

Prof said cannot using `*` to import. Refer to https://github.com/nus-cs2113-AY2021S1/forum/issues/36
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/29#discussion_r500854680" expanded>

```
Error: eckstyle] [ERROR] /home/runner/work/tp/tp/src/main/java/athena/Ui.java:37: Line is longer than 120 characters (found 132). [LineLength]
```
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/29#discussion_r500854842" expanded>

```
Error: eckstyle] [ERROR] /home/runner/work/tp/tp/src/main/java/athena/Ui.java:39:91: WhitespaceAround: '+' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3) [WhitespaceAround]
```
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/29#discussion_r500854998" expanded>

```
Error: eckstyle] [ERROR] /home/runner/work/tp/tp/src/main/java/athena/Ui.java:63: First sentence of Javadoc is missing an ending period. [SummaryJavadoc]
```
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/29#discussion_r500855127" expanded>

```
Error: eckstyle] [ERROR] /home/runner/work/tp/tp/src/main/java/athena/Ui.java:75: Line is longer than 120 characters (found 127). [LineLength]
```
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/33#discussion_r501573509" expanded>

We should put these things in our JUnit tests. I think it's ok if you want to do it in a different pull request.
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501578005" expanded>

Code here is the same as lines 15-17. We can do `this(taskList)` to avoid repetition.
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501579201" expanded>

Space between `=`.
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501579249" expanded>

Space between `=`.
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501579540" expanded>

Just a nitpick: `counter++` can ignore if you don't care lol
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501580998" expanded>

Repeated code. Can do `addTask(name, startTime, duration, deadline, recurrence, importance, notes, index)`.
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501582428" expanded>

Would be nice to make this a test case.
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501582897" expanded>

Would be nice to make this a test case.
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501583085" expanded>

Wouldn't the index that we assign be different from its index in the list? `tasks.remove(task)` instead?
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/57#discussion_r502744782" expanded>

Adding this parameter will cause the program to not compile. We can leave out this parameter for now.
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/59#discussion_r502866721" expanded>

* `execute` has void return-type, doesn't return anything
*  Should be `deleteCommand` instead of `DeleteCommand`
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/59#discussion_r502866739" expanded>

`ui` needs to be instantiated otherwise it will crash when `execute` tries to run it.
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/59#discussion_r502866796" expanded>

Currently we don't return the printed message as a string so I think we can leave this line out for now. We should later think about how we want to return the printed string for testing purposes.
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/59#discussion_r502867000" expanded>

Both tasks here are assigned the same index.
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/59#discussion_r502871025" expanded>

`deleteCommand.execute` will call `ui.printTaskDeleted`, but `ui` is `null` so it will crash.
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r502867982" expanded>

`taskFilter` should now be `importanceFilter`
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r502868051" expanded>

Continuing the comment in `TaskList` about `getFilteredList(TaskFilter taskFilter)`, we can do `getFilteredList(importanceFilter).getFilteredList(forecastFilter)`.
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r502868091" expanded>

We can just do `return true` here. But I think this is fine too.
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r502868202" expanded>

I think we don't need to add another `ForecastFilter` parameter because `ForecastFilter` is a subclass of `TaskFilter`. In the `Timetable` class I elaborated on how this can be used.

With this, it will be possible to use any type of filters as we add more in the future (for example minus importance filter).
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r502868452" expanded>

Was this for your own testing?
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r503035066" expanded>

I think it is more sustainable to generate a date for this test case.
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r503035096" expanded>

I think it is more sustainable to generate a date for this test case.


</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r503036083" expanded>

We should generate a date for this test case.
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/55#discussion_r502466184" expanded>

lol got this here
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/55#discussion_r502744469" expanded>

We should remove these commented code since we are not using it anymore. If we wanna refer back we can find the old version here on GitHub.
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/55#discussion_r502744510" expanded>

We shouldn't instantiate the `Scanner` in every iteration of the loop. From experience this causes problems with the IO redirection tests.
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/55#discussion_r502744529" expanded>

`taskList` would be a better name than `oldTask`, I believe?
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/66#discussion_r503115092" expanded>

reccurence spelt wrongly lol
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/64#discussion_r503129311" expanded>

I think we can change `Objects.equals(taskForecast, that.taskForecast)` to `taskForecast == that.taskForecast` since we use the `enum` now instead of a `String`.
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/68#discussion_r503273909" expanded>

Yea I think something like `getTask` would be nicer. Also there should be a JavaDoc comment.
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/79#discussion_r503654494" expanded>

Lowercase L in `List`?
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/79#discussion_r503654811" expanded>

> will still execute in a default way.

How about `will execute using the default values for each parameter`?
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/79#discussion_r503655165" expanded>

`the name of the task` instead of `Name of the task`? And same for the other parameters.
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/79#discussion_r503655246" expanded>

> printed with an index

How about `printed with a number` because `index` sounds a bit like jargon?
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/79#discussion_r503655622" expanded>

`the name of the task` instead of `Name`? And same for the other parameters.
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503142860" expanded>

Unnecessary empty lines
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503143052" expanded>

Unnecessary empty line
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503143292" expanded>

Empty lines
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503143545" expanded>

Empty lines
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503147198" expanded>

It would be better override `equals` in `TaskList` instead

https://github.com/AY2021S1-CS2113T-W12-2/tp/blob/30bf904954319f483b762ee3c7f5a378e494c4b7/src/main/java/athena/TaskList.java#L179-L189
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503147264" expanded>

Empty lines
</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503652866" expanded>

Remember to add these files to the .gitignore
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503653094" expanded>

I think `expected` vs `actual` would be a more consistent naming since this was used for our IO tests. But this is fine too.

Other than that, since this is a `BufferedReader` object, it would be nice to have the variable name sound like it, for example `answerFileReader` or `expectedFileReader`? Same goes for `attempt` in this method.
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/62#discussion_r503653613" expanded>

`else` is not needed since this will always be reached when the `if` condition is not satisfied.
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r502417743" expanded>

This shouldn't throw an `AddException`. Maybe a `CommandException`?
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r502418235" expanded>

`getErrorMessage` gives an impression that it is returning something. Perhaps `printErrorMessage` instead? Or return the error message as a string from this?
</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r502439154" expanded>

Also remember to add Javadoc comments for this
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r503321795" expanded>

1 empty line should be enough?
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r503322339" expanded>

I feel that it would be better to have a more specific exception name.
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r503322397" expanded>

I feel that it would be better to have a more specific exception name.
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/96#discussion_r506389922" expanded>

It is not clear what `toggle` does.
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/96#discussion_r506789033" expanded>

Can we use `TaskList` instead? So that we can make use of methods from `TaskList` if needed.
</panel>

<panel  header="**90 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/96#discussion_r506789048" expanded>

Can we call this `TimeAllocator`? A noun instead of a verb since it's an object.
</panel>

<panel  header="**91 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/109#discussion_r507070468" expanded>

`Ui` the `i` is lowercase in our code.
</panel>

<panel  header="**92 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/114#discussion_r507646711" expanded>

`isFlexible` according to coding standards
</panel>

<panel  header="**93 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/114#discussion_r507652703" expanded>

`isFlexible`
</panel>

<panel  header="**94 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/114#discussion_r507653132" expanded>

`isFlexible`
</panel>

<panel  header="**95 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/114#discussion_r507653238" expanded>

`isFlexible`
</panel>

<panel  header="**96 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/114#discussion_r507653441" expanded>

`isTaskFlexible`?
</panel>

<panel  header="**97 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/114#discussion_r507653558" expanded>

`isFlexible`?
</panel>

<panel  header="**98 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/114#discussion_r507654189" expanded>

`isFlexible`? The program still works when there is a method called `isFlexible`
</panel>

<panel  header="**99 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/114#discussion_r507654348" expanded>

`isFlexible`?
</panel>

<panel  header="**100 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/97#discussion_r507636077" expanded>

How about something like `loadTaskListData_commaInTaskAttribute_commaIsReplaced` so that it is more descriptive?
</panel>

<panel  header="**101 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507787783" expanded>

and I think it is good enough to use `"TODAY"` instead of `Recurrence.TODAY.toString()`
</panel>

<panel  header="**102 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507788020" expanded>

What does 5 refer to?
</panel>

<panel  header="**103 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507790453" expanded>

I think it is better to override the `clone` method that is in `Object`.

```
    @Override
    protected Object clone() throws CloneNotSupportedException {
        return super.clone();
    }
```
</panel>

<panel  header="**104 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507791584" expanded>

`getDatesAt` instead? `Date` in plural.

Also, should we be using `getTaskFromNumber` instead?
</panel>

<panel  header="**105 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507806866" expanded>

`getFirstDay` is not so clear. Perhaps `getFirstDateMatchingDay`? Or something more clear?
</panel>

<panel  header="**106 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507807583" expanded>

I think you can just do `recurrenceDates.clear()`
</panel>

<panel  header="**107 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507807936" expanded>

`removeDate` instead?
</panel>

<panel  header="**108 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507809642" expanded>

`"dd-MM".length()` instead? `DATE_TIME_FORMAT` sounds quite confusing.
</panel>

<panel  header="**109 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507810263" expanded>

I suppose we should use the next year if the date has already passed. For example 1 Jan should be in year 2021.
</panel>

<panel  header="**110 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507812119" expanded>

Unused import?
</panel>

<panel  header="**111 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507817088" expanded>

I think can use `task.isFlexible()` here, which has clearer intention than `task.getDates() == null`.
</panel>

<panel  header="**112 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507826908" expanded>

Can this be `isDateIncluded` instead?
</panel>

<panel  header="**113 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507839437" expanded>

I think `filterDates` is not very clear. How about something like `removeExcludedDates`?
</panel>

<panel  header="**114 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508151618" expanded>

The `isFlexible` attribute of this class is to determine whether to get flexible tasks or not flexible tasks. So, this needs to be `task.isFlexible() ^ isFlexible`. But anyways I think `isFlexible` is not very clear. How about something like `filterFlexibleTask` or `doesIncludeFlexibleTask`
</panel>

<panel  header="**115 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508155059" expanded>

Change to `isDateIncluded` too?
</panel>

<panel  header="**116 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508155219" expanded>

Remember to remove this because it's no longer used.
</panel>

<panel  header="**117 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508204615" expanded>

I think it is unclear to say `today`, since `today` means only `TODAY` in our program? Something like`thisDayOfWeek` instead?
</panel>

<panel  header="**118 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508205341" expanded>

Same as above for `today`.
</panel>

<panel  header="**119 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508205570" expanded>

Slight nit: `testRemove` instead of `testremove`.
I also think `day` could be more descriptive, so that from the name we can tell what the test case is testing. How about `filterToday` or something that shows it is testing for filtering based on `TODAY`?

Also the method doesn't return `true` so this is not very precise. How about `returnsOnlyTodayDate`?

 Same goes for the methods below.
</panel>

<panel  header="**120 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508206886" expanded>

Is this supposed to be `Forecast.WEEK` instead, according to the comment?
</panel>

<panel  header="**121 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508207072" expanded>

Unused method? It doesn't seem to do exactly as the method name suggests too.
</panel>

<panel  header="**122 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/110#discussion_r507067292" expanded>

Also remember to add a test for the exception.
</panel>

<panel  header="**123 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/110#discussion_r507067601" expanded>

I think `toStringDetails` sounds weird. How about `getDetails()` or `getDetailsAsString()`? 
</panel>

<panel  header="**124 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/110#discussion_r507068592" expanded>

How about the name `taskDetails` instead of `task`? Because we always use `task` for `Task` objects.
</panel>

<panel  header="**125 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/110#discussion_r507069133" expanded>

I think we should refactor this into another method.
</panel>

<panel  header="**126 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/110#discussion_r507856199" expanded>

Should `commandAndDetails` just be `commandType`?
</panel>

<panel  header="**127 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/110#discussion_r507857428" expanded>

`parsedCorrectly` should start with lowercase
</panel>

<panel  header="**128 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/110#discussion_r507857571" expanded>

lowercase `parsedCorrectly`
</panel>

<panel  header="**129 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/110#discussion_r507868368" expanded>

I think if the user inputs `l3 f/WEEK`, the shortcut won't be expanded, and then the command will fail. I think `parseCommandType` and `parseShortcutCommand` can be combined together since they look at the first word in the command.
</panel>

<panel  header="**130 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/127#discussion_r508915422" expanded>

Need a space after the `*` for them to show as bullet points.
</panel>

<panel  header="**131 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/122#discussion_r508299781" expanded>

Oh since we're not using it anymore let's remove it.
</panel>

<panel  header="**132 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/128#discussion_r509024640" expanded>

`Allocator` should start with lowercase a
</panel>

<panel  header="**133 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/128#discussion_r509025957" expanded>

Why does this throw an `Exception`?
</panel>

<panel  header="**134 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/128#discussion_r509027347" expanded>

Since this is a class/object I think it would be better to name it with a noun. Something like `TaskTimeComparator`? I think that this also helps us immediately tell that it is a comparator when looking at the name.
</panel>

<panel  header="**135 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/128#discussion_r509028294" expanded>

Was this for testing?
</panel>

<panel  header="**136 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/128#discussion_r509028891" expanded>

Missed this out last time. Since `fixedTask` and `flexibleTask` are lists, their name should be in plural form as per the coding standards (`fixedTasks` and `flexibleTasks`).
</panel>

<panel  header="**137 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/130#discussion_r509834147" expanded>

After #131 it will be in `LogicManager`.
</panel>

<panel  header="**138 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/130#discussion_r509834173" expanded>

Lol you forgot to finish? Or we continue this next time?
</panel>

<panel  header="**139 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/130#discussion_r509834379" expanded>

Strictly speaking this shouldn't be part of this PR. But this is good.
</panel>

<panel  header="**140 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510651146" expanded>

> the best theoretical timetable...

I feel that `theoretical` will raise some questions from the reader (aka Aileen). I think we can remove this word.
</panel>

<panel  header="**141 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510651632" expanded>

Wanna give example commands?
</panel>

<panel  header="**142 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510652248" expanded>

`theoretical` same as other comment
</panel>

<panel  header="**143 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510685421" expanded>

> It splits the user input based on command type...

`based on the command type` instead of `based on command type`?

Just a suggestion: I think it is easier to read if we say "the user can provide the parameters in any order" in a separate sentence.
</panel>

<panel  header="**144 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510686022" expanded>

I think it is not clear what `It` refers to. How about mentioning `Parser`, `AddCommand` and `TaskList`.
</panel>

<panel  header="**145 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510686488" expanded>

> calls the `AddCommand` class

"creates an `AddCommand` object" would be more precise?
</panel>

<panel  header="**146 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510686759" expanded>

> Writes the current task into...

Should be "Writes the current task list into"?
</panel>

<panel  header="**147 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510687169" expanded>

> The input will be parsed into `LogicManager`

passed instead of parsed?

> which executes the `AddCommand` class

creates an `AddCommand` object would be more precise
</panel>

<panel  header="**148 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/144#discussion_r510688280" expanded>

> returns a boolean value "false" to the active flag

I think false can be written like `false` because it is code.

And we got an active flag?
</panel>

<panel  header="**149 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509368497" expanded>

What are these?
</panel>

<panel  header="**150 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509371013" expanded>

I think we should name it as something that sounds like a `Comparator`, or at least a noun. Something like `TaskImportanceComparator`?
</panel>

<panel  header="**151 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509371338" expanded>

Similar to the other comparator, something like `TaskTimeComparator`?
</panel>

<panel  header="**152 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509372186" expanded>

How about

```
if (taskFilter instanceof ForecastFilter) {
    ...
}
else {
    filteredTasks.add(task);
}
```

since the other filters don't need to do anything.
</panel>

<panel  header="**153 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509372396" expanded>

Unused import?
</panel>

<panel  header="**154 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509373218" expanded>

`flexibleTaskList` and `fixedTaskList` since they are tasklists?
</panel>

<panel  header="**155 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509373702" expanded>

Is this used?
</panel>

<panel  header="**156 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509392658" expanded>

Can use `assertEquals`
</panel>

<panel  header="**157 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509394432" expanded>

This sounds like it's for setting today's date. But I think the intention here is to change the date that is to be filtered? I think we should make a new `Forecast` value for this purpose instead of reusing `TODAY` because it can be quite confusing. In that case, I find `filterDate` to be clearer than `todayDate` too.
</panel>

<panel  header="**158 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509965071" expanded>

I realized that when the `Forecast` is `DAY` then it must have a date. So, it would be good to have it part of the constructor. How about having a second constructor that takes in a `LocalDate`, which sets the forecast to be `Forecast.DAY`.
</panel>

<panel  header="**159 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509965394" expanded>

Remember to remove this.
</panel>

<panel  header="**160 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509966807" expanded>

Shouldn't it be `timeInfo.getStartTime().getHour()` in the `set`? Otherwise the loop seems to be pointless.
</panel>

<panel  header="**161 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509968207" expanded>

It would be good to refactor this code segment into methods to maintain single level of abstraction.
</panel>

<panel  header="**162 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509969304" expanded>

nit: `int duration` instead of `Integer span` to keep things consistent, since we normally use `int` for integers?
</panel>

<panel  header="**163 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509972459" expanded>

`temp` as an argument name/being part of a method name is probably not a very good idea
</panel>

<panel  header="**164 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509972733" expanded>

Remember to remove
</panel>

<panel  header="**165 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509973356" expanded>

Why can't we just remove the task right here?
</panel>

<panel  header="**166 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509974588" expanded>

Would be good to refactor this segment to maintain a single level of abstraction.
</panel>

<panel  header="**167 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509975455" expanded>

Suggestion: Can do `undefinedTimeTasks.isEmpty()` 
</panel>

<panel  header="**168 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509983387" expanded>

I think it would be good to make a variable for `end - space - pos` otherwise it takes some brain power to know what this part does exactly.
</panel>

<panel  header="**169 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509984218" expanded>

I thought that `count` would need to start at the starting hour that `temp` started at?
</panel>

<panel  header="**170 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509985471" expanded>

Would be good to refactor this part into methods to maintain single level of abstraction.
</panel>

<panel  header="**171 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509987809" expanded>

Is this supposed to throw a `TaskNotFoundException`? If this throws a `TaskNotFoundException`, the user will receive an error message saying the task cannot be found. I think this would be really confusing to the user.
</panel>

<panel  header="**172 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509988822" expanded>

How about something like `spaceSlots` instead of `temp`?
</panel>

<panel  header="**173 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510636611" expanded>

I think `date` is only meaningful when `forecast == Forecast.DAY` so it might be better that we don't accept a `forecast` argument.
</panel>

<panel  header="**174 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510639048" expanded>

Is it supposed to be `day &gt; 31`?
</panel>

<panel  header="**175 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510641244" expanded>

Suggestion: How about `nextVacantSlotStart` or something that indicates that this finds the start of the next vacant time slot?
</panel>

<panel  header="**176 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510641481" expanded>

Suggestion: How about `nextVacantSlotEnd` or something that indicates that this finds the end of the next vacant time slot?
</panel>

<panel  header="**177 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510642597" expanded>

Remember to remove.
</panel>

<panel  header="**178 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510644676" expanded>

I think it would be better to say that this method will store the tasks that did not get assigned yet into this parameter. Otherwise, it seems like the caller has to provide said tasks.
</panel>

<panel  header="**179 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510646418" expanded>

Suggestion: `active` doesn't clearly describe why the loop has to continue running, a name that describes so would be nice
</panel>

<panel  header="**180 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510648585" expanded>

`taskNumber` from line 161 is unused.
</panel>

<panel  header="**181 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/118#discussion_r508916158" expanded>

I think that for this one, it would be good to catch the `InvalidCommandException`, to ensure it is this specific exception that is being thrown.
</panel>

<panel  header="**182 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/119#discussion_r508200630" expanded>

I believe the test should fail if the this part fails, so we shouldn't catch and handle this exception.
</panel>

<panel  header="**183 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/119#discussion_r508200683" expanded>

I believe the test should fail if the this part fails, so we shouldn't catch and handle this exception.
</panel>

<panel  header="**184 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/119#discussion_r508202169" expanded>

I don't think we should print the stack trace to the user at all (as done by `e.printStackTrace()`) no matter what happens. We should give an error message saying the program failed to load the file. Perhaps we could make our own exception like `StorageLoadFailedException` so that we can customize its behaviour too?

Actually, I realized `ui.printInvalidTask` is ambiguous to the user too. The user wouldn't know which task is disposed and this is not really a good thing. I think it would be good to change this in this PR too.

https://github.com/AY2021S1-CS2113T-W12-2/tp/blob/4d422985a6a9c8baadd0397b5c10a979bbb5267b/src/main/java/athena/Ui.java#L134-L139

Also it is not immediately obvious that `ArrayIndexOutOfBoundsException` occurs when the save file is corrupted. Perhaps we should catch this exception in `Storage` and throw a custom exception like `StorageCorruptedException`.
</panel>

<panel  header="**185 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/119#discussion_r510770066" expanded>

`StorageException` instead?
</panel>

<panel  header="**186 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/8#discussion_r499256191" expanded>

@alstontham I think it would be good to overload the `toString` method so that we can print the object directly. You can work on printing out a `Date` and `TaskList` on your side first then we can move that code here later. 

Or you can fetch this branch and modify it, then make a pull request to my branch.
</panel>

<panel  header="**187 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#discussion_r502753132" expanded>

Yea I tried without and the program might crash if the user doesn't give it in upper case.
</panel>

<panel  header="**188 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#discussion_r502753179" expanded>

I agree!
</panel>

<panel  header="**189 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#discussion_r502753816" expanded>

Oh wait, one allows the programmer to choose the index while the other will automatically assign an index. But yea there's repeated code so I'll modify the second `addTask` to call the first `addTask`.
</panel>

<panel  header="**190 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502915944" expanded>

Actually I wasn't sure should the number start from 0 or 1. I thought our first task would start from 1?
</panel>

<panel  header="**191 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502915961" expanded>

This was taken from #55. Can you comment over there?
</panel>

<panel  header="**192 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502916010" expanded>

How about moving `number` to the first argument for `addTask` as well?
</panel>

<panel  header="**193 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502928406" expanded>

Oops thanks for noticing
</panel>

<panel  header="**194 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502928412" expanded>

Oops thanks for noticing
</panel>

<panel  header="**195 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/99#discussion_r506941664" expanded>

Oh right good catch
</panel>

<panel  header="**196 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/99#discussion_r506941845" expanded>

I removed the runtest.sh from GitHub actions in 732c687 because I realized this is not practical.
</panel>

<panel  header="**197 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r507823040" expanded>

Oh I was planning to refactor `-------` into a constant. Will do that tomorrow.
</panel>

<panel  header="**198 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r507825145" expanded>

It turns out that the one in 115 was looking for the first date that matches the day, e.g. given Wednesday return 21 Oct 2020. So it's different from this. But yea I agree it would be better for this to be somewhere else, so that it can also be commonly used by the date related tests.
</panel>

<panel  header="**199 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r507825623" expanded>

Nope since the checks passed
</panel>

<panel  header="**200 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r508311201" expanded>

At first I was thinking of putting it in `Ui`, and then I feel that eventually we would need to refactor them to somewhere more focussed. Then I realized the somewhere is `Timetable`, since it contains all the related attributes needed to draw the timetable. What do you think?
</panel>

<panel  header="**201 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r509019768" expanded>

Ok will leave this to you
</panel>

<panel  header="**202 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r509117263" expanded>

Oh thanks I forgot about that.
</panel>

<panel  header="**203 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/2#issuecomment-702034671" expanded>

Done in #4 
</panel>

<panel  header="**204 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/3#issuecomment-702034794" expanded>

Done in #4
</panel>

<panel  header="**205 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/6#issuecomment-702034962" expanded>

Done in #4 
</panel>

<panel  header="**206 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/8#issuecomment-703260677" expanded>

@Kafcis I think we don't need to store the timetable generated from the task list in a file, because the same timetable can always be generated from the same task list. Looking at the scale of this, there won't be much impact in performance if we generate the timetable when the program starts. But if you wanna do it, you can use `getTimetable()` to get the week's timetable.

@alstontham The timetable given to the `Ui` will be a list of `TimetableDay` objects, each containing a date and a list of `Task`s. So you can work on printing that now.
</panel>

<panel  header="**207 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#issuecomment-703608857" expanded>

Can you add a method to get the whole list without any filtering?
</panel>

<panel  header="**208 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/25#issuecomment-704003536" expanded>

Actually there's no checkstyle issues here lol
</panel>

<panel  header="**209 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/19#issuecomment-704818407" expanded>

I feel that this can be just a method inside `Task`. Have we discussed this?
</panel>

<panel  header="**210 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/21#issuecomment-705726315" expanded>

Done in #34 
</panel>

<panel  header="**211 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/35#issuecomment-705917217" expanded>

Er this PR has error with checkstyle test after you merged master into it. We shouldn't have merged.
</panel>

<panel  header="**212 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/47#issuecomment-705996593" expanded>

Yea if `main` throws the exception it's the same as asking the program to crash because nobody is handling it.
</panel>

<panel  header="**213 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/42#issuecomment-706167567" expanded>

Done in #45
</panel>

<panel  header="**214 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#issuecomment-706174411" expanded>

Btw merge from master so that the checkstyle problems are fixed.
</panel>

<panel  header="**215 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#issuecomment-706496543" expanded>

Thanks. I agree it would be better to have a `Recurrence` class so that we can support different types of values.
</panel>

<panel  header="**216 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#issuecomment-706676222" expanded>

Also continuing the work in #59.
</panel>

<panel  header="**217 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/55#issuecomment-706686374" expanded>

I just tested and realized sending exit doesn't actually exit the program. You forgot to check for that.
</panel>

<panel  header="**218 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/59#issuecomment-706690825" expanded>

Continued in #61 
</panel>

<panel  header="**219 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#issuecomment-706691042" expanded>

I merged #55 into this so that I can also catch exceptions. We can wait until that is merged before reviewing this if there are too many things.
</panel>

<panel  header="**220 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#issuecomment-706705967" expanded>

I think each change in the code should be accompanied with the test code so that we can merge with confidence that it works as intended.
</panel>

<panel  header="**221 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/70#issuecomment-707141791" expanded>

My bad now it is fine, not sure why it crashed just now. I should have checked what went wrong exactly.
</panel>

<panel  header="**222 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#issuecomment-707147416" expanded>

I think this would fix #73. Can confirm?
</panel>

<panel  header="**223 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/58#issuecomment-707471417" expanded>

Left with `AddCommand`
</panel>

<panel  header="**224 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/72#issuecomment-707473762" expanded>

Test is failing because of `ForecastFilterTest`. Should be ok once #78 is merged.
</panel>

<panel  header="**225 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/67#issuecomment-707537782" expanded>

Done in #79 
</panel>

<panel  header="**226 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#issuecomment-707539611" expanded>

Also closes #69
</panel>

<panel  header="**227 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/93#issuecomment-708147194" expanded>

@wish2023 `ForecastFilterTest` dieded again
</panel>

<panel  header="**228 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/53#issuecomment-708977252" expanded>

We should eventually get rid of this sloppy exception handling.

https://github.com/AY2021S1-CS2113T-W12-2/tp/blob/7d0912d0fa6204dc74fc2f102ac7f402ee315eb4/src/main/java/athena/task/Task.java#L66-L73
</panel>

<panel  header="**229 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/71#issuecomment-708978638" expanded>

Did we fix this?
</panel>

<panel  header="**230 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/97#issuecomment-710030862" expanded>

There would be a problem when the task details contains a `|`. I think `commareplacement` is too long if we want the save file to be conveniently edited by the user.
</panel>

<panel  header="**231 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/99#issuecomment-710766689" expanded>

Fix #98 
</panel>

<panel  header="**232 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/99#issuecomment-710940206" expanded>

@wish2023 I'm thinking of merging this first so that we can move on with the other PRs. Will open another issue to address the comments you left. Ok?
</panel>

<panel  header="**233 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/98#issuecomment-711143236" expanded>

We should also test that 7 days in the week (Monday to Sunday) are included when filtering by week. And address the comments left in #99.
</panel>

<panel  header="**234 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/100#issuecomment-712257306" expanded>

Can we close this? Done in #114 
</panel>

<panel  header="**235 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/83#issuecomment-712257811" expanded>

No longer a problem
</panel>

<panel  header="**236 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/95#issuecomment-712258602" expanded>

Can close? Done in #96 
</panel>

<panel  header="**237 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/103#issuecomment-712260978" expanded>

Some work done in #96 and #115 
</panel>

<panel  header="**238 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/102#issuecomment-712261546" expanded>

Can be done together with #103 
</panel>

<panel  header="**239 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/118#issuecomment-712681271" expanded>

Remember to fix the failing test too.
</panel>

<panel  header="**240 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/102#issuecomment-712682074" expanded>

This is done already?
</panel>

<panel  header="**241 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#issuecomment-712689749" expanded>

Good catch. Currently if there are overlapping tasks, the second task will not show up in the timetable. I think we should leave this to the `TaskList` and `TimeAllocator` to ensure this doesn't happen? Because I don't think we should allow this to happen at all.
</panel>

<panel  header="**242 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#issuecomment-712690476" expanded>

Btw for now, if the task duration exceeds the sleep time, it will be cut off at the sleep time. Perhaps we should push back the sleep time when this happens? We can open an issue for this if so.
</panel>

<panel  header="**243 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#issuecomment-713358464" expanded>

Ya it shows for the week for now. After this is merged I will let it be based on the `ForecastFilter` (#129).
</panel>

<panel  header="**244 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/120#issuecomment-713741748" expanded>

We might need to postpone to v2.1 because our OOP is not really good enough to allow us to store this information anywhere, since our `Timetable` is instantiated on the spot when `list` is called. We would need a `Model` class that interfaces to all our backend stuff like `TaskList` and `Timetable` before implementing this.
</panel>

<panel  header="**245 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/113#issuecomment-713744915" expanded>

Now we cannot do this because we are loading the `Task` attributes from the `TaskList` and filling them into the `EditCommand`. We can change `Task.edit` to instead check if the method arguments are `null`, and only modify the `Task` attributes if they are not `null`. By doing this, we can improve testability since `EditCommand` no longer needs to load the attributes from a `Task`.
</panel>

<panel  header="**246 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/131#issuecomment-714218809" expanded>

Resolved in #142 
</panel>

<panel  header="**247 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/143#issuecomment-715202951" expanded>

In DG it says `ColourManager` but in code we have `Color`.
</panel>

<panel  header="**248 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#issuecomment-715225314" expanded>

Oh ok no prob
</panel>

<panel  header="**249 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/125#issuecomment-715867258" expanded>

Don't allow user to add tasks from 12am to 8am.
</panel>

</panel>


<panel type="info" header="### 2. CHONG JUN XIANG `@Chongjx` (152 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/34#discussion_r500718024" expanded>

Is it possible to catch the exception with this function and return a new IncorrectCommand("Missing info" or "No keyword") here
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/34#discussion_r500718798" expanded>

I am thinking that the printFindNotesMessage in InterfaceManager can be a static function and it returns a string of the formatted note. This is to consolidate all the printing to be only done inside the main runLoop function
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/34#discussion_r500718928" expanded>

Make this function return the string instead of printing them out directly
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/34#discussion_r500917946" expanded>

Can use InterfaceManager.LS (line separator) for the \n to standardize all new line
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/35#discussion_r500977621" expanded>

since you are using get function, maybe can change all the Strings to private type in the respective class
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/35#discussion_r500978245" expanded>

I think you can import these from the tagManager.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/35#discussion_r500979368" expanded>

The person has to enter the prefix for every tag they want to add so I think can leave it as "TAG" to avoid confusion.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/35#discussion_r501047392" expanded>

Thats also viable, also can add in "TAG COLOR" too
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/38#discussion_r501694296" expanded>

Don't have to make it static, each Command class have a TagManager object, can access the tagManager from there
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/38#discussion_r501695988" expanded>

Get from the tagManager instead.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502127258" expanded>

the name of the variable can be COMMAND_WORD since now add event is split into another class
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502207905" expanded>

Can replace the "Note deleted:" with your command successful message 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502524097" expanded>

Violates coding standard
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502524493" expanded>

Likewise violates coding standard
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502525223" expanded>

Nice function here.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502525825" expanded>

Dont need to have this catch here. Make this function throw a SystemException, the parseCommand function will catch it.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502526632" expanded>

Should there be some error handling here? Like incase there are duplicate events.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502527668" expanded>

Can rename COMMAND_WORD_EVENT to COMMAND_WORD, previously used this to separate COMMAND_WORD_NOTE but since now this has it's own class can just shorten it.

You are also missing the COMMAND_USAGE_MESSAGE
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502529202" expanded>

I used the wrong "Boolean" when creating the class, can change it to "boolean"
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502535308" expanded>

Makes sense.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502542003" expanded>

prepareAddNote (and the other prepare functions) do not have the catch block for SystemException. This catch will be handled inside parseCommand. The only exception to catch in prepare functions should only be NullPointerException, ArrayIndexOutOfBoundsException and maybe date time related exception for this function. 
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502763902" expanded>

Can make this private and have a getter function for it to be used in HelpCommand
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502773839" expanded>

Can replace the \n with InterfaceManager.LS for consistency.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502774115" expanded>

throw new SystemException instead of return a new IncorrectCommand. And can remove the catch for SystemException.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502809547" expanded>

There should be a catch for NullPointerException in the event that the user just enter the command only without any space after it. i.e. "add-e"
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502893933" expanded>

This two should be private members.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502895205" expanded>

This function can be moved into Parser. The original intention of this class is to create a list of acceptable date time formats and returns date time info in a specific format. 
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/45#discussion_r502804685" expanded>

There should not be any return new IncorrectCommand here as well as the catch block for SystemException. Can change the catch block for ArrayIndexOutBoundsException and NullPointerException to throw a new SystemException.

Suggest to split the catching of the two exceptions mentioned above to throw a more specific SystemException. 
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/45#discussion_r502804843" expanded>

Prepare functions should throw SystemException if necessary. 
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/45#discussion_r502849080" expanded>

The exception should be missing index prefix instead for your case.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/45#discussion_r502849184" expanded>

Would it ever reach this point? If so, can change it to throw SystemException instead of return new IncorrectCommand for consistency with other prepare functions. 
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/50#discussion_r503031698" expanded>

Actually you can return a new DeleteNoteCommand within the switch case. So it should return immediately after reading a title or an index. If it reaches the code after the switch case can throw a systemException, say missing title/index or missing description

</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/49#discussion_r503016869" expanded>

Is it necessary to create a new Note object here?
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/49#discussion_r503017326" expanded>

Maybe can make this a static final string as COMMAND_UNSUCCESSFUL_MESSAGE
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/49#discussion_r503017643" expanded>

A space after the comma
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503101376" expanded>

Have you tested listing notes with a non-existing tag? i.e. list notes with CS2113 tag, but there is no such tag in the map at all? getTag returns null for such case so I think you should only add those that are not null.

```suggestion
            Tag tag = tagManager.getTag(tag);
            if (tag != null) {
                tagList.add(tag);
            }
```

</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503103724" expanded>

Can do a check for the size of notes, if it has no element can return an unsuccessful message.
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503265376" expanded>

This can be private since its only used within this class.
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503266270" expanded>

Correct me if I am wrong but I don't think JavaDoc works inside function? Like it won't be displayed on the html.

p.s. I am referring to Narzyl comment.
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503267490" expanded>

Is there a need to append to the noteString or can you just return the unsuccessful message?
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/53#discussion_r503263247" expanded>

I think it would look nicer if the tags are on the same line as the title. i.e.

CS2113 Notes [CS2113] [Important] [School]
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/58#discussion_r503255173" expanded>

Shld this comment be above? or somewhere in execute? Looks a little out of place
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503271119" expanded>

```suggestion
    private static final String INDEX_OUT_OF_RANGE_MESSAGE = "The index you specified is out of range. "
            + "Please specify the index that is indicated when you print the event list";
```
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503275589" expanded>

For the "Year-Month(1-12)"

Is the user suppose to enter the year followed by the month, 2020-1, or its just the month itself? 
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503278024" expanded>

I believe Ramana is renaming all the exception with "WRONG" to "INVALID", can follow that.
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503279154" expanded>

Rename as event? Preferably not to use single letter for variables unless its for iterators.
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503281053" expanded>

The parameter has to be an Object? Is there any instance that this will be used to compare non-Reminder objects?
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503285683" expanded>

Not to sure about this, but is there a need to create a class for this? Does implementing to a class, say Event or DateTimeManager and then overriding in that class work? Like wise for the DateTimeComparator, since a class can implements multiple interfaces.
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503290180" expanded>

Can declare these numbers as static final variables
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r504371117" expanded>

I'm not sure if I remember correctly but previously Ramana mentioned that can return a new RemindCommand() directly right, since you are not using userMessage
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/65#discussion_r504718860" expanded>

Don't have to create new object for all. In your case can just create Timetable, and pass in null for the other parameters
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505529224" expanded>

```suggestion
        return Formatter.LS + COMMAND_SUCCESSFUL_MESSAGE + noteString.toString();
```
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505529338" expanded>

```suggestion
            return Formatter.LS + COMMAND_UNSUCCESSFUL_MESSAGE_INVALID_TAG;
```
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505529601" expanded>

```suggestion
                return Formatter.LS + COMMAND_UNSUCCESSFUL_MESSAGE_EMPTY_NOTEBOOK;
```
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505529746" expanded>

```suggestion
            return Formatter.LS + COMMAND_SUCCESSFUL_MESSAGE + noteString.toString();
```
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505531591" expanded>

```suggestion
    private static final String NOTUS_LOGO = Formatter.LS
```
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505532244" expanded>

'''suggestion
            + Formatter.LS
            + "     .-') _               .-') _                 .-')    "
            + Formatter.LS
            + "    ( OO ) )             (  OO) )               ( OO ).  "
            + Formatter.LS
            + ",--./ ,--,'  .-'),-----. /     '._ ,--. ,--.   (_)---\\_) "
            + Formatter.LS
            + "|   \\ |  |\\ ( OO'  .-.  '|'--...__)|  | |  |   /    _ |  "
            + Formatter.LS
            + "|    \\|  | )/   |  | |  |'--.  .--'|  | | .-') \\  :' '.  "
            + Formatter.LS
            + "|  .     |/ \\_) |  | |  |   |  |   |  | |( OO ) '..'''.) "
            + Formatter.LS
            + "|  |\\    |    \\ |  | |  |   |  |   |  | | '-' /.-._)   \\ "
            + Formatter.LS
            + "|  | \\   |     ''  '-'  '   |  |  ('  '-'(_.-' \\       / "
            + Formatter.LS
            + "'--'  '--'       '-----'    '--'    '-----'     '-----'  "
            + Formatter.LS;

'''
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505532429" expanded>

```suggestion
            + NOTUS_LOGO + Formatter.LS
```
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505532511" expanded>

```suggestion
    private static final String ENTER_COMMAND_MSG = Formatter.LS
```
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r505971584" expanded>

Can move this over to formatter class, and have a static function to get this.
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/84#discussion_r506272491" expanded>

'''suggestion
    private static final String NOTUS_LOGO = LS
            + LS
            + "     .-') _               .-') _                 .-')    "
            + LS
            + "    ( OO ) )             (  OO) )               ( OO ).  "
            + LS
            + ",--./ ,--,'  .-'),-----. /     '._ ,--. ,--.   (_)---\\_) "
            + LS
            + "|   \\ |  |\\ ( OO'  .-.  '|'--...__)|  | |  |   /    _ |  "
            + LS
            + "|    \\|  | )/   |  | |  |'--.  .--'|  | | .-') \\  :' '.  "
            + LS
            + "|  .     |/ \\_) |  | |  |   |  |   |  | |( OO ) '..'''.) "
            + LS
            + "|  |\\    |    \\ |  | |  |   |  |   |  | | '-' /.-._)   \\ "
            + LS
            + "|  | \\   |     ''  '-'  '   |  |  ('  '-'(_.-' \\       / "
            + LS
            + "'--'  '--'       '-----'    '--'    '-----'     '-----'  "
            + LS;
'''
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/89#discussion_r507053990" expanded>

The message is from pin command
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/89#discussion_r507054086" expanded>


```suggestion
💡 If no tag color is specified, the color of the tag will be that of the default white color.
```
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/90#discussion_r506966116" expanded>

Are you moving all the message to a class? If so you can call the format function inside ExitCommand execute so that there is no need for an additional call here
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/90#discussion_r506966256" expanded>

Want to move all the asci art and messages to another class?
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/90#discussion_r507172881" expanded>

I dont think this class need a test since its just messages.
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506917072" expanded>

Can this be a function in notebook, say getNote(String noteTitle) and return true/false or the Note object/null. There should not be an ArrayList needed.
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506917685" expanded>

Is there a need to get the content first?
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506920491" expanded>

Can refactor most of this into inputContent(), including the do while.

Eventually it should just be:

content = inputContent;

if (content == null) {
return Formatter.formatMessage(unsuccessful message);
} else {
note.setContent(content);
...
...
...
return Formatter.formatMessage(successful message +...)
}
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506921595" expanded>

No need to check if getTagsName is blank. Will do the fix on the formatter side.
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506922573" expanded>

Is systemException thrown anywhere in Formatter?
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506924172" expanded>

Make the function return the boolean instead of throwing exception? Also, should the equals be equalsIgnoreCase?
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506925507" expanded>

No need for this exception since its the same as the COMMAND_UNSUCCESSFUL_MESSAGE in your deleteCommand. I have added my comment on the function to return the boolean instead of throwing exception.
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506926265" expanded>

Unused import package

```suggestion
```
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506927889" expanded>

Catch the StringIndexOutOfBoundsException within the function and return null instead.
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506927945" expanded>

Unused import package?
```suggestion
```
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r507620723" expanded>

There is a notebook.getNote(index) function, can use that instead for simplifcation
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r507628166" expanded>

Possible to let notebook.deleteNote(index) return a boolean as well. So that can move the isDeleted outside of the if else (titleIsBlank) and do a consolidated return..
i.e.

if (titleIsBlank) {
title = getTitle()
isDeleted = notebook.deleteNote(index)
} else {
isDeleted = notebook.deleteNote(title)
}

if isDeleted
return success else return unsuccessful
 

</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509960435" expanded>

He did that in the execute return, since this is a private static final, the time period cannot be added here.
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r508994937" expanded>

Is there a need to new the array list here?
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r508996070" expanded>

No need to have this variable here. If title is blank, you can reuse the variable "title" and assign the title here. At the end you will only need 1 return Formatter.formatString(ARCHIVE_NOTE_MESSAGE + title);
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r508996800" expanded>

Why is there a need for archivedNotesList? Since all the note can only have unique names, wont it only return 1 note object? There is a getNote(title) function in notebook, you can use that instead.
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r508998491" expanded>

getNotes.get(i) can be replaced with getNote(i)
</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r508998849" expanded>

Is there a need to new the arrayList here? Ideally, ListNoteCommand should just call a function in notebook, say getNotes(bool isSorted, arrayList&gt;Tag>) (currently is only getNotes(), you can overload it). All logic handling should be within notebook class itself to sort and return the requested arraylist of note. This is also for reusability, having the function in the notebook instead in this ListNoteCommand Class. Do refer to the word doc I shared.
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509001403" expanded>

All formatting should be inside formatter class. Can change the formatNotebook to formatNotes(arrayList Notes)
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509001537" expanded>

Similar to my comment for archiveNoteCommand
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509002165" expanded>

Unused import statement
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509002237" expanded>

new in the constructor
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509003460" expanded>

This function shld be split into 2. 1 is getArchivedNotes() where it just return the arrayList. Another function is archiveNote(int index), overloaded with archieveNote(string title). ArchiveNoteCommand will call this function and this function will handle will removing of note from the original list and adding into the archivedNotes arrayList
</panel>

<panel  header="**90 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509003742" expanded>

Likwise there should be an function for unarchiveNote(int index), unarchiveNote(string title)
</panel>

<panel  header="**91 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509845453" expanded>

```suggestion
```
</panel>

<panel  header="**92 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509845483" expanded>

```suggestion
```
</panel>

<panel  header="**93 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509845826" expanded>

Discussed that archiveNotes(title) should return a boolean to check if the notebook manage to archive the note successfully
</panel>

<panel  header="**94 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509845971" expanded>

```suggestion
```
</panel>

<panel  header="**95 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509846968" expanded>

In what situation will this happen?
</panel>

<panel  header="**96 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509849904" expanded>

Same comment as ArchiveNoteCommand
</panel>

<panel  header="**97 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509850789" expanded>

I think @prachi2023 has this line to display the info for pin note command. Can have the function as getPinnedString()
</panel>

<panel  header="**98 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509852846" expanded>

The Boolean notebookToggle can be renamed to isPinned or something similar to better identify its purpose.
</panel>

<panel  header="**99 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509853344" expanded>

As discussed, change the parameter ArrayList&gt;Note> to take in a boolean fromOriginalNoteList or something similar and do a if else statement to determine which arrayList to get the note from. Also, consider the case that the note does not exist, what will the stream return?
</panel>

<panel  header="**100 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509854058" expanded>

No need for this 1 line function.
</panel>

<panel  header="**101 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509854191" expanded>

Handle the case when the noteTitle does not exist.
</panel>

<panel  header="**102 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509855072" expanded>

just do notes.remove(index) here
```suggestion
        notes.remove(index);
```
</panel>

<panel  header="**103 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509855449" expanded>

```suggestion
        archivedNotes.remove(index);
        notes.add(unarchivedNote);
```
</panel>

<panel  header="**104 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509855804" expanded>

Similar to archiveNote, handle if title does not exist.
</panel>

<panel  header="**105 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509856202" expanded>

No need to have the formattedString if its just passing an empty string into the function. 
</panel>

<panel  header="**106 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509856593" expanded>

can remove the last parameter for the function. Suggested way:

formattedString = getNoteString(pinnedHeader, pinned);
formattedString = formattedString.concat(getNoteString(unpinnedHeader, unpinned)
</panel>

<panel  header="**107 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509856754" expanded>

Change this to a local variable rather than pass in by parameter
</panel>

<panel  header="**108 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509857314" expanded>

Why do you use LS? Wont the output have 2 empty lines? and the sides will be broken? i.e.

||  Title ....... ||
&gt;&gt; LS here>>
|| Content...||
&gt;&gt; LS here>>
=========
</panel>

<panel  header="**109 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509943405" expanded>

Looks clean now!
</panel>

<panel  header="**110 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509961680" expanded>

This should be formatEvents or formatTimetable. See suggestion for formatEvent(event) in the #108 
</panel>

<panel  header="**111 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509963384" expanded>

These functions can just sort and compare the events and eventually just return an arrayList of event. 
</panel>

<panel  header="**112 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509968398" expanded>

Possible to change the parameter such that it takes in an arrayList of events instead of HashMap&gt;Month, HashMap&gt;Integer, ArrayList&gt;Event>>> timetable?
</panel>

<panel  header="**113 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509969022" expanded>

In terms of reusability:
for (Event event: events) {
formattedString = formattedString.concat(formatEvent(event));
}
</panel>

<panel  header="**114 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r510035823" expanded>

There is not much difference, I use concat mainly because intellij will give warning for using += in loop, so I use concat for all cases.
</panel>

<panel  header="**115 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r510038667" expanded>

If thats the case, I think can leave it. The only concern is that the data struct looks complicated.
</panel>

<panel  header="**116 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/111#discussion_r510115955" expanded>

Realise that this + note.getTagsName can be added when this function is called. i.e. in the command execute

return formatNote(header + note.getTitle + note.getTagsName(), note)
</panel>

<panel  header="**117 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509950748" expanded>

There is a formatEvent function in Formatter, use that to format an event object instead of calling event.toStringArray(). Overload it if necessary.

Expected code:
timetable.addEvent(event);
return Formatter.formatEvent(COMMAND_SUCCESSFUL_MESSAGE, event), where formatEvent takes in a header and an event.
</panel>

<panel  header="**118 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509952624" expanded>

There is no need for this function here, handle this in Formatter.
</panel>

<panel  header="**119 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509952953" expanded>

Handles in formatter.
</panel>

<panel  header="**120 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509955005" expanded>

This should be handled in formatter instead of splitting the content here. There is an empty function called formatEvent. Overload if necessary

Suggested: formatEvent(event)

encloseRow("Event: " + event.getTitle();
encloseRow("Date: " + event.date.toString() + "\tTime: " + event.time.toString());
encloseRow("Reminder: " + event.isToRemind);
encloseRow("Repeating: " + isRecurring);


</panel>

<panel  header="**121 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509956085" expanded>

As per previous, format in formatter. Can check if the event is an instance of RecurringEvent and enclose the necessary info.
</panel>

<panel  header="**122 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509957178" expanded>

As per other comments.
</panel>

<panel  header="**123 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509958623" expanded>

Can call formatter to get the expected output, do not have to manually type out. In the event that the format changes, you do not have to edit the format here.

expected = Formatter.formatEvent(SUCCESSFUL_MESSAGE, event)
</panel>

<panel  header="**124 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510028973" expanded>

Maybe can overload another formatEvent to take in Header as one of the parameter. That way, just have to call 1 format function.
</panel>

<panel  header="**125 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510029355" expanded>

Likwise, same as above
</panel>

<panel  header="**126 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510030341" expanded>

Do the enclosing here and just make it return the formatted string straightaway. Can overload it to take in a header for printing 1 event. 
</panel>

<panel  header="**127 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510033978" expanded>

Likewise, returns the formatted string
</panel>

<panel  header="**128 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510051199" expanded>

Noted on this.
</panel>

<panel  header="**129 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510051403" expanded>

Noted.
</panel>

<panel  header="**130 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510785371" expanded>

```suggestion
        3 MD
```
</panel>

<panel  header="**131 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510785551" expanded>

```suggestion
```
</panel>

<panel  header="**132 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510785638" expanded>

```suggestion
        2 MD
```
</panel>

<panel  header="**133 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510786149" expanded>

```suggestion
        Tag Notes
        ----
        5 MD
    ]
```
</panel>

<panel  header="**134 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510786974" expanded>

```suggestion
        5 MD
```
</panel>

<panel  header="**135 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510787376" expanded>

```suggestion
        2 MD
```
</panel>

<panel  header="**136 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510787452" expanded>

```suggestion
        2 MD
```
</panel>

<panel  header="**137 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510787535" expanded>

```suggestion
        2 MD
```
</panel>

<panel  header="**138 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510787719" expanded>

```suggestion
        2 MD
```
</panel>

<panel  header="**139 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/120#discussion_r511330628" expanded>

Why does loadAll function takes in storageManager as one of the parameter?
</panel>

<panel  header="**140 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/120#discussion_r511330982" expanded>

Why is there a getNoteContent here since it is adding a new note? I believe the line below that @Nazryl added is to pass his JUnit test.
</panel>

<panel  header="**141 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/120#discussion_r511331175" expanded>

Would there be any difference if saveNote is not a static function? Since all command classes contains a storageManager object, all are able to access this function.
</panel>

<panel  header="**142 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/120#discussion_r511331520" expanded>

Can use Formatter.LS if this is a line separator.
</panel>

<panel  header="**143 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/120#discussion_r511331971" expanded>

I see the reason you pass in storageManager is only for setData. Can replace it with 'this' so that this function does not need the StorageManager parameter.

```suggestion
            command.setData(notebook, timetable, tagManager, this);
```
</panel>

<panel  header="**144 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/120#discussion_r511332900" expanded>

Currently we have 2 arraylist, 1 for all the notes and 1 for archived notes. Need another loop for the getArchivedNotes()

@R-Ramana Here is the saving part.
</panel>

<panel  header="**145 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/120#discussion_r511332081" expanded>

@R-Ramana The boolean for isArchive is still needed for loading.
</panel>

<panel  header="**146 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511298725" expanded>

Why did you remove this variable? I thought it is needed to differentiate the notes when saving to txt file? Or is the archived note list saved in a separate txt file? 
</panel>

<panel  header="**147 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511322611" expanded>

Ya, I am referring to loading from text file, what differentiates them to be loaded into respective array list? 
</panel>

<panel  header="**148 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511331725" expanded>

I have went through her code, the boolean is still needed. When loading from text file, it uses Parser to create a new AddNoteCommand, inside Notebook the addNote(note) function can have an if else, based on the boolean isArchive and then add into the respective arrayList.
</panel>

<panel  header="**149 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511541206" expanded>

Is the boolean added back in? Looks like it's still removed.
</panel>

<panel  header="**150 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511589394" expanded>

You may want to have an arraylist of note for the expected output and then use the Formatter.formatNotes. In the event that the format changes, you do not have to manually change the expected string again. 
</panel>

<panel  header="**151 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511589814" expanded>

All expected string can use the Formatter functions, for this case encloseString(title). Since the purpose of the command test are to compare the result and not the formatting, it is ok to just use those functions. 
</panel>

<panel  header="**152 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511589825" expanded>

Likewise
</panel>

<panel  header="**153 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/33#discussion_r500701729" expanded>

yup it should! I just generate a template test class therefore it consists of the execute function inside. All the test functions should be renamed accordingly.
</panel>

<panel  header="**154 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/37#discussion_r501701546" expanded>

The intellji gave warning saying that the field may be final so I changed it. Will be reverting that since the int cannot be final. Likewise for the rest of the similar cases below
</panel>

<panel  header="**155 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502919256" expanded>

For this, because the user can choose not to input the sort parameter, therefore the Boolean can hold a null value, which is used to check later
</panel>

<panel  header="**156 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502921610" expanded>

Don't really think there is a need for a function because this help string will be a constant. Can actually merge with the declaration of the HELP_STRING. @R-Ramana your view?
</panel>

<panel  header="**157 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502927086" expanded>

My intent is sort by usage. Noted on the separation.
</panel>

<panel  header="**158 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/66#discussion_r504568187" expanded>

No worries
</panel>

<panel  header="**159 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/28#issuecomment-703588741" expanded>

Failed CheckStyleTest
</panel>

<panel  header="**160 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#issuecomment-706526026" expanded>

Have you pulled the latest version? There seems to be conflict between the versions.
</panel>

<panel  header="**161 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/54#issuecomment-707489937" expanded>

Yup I will close it.
</panel>

<panel  header="**162 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#issuecomment-709679706" expanded>

Btw can we add the .log files into gitignore. Everyone can generate their .log file on their own local copy.
</panel>

<panel  header="**163 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/69#issuecomment-709882721" expanded>

Trying another fix for this
</panel>

<panel  header="**164 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/82#issuecomment-709964197" expanded>

I will leave this open until until I find a better fix.
</panel>

<panel  header="**165 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/82#issuecomment-709985049" expanded>

Will not close previously linked issue. 
</panel>

<panel  header="**166 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/105#issuecomment-714217483" expanded>

This is not a bug. Intellji prints white font as black and vice versa. See attached image to change it such that it displays the correct color on intellji

![image](https://user-images.githubusercontent.com/8433829/96824902-84112a00-1462-11eb-9571-87da22219515.png)

</panel>

<panel  header="**167 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/105#issuecomment-714218881" expanded>

Yup!
</panel>

</panel>


<panel type="info" header="### 3. WIRA AZMOON AHMAD `@hughjazzman` (121 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/12#discussion_r497241075" expanded>

```suggestion
    public Resistor(double value) {
```
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/12#discussion_r497241998" expanded>

```suggestion

    /** 
     * Returns String representation of Resistor.
     *
     * @return String with value and SI unit of Resistor. 
     */
```
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/12#discussion_r497242058" expanded>

```suggestion
    public String toString() {
```
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/13#discussion_r497263060" expanded>

Great photo! 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/17#discussion_r497975588" expanded>

Nice work!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/19#discussion_r497996355" expanded>

If you look in the build error, it says `'METHOD_DEF' should be separated from previous statement. [EmptyLineSeparator]`. So just have to add an empty line.
```suggestion

    /**
```
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/19#discussion_r498070327" expanded>

Consider correcting the `SI_UNIT`?
```suggestion
    private static final String SI_UNIT = "Ω";
```
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/20#discussion_r498720102" expanded>

Need to extend the super class.

```
public class PowerSource extends Component {
```
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/21#discussion_r498798331" expanded>

The JavaDoc should be with its method.
```suggestion

    /**
     * Returns String constituting value and unit of voltage source of circuit.
     *
     * @return String representation of VoltageSource object.
     */
```
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499129328" expanded>

Consider JavaDoc here?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499129381" expanded>

Might be good to have getters for these.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499129407" expanded>

Later when the `RTemplate` is created this could instead inherit from that.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499129448" expanded>

Same, a getter for this could be used later?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499129630" expanded>

Consider moving the `static` constant to before the instance variables?
https://se-education.org/guides/conventions/java/index.html#classes-and-interfaces
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/27#discussion_r499557886" expanded>

Not needed since done in `super()` call.
```suggestion
```
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/26#discussion_r499506790" expanded>

Consider removing the line between the JavaDoc and method? From the coding standard: https://se-education.org/guides/conventions/java/basic.html#comments
> No blank line between the documentation block and the method/class
```suggestion
```
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/26#discussion_r499507124" expanded>

```suggestion
```
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/26#discussion_r499507169" expanded>

```suggestion
```
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/26#discussion_r499507896" expanded>

Could consider having setters for these? @sevenseasofbri `LrTemplate` could use them as well?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/34#discussion_r499641975" expanded>

Can also add JavaDoc.
```suggestion
    public double getImpedance() {
        return angularFrequency * Math.abs(inductor.getValue() - (1 / capacitor.getValue()));
    }
```
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501160223" expanded>

You could consider to just `return` here and let the rest of the function get carried out instead of having `else`.
```suggestion
            ui.printSetVoltageSource(template.getInitialPowerSupply());
            return;
```
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501160854" expanded>

Because of inheritance this is not needed.
```suggestion
```
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501166298" expanded>

Maybe the assertion could be not throwing an exception? This would probably be better checked in the test for the `LcTemplate`.
```suggestion
        assertDoesNotThrow​();
```
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501386964" expanded>

Ah ya that's what I meant.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501444869" expanded>

With the `return`, no need for the `else` here actually. So it can just be done after the first `if` statement.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#discussion_r503001287" expanded>

Consider updating the method name to be more specific? Like https://se-education.org/guides/conventions/java/basic.html#naming
> `featureUnderTest_testScenario_expectedBehavior()`

Also can consider adding edge cases? Like 0 or negative values to make the tests more robust?
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#discussion_r503001735" expanded>

Perhaps the `addSeries()` and `addParallel()` methods could be tested as well? They are specific to the `LoadComponent` subclasses.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#discussion_r503005980" expanded>

Oh that's a good point. No need to put them here then, you can just add test cases to `LoadComponentTest`?
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#discussion_r503056396" expanded>

Could `else` `throw new DukeException` then?
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#discussion_r503056410" expanded>

Yep looks good!
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r502869147" expanded>

Since `execute()` actually takes in a `Ui` object, you can consider using `Ui.readline()` instead.
```suggestion
```
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r502869605" expanded>

```suggestion
            command = ui.readLine();
```
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r502869644" expanded>

Consider leaving `System.out.println()` in the `Ui` class?
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r502869926" expanded>

Consider leaving this in the `Ui` class?
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r502870549" expanded>

The `help` and `summary` command should probably have text-ui-test before merging.
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r503161636" expanded>

Oh this `try-catch` block is probably not needed since all `DukeException` are caught in the main `Duke` class right?
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r503163309" expanded>

Alright noted then, it's like a mini instance of `Duke`.
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r503296783" expanded>

```suggestion
        }
        
        if (numOfCommandsDone >= 6 || !command.matches(orderOfInstructions[numOfCommandsDone] + "(.*)")) {
            throw new DukeException("Bad Command! Please follow the instructions carefully."
                    + "If you want to exit this mode, type 'exit' and press enter.");
        }
        
        Command c = PARSER.parse(command);
        c.execute(ui);
        numOfCommandsDone++;
```
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502992012" expanded>

What's the reasoning for making this (as well as in the other classes) `protected` instead of `private`?
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502992298" expanded>

Probably don't want to XOR here right?
```suggestion
    public static final double DELTA = 1e-15;
```
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502992508" expanded>

Thinking the return toString methods could simply be tested in text-ui-test. Kind of odd that we just copy paste for JUnit.
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502992788" expanded>

Consider changing all method names to include the test input/scenario.
https://se-education.org/guides/conventions/java/basic.html#naming
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502993104" expanded>

Consider adding edge cases? Like 0, or negative values, to make the code more robust - similar for all the methods.
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502993286" expanded>

i.e. test scenario here could be `noValue`
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502994493" expanded>

Ah okay, but I would say there is no need to access the `TEMPLATE` (see comment about the `toString`), and the components could be accessed by getters instead, so actually don't need to be `protected`?
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r503220464" expanded>

Trivial getters wouldn't really need testing in the end: https://stackoverflow.com/questions/6197370/should-unit-tests-be-written-for-getter-and-setters
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506083708" expanded>

Since the way we set values is calling `Component.setValue()`, these actually still work when they are `final`.
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506090379" expanded>

In a sense, we _are_ using the same `LoadComponent` object, just changing its value.
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/51#discussion_r506089507" expanded>

Looking at https://github.com/se-edu/addressbook-level3/blob/master/src/main/java/seedu/address/logic/LogicManager.java, I think it is completely fine to have the `Logger` at the main `Command` class. It's just that we haven't thought of logging for the other commands, but I think this should be moved to the main class.
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507174915" expanded>

Nice use of `abstract`!
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507175219" expanded>

Any reason why the `@param input` here is of `byte` type when everything else is `int`? Including that of `TwoInputGate.setSecondInput()`.
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507175353" expanded>

Probably clear enough to return immediately.
```suggestion
        return input & secondInput;
```
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507175469" expanded>

Should this check for `isEmpty()` first?
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507175492" expanded>

Nice example!
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507175740" expanded>

```suggestion
        boolean hasNoChildren = isNullAtIndex(getLeftIndex(index)) && isNullAtIndex(getRightIndex(index));
        return !isNullAtIndex(index) && hasNoChildren;
```
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507175813" expanded>

`4` could be a constant defined above.
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507177686" expanded>

I don't think we need that. Reason being we are not guaranteed the inputs are set when building the circuit. Might have to calculate every time, unless `BooleanTemplate` checks for if a new value is set or not.

Any `Gate` would also need a default overloaded constructor in that case.
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507404321" expanded>

Do remove the conflict markers.
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507528655" expanded>

No need to remove.
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507528718" expanded>

No need to remove.
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507528797" expanded>

No need to remove.
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507528957" expanded>

No need to remove.
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/63#discussion_r508240506" expanded>

You feel that no need to put the User Profile and Value Proposition to the ToC?
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/63#discussion_r508251299" expanded>

Consider using bullet points here? Possibly standardise the numbering/bulleting in this Appendix section?
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/73#discussion_r508665421" expanded>

Nice diagram!
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/73#discussion_r508668695" expanded>

```suggestion

![InitialBinaryTree](diagrams/BinaryTreeInitialObjectDiagram.png)
```
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/73#discussion_r508671280" expanded>

```suggestion
`BooleanTemplate` uses this function to render the current configuration of the circuit in a String format. The method
is also extensively used in other internal operations in `BinaryTree<T>` for checking whether a position in the tree has been set or not.
```
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/73#discussion_r508685964" expanded>

Just realised this shouldn't have been deleted.
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/73#discussion_r508686820" expanded>

Should be
```suggestion
## Appendix: Requirements
### Product scope
#### Target user profile
```
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/74#discussion_r509513444" expanded>

This has been changed to CLIrcuit Assistant right?
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/74#discussion_r509515993" expanded>

Is this a copy of the main README?
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/74#discussion_r509822419" expanded>

Currently broken.
```suggestion
## Appendix: Requirements
```
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/76#discussion_r509879615" expanded>

The jar file is still `duke.jar`.

```suggestion
2. Open a new terminal window and navigate to the same directory where your duke.jar is located
3. Enter the command `java -jar duke.jar` into the terminal window to launch the application
```
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/77#discussion_r509884710" expanded>

Just the link for changes in #73.
```suggestion
    * [Model component](#model-component)
* [Implementation of Boolean Commands](#implementation-of-boolean-commands)
    * [Binary Tree](#binary-tree)
```
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508196041" expanded>

```suggestion
[-> AddCommand: execute()
```
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508196454" expanded>

`RcTemplate` calls `getCapacitor()` from itself.
```suggestion
RcTemplate -> RcTemplate : getCapacitor()
activate RcTemplate

RcTemplate <- RcTemplate : capacitor
deactivate RcTemplate
```
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508196526" expanded>

```suggestion
AddCommand -> RcTemplate : rc.getComponent("c")
```
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508197511" expanded>

I realise that we might need to change the actual Java code here so it doesn't need to call `getComponent()` twice.
</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508198093" expanded>

This whole part might actually be redundant in the code, we can remove the `setComponent()` call since it is already set when `c.setValue()` is called.
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508242462" expanded>

I think you can just update the UML to this version, we can merge and create a new PR for the code later. Maybe can just add an issue right after merging this one.
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508581413" expanded>

Yeah maybe can add to .gitignore.
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508676635" expanded>

The code has been fixed as of #71 - you can update it to follow the current implementation.
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508998419" expanded>

You can click delete file from the Files changed section.
![image](https://user-images.githubusercontent.com/53231968/96677007-44363e00-13a1-11eb-8a59-27fde1530198.png)

</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508999936" expanded>

This would probably be better moved to its own section rather than being in the Architecture section.
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r509000645" expanded>

I'll have to update my diagram.
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r509884049" expanded>

Remember to update the ToC once you do so 💯 
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r509900848" expanded>

```suggestion
/.settings/
*.log*
```
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509823441" expanded>

Why are the stars added?
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509823959" expanded>

Do correct the name of the image file.
</panel>

<panel  header="**90 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509824006" expanded>

```suggestion
#### `SetBooleanCommand`
```
</panel>

<panel  header="**91 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509824181" expanded>

```suggestion
There are four Boolean commands that are used in the implementation of the logic gates: `TemplateBooleanCommand, SetBooleanCommand, AddBooleanCommand`, and `CalcBooleanCommand`.
```
</panel>

<panel  header="**92 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509824232" expanded>

```suggestion
#### `AddBooleanCommand`
```
</panel>

<panel  header="**93 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509824268" expanded>

```suggestion
#### `CalcBooleanCommand`
```
</panel>

<panel  header="**94 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509824813" expanded>

Where is the PUML file for this? It seems like the `TwoInputGate` objects shouldn't know about it each other, rather it's `BooleanTemplate` that knows about all of them.
</panel>

<panel  header="**95 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509824884" expanded>

Missing PUML file.
</panel>

<panel  header="**96 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509825430" expanded>

Missing PUML file.
</panel>

<panel  header="**97 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509825529" expanded>

Missing PUML file.
</panel>

<panel  header="**98 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509825784" expanded>

Missing PUML file.
</panel>

<panel  header="**99 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509960190" expanded>

```suggestion
```
</panel>

<panel  header="**100 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511334188" expanded>

Going into `BooleanParser` from `Parser` should be `prepareBooleanTemplate()`.
```suggestion
[->Parser: parse("template and")

activate Parser

Parser-> BooleanParser: prepareBooleanTemplate("and")
```
</panel>

<panel  header="**101 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511334245" expanded>

```suggestion
BooleanParser --> BooleanParser: AndGate()
```
</panel>

<panel  header="**102 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511334273" expanded>

```suggestion
BooleanParser --> BooleanParser: BooleanTemplate(AndGate())
```
</panel>

<panel  header="**103 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511334545" expanded>

```suggestion
```
</panel>

<panel  header="**104 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511334581" expanded>

The `BooleanParser` is not deactivated.
```suggestion
```
</panel>

<panel  header="**105 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511334823" expanded>

The control should be returned back to `Parser`, that's where it started from. We can just ignore the `super()` call, it's not so important.
```suggestion
TemplateBooleanCommand --> BooleanParser
deactivate TemplateBooleanCommand 

BooleanParser --> Parser
deactivate BooleanParser

[&gt;-- Parser
deactivate Parser

```
</panel>

<panel  header="**106 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511334896" expanded>

This is still not fixed. Do change the name of the image file to `SetBooleanCommand.png`.
</panel>

<panel  header="**107 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511334975" expanded>

Do keep in mind the names of the image files.
```suggestion
![InsertObjectDiagram](diagrams/AddCommandOrAndXor.png)
```
</panel>

<panel  header="**108 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511335101" expanded>

Please fix the activations, they should all be after the arrow `->`.
</panel>

<panel  header="**109 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511335281" expanded>

Index parsing is done in `BooleanParser`.
```suggestion
```
</panel>

<panel  header="**110 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511335648" expanded>

```suggestion
BooleanTemplate -> BinaryTree : insert(idx, and)
activate BinaryTree

BinaryTree --> BooleanTemplate
deactivate BinaryTree

BooleanTemplate -> BooleanTemplate : buildTopDown()
activate BooleanTemplate

BooleanTemplate --> BooleanTemplate
deactivate BooleanTemplate

BooleanTemplate --> AddBooleanCommand
deactivate BooleanTemplate

&gt;-- AddBooleanCommand
deactivate AddBooleanCommand
```
</panel>

<panel  header="**111 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511335834" expanded>

This will need to be revised once @sevenseasofbri implements `CalculateBooleanCommand.execute()`. Consider revising the return of control of the sequence diagrams.
</panel>

<panel  header="**112 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511336019" expanded>

Please fix the activation here as well.
</panel>

<panel  header="**113 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511336616" expanded>

```suggestion
[-> SetBooleanCommand : execute()
activate SetBooleanCommand

SetBooleanCommand -> BooleanTemplate : setInput(template, 2, 0)
activate BooleanTemplate

BooleanTemplate -> BinaryTree : getT(2)
activate BinaryTree

BinaryTree --> BooleanTemplate : gate
deactivate BinaryTree

BooleanTemplate -> TwoInputGate : setSecondInput(0)
activate TwoInputGate

TwoInputGate --> BooleanTemplate
deactivate TwoInputGate

BooleanTemplate -> BooleanTemplate : buildTopDown()
activate BooleanTemplate

BooleanTemplate --> BooleanTemplate
deactivate BooleanTemplate

BooleanTemplate --> SetBooleanCommand
deactivate BooleanTemplate

[&gt;-- SetBooleanCommand
deactivate SetBooleanCommand
```
</panel>

<panel  header="**114 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511336914" expanded>

Needs revision - consider changing this to `BooleanTemplate` being associated with `Gate` objects, which all the other gates inherit from. Also, `TwoInputGate` only has `input` and `secondInput`, they do not know about other `Gate` objects. The logic is done from within `BooleanTemplate`.
</panel>

<panel  header="**115 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511336954" expanded>

Maybe this can be better shown with a UML Class diagram?
</panel>

<panel  header="**116 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511337020" expanded>

Maybe these steps here and the next command can just be shown by UML diagrams mostly? If the sequence diagram is very clear, the steps taken might even be redundant.
</panel>

<panel  header="**117 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511328310" expanded>

Interface with only a constant?
</panel>

<panel  header="**118 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511328407" expanded>

Why is this needed?
</panel>

<panel  header="**119 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511328425" expanded>

Duplicate
```suggestion
```
</panel>

<panel  header="**120 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511328486" expanded>

Should not be invalid command, need to change `input.txt` to use `tutorial circuit` instead.
</panel>

<panel  header="**121 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511558672" expanded>

The name of the actual file is still `docs/diagrams/setBooleanCommand.png`. It will not render properly if the case does not match.
</panel>

<panel  header="**122 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/24#discussion_r499119778" expanded>

Will be used when it's actually implemented. The Ui will need to print what happens with execution, something like my iP. i.e. the implementation here is not complete, and requires #3 to be completed.
</panel>

<panel  header="**123 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/24#discussion_r499119806" expanded>

Hmm, I feel it's quite intuitive? What else would you do with the otherValue, with the method name and JavaDoc already given?
</panel>

<panel  header="**124 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/36#discussion_r500089597" expanded>

Nope! In fact, it cannot compile if you add the `break` statements.
</panel>

<panel  header="**125 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/36#discussion_r500128728" expanded>

We can consider adding more `Exception` classes and functionality later on.
</panel>

<panel  header="**126 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/39#discussion_r502143891" expanded>

Good idea 👍 
</panel>

<panel  header="**127 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/82#discussion_r509970118" expanded>

Good point. Should there be an assertion in `BooleanTemplate.setInput()` as well? Though it does seem we are using `DukeException` for `BinaryTree.insert()`. Maybe all as exceptions?
</panel>

<panel  header="**128 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/91#discussion_r511486980" expanded>

Yep yep, I basically left this whole part untouched since @PraveenElango should be solving it in #75.
</panel>

<panel  header="**129 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/91#discussion_r511486984" expanded>

Same as above.
</panel>

<panel  header="**130 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/11#issuecomment-700819950" expanded>

#10 Inductor done.
</panel>

<panel  header="**131 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/11#issuecomment-701156398" expanded>

No need to link the issue #10 yet, else it will automatically close it when you merge. Can link when the last component is done.
</panel>

<panel  header="**132 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/12#issuecomment-701902136" expanded>

Closed as duplicate of #19.
</panel>

<panel  header="**133 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/18#issuecomment-701959015" expanded>

You don't need to close the PR and make a new one once you've made the changes. But it's okay, now that you've opened #19 we'll use that.
</panel>

<panel  header="**134 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/10#issuecomment-702721155" expanded>

* Inductor done in #11 
* Capacitor done in #16 
* Resistor done in #19 
* Voltage Source done in #21 

I think we can merge all and close this issue?
</panel>

<panel  header="**135 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/5#issuecomment-704161262" expanded>

Todo:

* Take a look at `Parser.prepareCalc()`.
* Take a look at `Command` and other subclasses.
* Create `CalculateCommand` class.
* Implement `CalculateCommand.execute()` method.
* Use `Template` calculate methods to get values.
* Use`Ui` to print result.
* Add JUnit test(s) for `CalculateCommand`.
</panel>

<panel  header="**136 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/29#issuecomment-705403762" expanded>

Assigned JUnit Testing classes:

| Class       | Person                                           |
|-------------|--------------------------------------------------|
| `Command`   | @sevenseasofbri will do `HelpCommand` subclass, @dorianfong98 the rest |
| `Component` | @oasisbeatle  |
| `Parser`    | @hughjazzman  |
| `Template`  | @PraveenElango  |
| `Ui` | @sevenseasofbri |
</panel>

<panel  header="**137 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/29#issuecomment-707058043" expanded>

Being the last task of milestone v1.0, we can follow this after closing: https://nus-cs2113-ay2021s1.github.io/website/schedule/week9/project.html#using-milestones

* A working product tagged.
* CI passing.
* Milestone updated to match the product.
* Milestone closed.
</panel>

<panel  header="**138 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/47#issuecomment-709968463" expanded>

@dorianfong98 `Command` classes done?
</panel>

<panel  header="**139 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/37#issuecomment-711543317" expanded>

To be updated with #57 features, including the user stories addressed.
</panel>

<panel  header="**140 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/40#issuecomment-712993609" expanded>

@sevenseasofbri will update Glossary once everyone has updated the Dev Guide. #73 
</panel>

<panel  header="**141 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/80#issuecomment-714257853" expanded>

Duplicate of #62.
</panel>

<panel  header="**142 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/72#issuecomment-715423489" expanded>

@dorianfong98 to do `BinaryTree`
@sevenseasofbri to do `BooleanTemplate`
</panel>

<panel  header="**143 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/68#issuecomment-715439313" expanded>

Add a `PrintCommand` to print both `CircuitTemplate` and `BooleanTemplate`.
</panel>

<panel  header="**144 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/89#issuecomment-715481240" expanded>

@sevenseasofbri Add the parsing into `Parser`,`BooleanParser` and `CircuitParser`, to return `TutorialBooleanCommand` and `TutorialCircuitCommand`.
</panel>

<panel  header="**145 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/40#issuecomment-715946229" expanded>

On these two points:

* Why it is implemented that way.
* Alternatives considered.

I believe we can add this for the `CircuitTemplate` as well as the `BinaryTree`.

Can @oasisbeatle or @dorianfong98 do a short write-up for `CircuitTemplate` and @sevenseasofbri or @dorianfong98 do one for `BinaryTree`?
</panel>

</panel>


<panel type="info" header="### 4. R RAMANA `@R-Ramana` (102 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/33#discussion_r500697875" expanded>

If it is a test method should we not follow the following naming conventions?

`whatIsBeingTested_descriptionOfTestInputs_expectedOutcome` 
OR
`testMethodName`
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/33#discussion_r500702166" expanded>

Maybe can update this to COMMAND_USAGE to be clearer on what this String is for :)
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/36#discussion_r501500017" expanded>

```suggestion
    private static final String DELIMITER = "|";
```
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/36#discussion_r501500650" expanded>

```suggestion
    public int getSize() {
```
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/36#discussion_r501501801" expanded>

```suggestion
                            + DELIMITER
```
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/36#discussion_r501501903" expanded>

```suggestion
                            + DELIMITER
```
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/36#discussion_r501503936" expanded>

```suggestion
        return notes.get(index);
```
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/37#discussion_r501686956" expanded>

Thanks for updating on my behalf :)
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/37#discussion_r501688110" expanded>

As mentioned above
```suggestion
        private final String COLOR;
```
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/37#discussion_r501688380" expanded>

Private final right, so should be all CAPS? Can just commit directly from my suggestion :D
```suggestion
    private final int INDEX;
```
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/37#discussion_r501688617" expanded>

Same as above
```suggestion
    private final ArrayList<Tag> TAGS;
```
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/37#discussion_r501690475" expanded>

Thought I made the same changes in my previous PR haha 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/37#discussion_r501690859" expanded>

Should it be TAGMAP?
```suggestion
    private final Map<Tag, ArrayList<Note>> TAGMAP;
```
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502109734" expanded>

Just a minor indentation issue. For all my suggestions, if you are okay with it, feel free to commit directly, using the "commit suggestion"! :)
```suggestion
    public static final String COMMAND_WORD = "add-n";
```
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502111044" expanded>

```suggestion
     * @param note refers to the note to be added.
```
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502112998" expanded>

Can we add some 1 line comments to explain what the if-else block is doing?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502115188" expanded>

I don't see the System Exception being thrown in the method?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502120200" expanded>

Remind the person who is working on AddEvent not to forget this part! 👍 
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502122603" expanded>

```suggestion
     * @param userMessage Original string user inputs.
     * @throws SystemException if an error occurs.
```
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502122856" expanded>

```suggestion
     * @throws StringIndexOutOfBoundsException if an error occurs.
     * @return A string of converted content input
```
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502122920" expanded>

```suggestion
     * @throws SystemException if an error occurs.
     * @return Result of the delete note command
```
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502123198" expanded>

Same as before, please remind the person for AddEventCommandTest
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502155744" expanded>

Good call!
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502804672" expanded>

This part is not yet completed?
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502804801" expanded>

Made the code more concise. Feel free to commit the suggestion directly
```suggestion
                + "the index that is indicated when you print the event list"),
```
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502805165" expanded>

Don't think the delimiter is necessary
```suggestion
        String dateString = "Date: " + date.toString() + "Time: " + time.toString();
```
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502805353" expanded>

Use InterfaceManager.LS to standardize for new lines.
```suggestion
        return titleString + InterfaceManager.LS 
            + dateString + InterfaceManager.LS 
            + remindString + InterfaceManager.LS
            + repeatingString;
```
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502805833" expanded>

Added a new line
```suggestion

     * @param input User input to be parsed
```
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502806316" expanded>

InterfaceManager.LS to standardize new lines.
```suggestion
        return "Added the following!" + InterfaceManager.LS
            + InterfaceManager.LS + event.toString();
```
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502806409" expanded>

Same as above.
```suggestion
    public static final String COMMAND_SUCCESSFUL_MESSAGE = "Event deleted:" + InterfaceManager.LS;
```
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502806605" expanded>

Can include the system exception also
```suggestion
     * @param index Index to be removed.
     * @throws SystemException
```
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502806776" expanded>

Added a line break
```suggestion
     * Gets the timetable for a specified month and year. Includes multiple recurrent events.
     
```
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502806817" expanded>

Same as above + phrasing error.
```suggestion
     * Given an ArrayList of events, get all events that will occur during the specified time period.
     
```
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502806974" expanded>

Added line break
```suggestion
import seedu.duke.command.ViewNoteCommand;

```
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502807051" expanded>

```suggestion
import seedu.duke.data.timetable.DailyEvent;
import seedu.duke.data.timetable.Event;
import seedu.duke.data.timetable.MonthlyEvent;
import seedu.duke.data.timetable.RecurringEvent;
import seedu.duke.data.timetable.WeeklyEvent;
import seedu.duke.data.timetable.YearlyEvent;

import java.time.LocalDateTime;
```
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502807172" expanded>

Added a line break
```suggestion
     * string trimmed.
     
```
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502807198" expanded>

Same as above
```suggestion
     * for it to be recurring and to set reminders of the event.
     
```
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502807308" expanded>

Maybe can add this in the JavaDoc
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502807384" expanded>

Added Line break
```suggestion

     * @param userMessage User Input without the action word
```
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502849924" expanded>

Fair enough!
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502850077" expanded>

Just minor phrasing
```suggestion
     * Provides a description of how the command should be used.
     *
     * @return a string description of how the command should be used.
```
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502850163" expanded>

Removed extra line
```suggestion
```
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502850314" expanded>

If final I think it should be in caps
```suggestion
    private final LocalDate END_RECURRENCE;
    private final String RECURRENCE_TYPE;
```
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502850546" expanded>

endRecurrence should be all caps right if this is for the final? Think got a few files to amend in that case
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/45#discussion_r502803577" expanded>

Is the throws SystemException necessary here? I don't see it being thrown.
```suggestion
    public void deleteNote(int note) {
```
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/45#discussion_r502803668" expanded>

Remove extra line
```suggestion
```
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/45#discussion_r502803963" expanded>

Should we throw the SystemException here?
```suggestion
    private Command prepareViewNote(String userMessage) throws SystemException {
```
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502923867" expanded>

Think maybe we can have this at the very beginning?
```suggestion
    private static final String WELCOME_MSG_STRING = "Welcome to NotUS! Type \"help\" if you need to see a list of commands and their usages.";
```
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502924341" expanded>

I feel this breaks the flow.
```suggestion
    private static final String COMMAND_UNSUCCESSFUL_MESSAGE = "There are no matching notes. "
            + "Please try another search query.";
```
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502924606" expanded>

@brandonywl Yup, so when I was using Boolean it was because there are 3 cases. Default (which is chronological order), ascending or descending. Hence I wanted to use Boolean which can hold true, false and null! boolean on the other hand cannot hold the null value.
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502925873" expanded>

Should we sort this by alphabetical order? I mean not a big issue, but if needed, I can do it in my next push? Or if you prefer to sort by usage, then maybe have a line break between each use group?
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502926137" expanded>

If we are splitting by space, should we use a whitespace regex?
```suggestion
        String[] tagInfo = tagsInfo.split("\\s+", 2);
```
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/49#discussion_r503047039" expanded>

```suggestion
                    title = checkBlank(infoDetails[1], exception);
```
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/53#discussion_r503210412" expanded>

To standardize with the rest of the new lines
```suggestion
        String stringToPrint = note.getTitle() + InterfaceManager.LS;
```
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/53#discussion_r503210670" expanded>

Same as above
```suggestion
            stringToPrint += tag.toString() + InterfaceManager.LS;
```
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/58#discussion_r503263708" expanded>

To standardize with your other PR
```suggestion
    private static final String INDEX_OUT_OF_RANGE_MESSAGE = "Index is out of range.";
```
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/61#discussion_r503828593" expanded>

Same as above
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/61#discussion_r503828700" expanded>

Think you can make this statement clearer, and missing param
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/61#discussion_r503829180" expanded>

Add @param for the javaDoc?
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/61#discussion_r503829221" expanded>

Add @param for the javaDoc?
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/61#discussion_r503829519" expanded>

Add @param for the javaDoc?
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/61#discussion_r503829557" expanded>

Add @param for the javaDoc?
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503265439" expanded>

Would this be possible?
```suggestion
                result += InterfaceManager.LS.repeat(2);
```
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503266426" expanded>

I feel like there is arrow-head coding here. Would this work?
```suggestion
        if (reminders.size() == 0) {
            return result += "No reminders today!";
        }
        
        boolean first = true;
        for (Reminder reminder : reminders) {
            if (!first) {
                result += InterfaceManager.LS;
            }
            first = false;
            result += reminder.toString();
        }
```
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503267990" expanded>

```suggestion
        EXCEPTION_INVALID_LIST_TIMING_FORMAT("Your input list timing query has a wrong format. "
```
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503268081" expanded>

```suggestion
        EXCEPTION_INVALID_TIMING("Your input has a wrong format for the date time input. "
```
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503268241" expanded>

```suggestion
        EXCEPTION_INVALID_REMINDER_FORMAT("Your input has a wrong format for the time before reminder. "
```
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503268372" expanded>

```suggestion
        EXCEPTION_INVALID_RECURRING_TYPE("There are only the following recurring types: "
```
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503268484" expanded>

```suggestion
        EXCEPTION_INVALID_TIME_UNIT("That time unit is not accepted!"),
```
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503270675" expanded>

Do we assert here? I think assert at a Test Class right?
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503270864" expanded>

Whitespace
```suggestion
     * 
     * @param title Title of event.
```
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503271441" expanded>

Added whitespace
```suggestion
        String dateString = "Date: " + date.toString() + "\t Time: " + time.toString();
```
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503272385" expanded>

Again looks like arrow-head coding. Can we try this?
```suggestion
        }
            
        comp = time.compareTo(o.time);
        if (comp != 0) {
            return comp;
        } else {
            return title.compareTo(o.title);
        }
```
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503276286" expanded>

```suggestion
     * @param dateToRemind Date of reminder
```
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503278568" expanded>

Seems like you are not using the userMessage
```suggestion
                return prepareRemind();
```
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503279092" expanded>

Actually if you have nothing to prepare why don't you return this directly at the parser switch case above?
```suggestion
    private Command prepareRemind() {
        return new RemindCommand();
```
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/65#discussion_r505145005" expanded>

Added Whitespace
```suggestion
     *
     * @return Instantiated Timetable with 1 event.
```
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/65#discussion_r505145070" expanded>

Added Whitespace
```suggestion
     *
     * @return Instantiated Timetable with 4 default events.
```
</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/65#discussion_r505145220" expanded>

Added Whitespace
```suggestion
     * Wrapper around assertEquals for code readbility.
     *
```
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/83#discussion_r506784337" expanded>

For more clarity
```suggestion
     * @param tagName Name of the tag to be set.
     * @param tagColor Color of the tag to be set.
```
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506954294" expanded>

Feels like a little bit of arrowhead coding. Jun Xiang has a good suggestion to reduce it.
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506954669" expanded>

noOfChar feels a little hard on the eye. Can I suggest something else?
```suggestion
    public static void deleteLine(StringBuilder commandInput, String characters, int charCount) {
```
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r506954706" expanded>

```suggestion
     * @param charCount Number of character. 0 to remove new line, 1 to resume typing on the same line.
```
</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/104#discussion_r509289366" expanded>

Easier to make changes if needed - using markdown syntax
```suggestion
**Prerequisites:**
* JDK 11
* IntelliJ IDE
```
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/104#discussion_r509290126" expanded>

```suggestion
Import the project as a **Gradle project**.
```
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/104#discussion_r509293183" expanded>

```suggestion
**NotUS** manages the flow of the application. On launch, it will create the necessary components, as listed above
```
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/104#discussion_r509293642" expanded>

```suggestion
**Parser**
```
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/104#discussion_r509294244" expanded>

```suggestion
1. Receives the user input message as a whole.
1. Interprets the type of command and splits the message to identify all the parameters provided.
1. Creates and returns the Command class respectively.
 
 {insert Parser.puml here}

**Command** classes
```
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509917758" expanded>

So when we used String in the formatter class, we have been using .concat(). Might want to consider doing these += as concats (in the Formatter class)
</panel>

<panel  header="**90 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509918597" expanded>

If you are not using the lastIndex anywhere else maybe can consider
```suggestion
        result.set(result.size() - 1, result.get(lastIndex) + endRecurrenceString);
```
</panel>

<panel  header="**91 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509925052" expanded>

Maybe can add the time period parameter?
</panel>

<panel  header="**92 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r510123998" expanded>

Not much as Jun Xiang mentioned, but I think it would be better if we can standardize the code 👍 
</panel>

<panel  header="**93 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/111#discussion_r510127925" expanded>

All of our Javadocs was @param parameter definition. There was no additional whitespace to align the columns. If we are doing this, should we then standardize for all JavaDocs? Would it be easier to just have a single space?
</panel>

<panel  header="**94 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509926427" expanded>

Same as in the previous PR, can consider concat for standardization
</panel>

<panel  header="**95 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509926993" expanded>

Same as the previous PR, can consider the following
```suggestion
        result.set(result.size()--, result.get(lastIndex) + endRecurrenceString);
```
</panel>

<panel  header="**96 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/116#discussion_r510693245" expanded>

I think this can come under the last subsection under section 2
</panel>

<panel  header="**97 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/114#discussion_r510534222" expanded>

Don't think the PinCommand is created by the parser function right? Maybe can phrase it better?
</panel>

<panel  header="**98 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/114#discussion_r510534591" expanded>

```suggestion
1. Toggles the pinned status of the specified note. 
```

</panel>

<panel  header="**99 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/114#discussion_r510534709" expanded>

```suggestion
1. Returns the title as well as the pinned status of the note. 
```

</panel>

<panel  header="**100 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/114#discussion_r511028405" expanded>

Yeap I guess! But this one can leave out for now. Jun Xiang will be modifying the Parser command to make our code reflect more OOP
</panel>

<panel  header="**101 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/117#discussion_r510802133" expanded>

```suggestion
//@@author prachi2023
```
</panel>

<panel  header="**102 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/117#discussion_r510803382" expanded>

```suggestion
//@@author prachi2023
```
</panel>

<panel  header="**103 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/34#discussion_r500866941" expanded>

Addressed 👍 
</panel>

<panel  header="**104 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/34#discussion_r500867230" expanded>

Will not print, will return a String instead
</panel>

<panel  header="**105 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/35#discussion_r501005251" expanded>

Because I fear if we do just "TAG" the person might assume it is only for 1 tag. What I can do is `PREFIX_TAG + " TAG " + PREFIX_TAG + " TAG "...` to show that they can add multiple tags? Would that be better?
</panel>

<panel  header="**106 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/35#discussion_r501387295" expanded>

addressed!
</panel>

<panel  header="**107 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/35#discussion_r501387406" expanded>

Yup, good point! Converted
</panel>

<panel  header="**108 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503130950" expanded>

Okay, made the changes will push
</panel>

<panel  header="**109 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503280645" expanded>

Yup doesn't work. So will not be making this change
</panel>

<panel  header="**110 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503281155" expanded>

You are right, my bad! Thanks
</panel>

<panel  header="**111 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503284435" expanded>

Could've just returned the string actually
</panel>

<panel  header="**112 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/78#discussion_r505442191" expanded>

Already in the code
</panel>

<panel  header="**113 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#discussion_r506170673" expanded>

Will do so with my next PR!
</panel>

<panel  header="**114 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/90#discussion_r507004892" expanded>

Good idea. Will do so (referring to both of your suggestions)!
</panel>

<panel  header="**115 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509162869" expanded>

getNotetitle() returned a boolean, I have changed it but I have decided to overload it.
</panel>

<panel  header="**116 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509900241" expanded>

This function isn't for me/nor did I create it. Used in DeleteNoteCommand
</panel>

<panel  header="**117 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509906051" expanded>

In that case, this function would actually be redundant, could just call the getNoteString directly
</panel>

<panel  header="**118 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/102#discussion_r509906445" expanded>

Discussion taken off GitHub
</panel>

<panel  header="**119 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510806864" expanded>

```suggestion
        3 MD
```
</panel>

<panel  header="**120 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/113#discussion_r510807105" expanded>

```suggestion
        3 MD
```
</panel>

<panel  header="**121 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511322040" expanded>

No need to check for is archived in my implementation. The note will either be in the archived notebook or in the main notebook. When archiving/unarchiving, the note will be removed and added to the respective notebooks.
</panel>

<panel  header="**122 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511323989" expanded>

How is the files being loaded currently? It traverses notes (from notebook) right? Can just make it traverse both notes and archivedNotes?
</panel>

<panel  header="**123 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511376371" expanded>

Will add it back in that case
</panel>

<panel  header="**124 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/119#discussion_r511587755" expanded>

Updated, requesting for a final review prior to merging
</panel>

<panel  header="**125 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/14#issuecomment-705550193" expanded>

A pull request was merged addressing this issue, but did not link the issue to the PR correctly. Hence a need for manual closing of the issue.
</panel>

<panel  header="**126 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/13#issuecomment-705550338" expanded>

A pull request was merged addressing this issue, but did not link the issue to the PR correctly. Hence a need for manual closing of the issue.
</panel>

<panel  header="**127 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/36#issuecomment-705678789" expanded>

I realized that the test methods did not follow the coding standards. Just make the changes in your next PR :)
</panel>

<panel  header="**128 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/30#issuecomment-706020555" expanded>

Created PERT and Gantt charts.
</panel>

<panel  header="**129 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/80#issuecomment-709907216" expanded>

> Btw can we add the .log files into gitignore. Everyone can generate their .log file on their own local copy.

Can. will make the changes in my next commit.
</panel>

<panel  header="**130 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/93#issuecomment-714605663" expanded>

Closed as completed with PR #102 
</panel>

<panel  header="**131 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/118#issuecomment-716138059" expanded>

> Its fixed on my side. I havent commited.

Noted! Feel free to close the issue when you make the PR.
</panel>

</panel>


<panel type="info" header="### 5. KINGSTON KUAN JUN XIANG `@kstonekuan` (60 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/3#discussion_r498620172" expanded>

LGTM, well done!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/3#discussion_r498620227" expanded>

Thanks for helping me to remove this, forget to do it on my side!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/22#discussion_r500421213" expanded>

Hey, I think we might as well just keep the interfaces for easy reference to the behaviors
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/22#discussion_r500422173" expanded>

Looks good! Might be good to add some JUnit tests for this class now even if they just assert true for now, just to keep in mind our desired behavior for each method
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/22#discussion_r500422978" expanded>

Good use of packages
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/23#discussion_r500752579" expanded>

Good catch, forgot to include this.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/23#discussion_r500753704" expanded>

I think this one may have to be "options" as it is a collection. When we call an instance of the OptionList we can probably call that optionList
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/23#discussion_r500753894" expanded>

Good idea but may be redundant as we can call "length()" on the ArrayList
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/43#discussion_r501458225" expanded>

Thanks for adding this for me
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/43#discussion_r501458311" expanded>

Thanks for changing this LGTM
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501704999" expanded>

Thanks for moving this for me
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501705933" expanded>

Maybe we can move this into the "quiz" case next time so we don't check for the command twice
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501706124" expanded>

Remember to initialize this next time as well
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501845715" expanded>

sorry I mean to comment on ui, didn't know the top part got included
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502922184" expanded>

Thanks for adding this but would be good to use a separate branch next time
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502922558" expanded>

Good idea to separate these responsibilities to two different classes
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502923250" expanded>

I see what you are trying to do here but is there a reason for this class to be different from the other displayables and do we need this extra method?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502923502" expanded>

I think you should try not to depend on this class in to create the QuizQuestionList object as this violates SRP
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502923809" expanded>

Why does this not implement DisplayableList, maybe can change the way we think of and name this class?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/62#discussion_r503038607" expanded>

Good update! Did you managed to test the other commands with IO testing also?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/69#discussion_r503763408" expanded>

Looks good!
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/69#discussion_r503763657" expanded>

Will try to abstract this into another class, thanks for implementing with this for now
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/69#discussion_r503764727" expanded>

You can load from the test storage `data/test/example.json` if you do not want to create the topic for this test
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/78#discussion_r505158166" expanded>

Thanks for changing this, forgot to account for wrong commands
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/84#discussion_r505164010" expanded>

Good use of assertions
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/84#discussion_r505164217" expanded>

Good SRP
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/84#discussion_r505164737" expanded>

Good idea maybe we can add this to the other DisplayableList classes
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/85#discussion_r505171065" expanded>

Sorry need this to be one word something like Java_Basics for the parser
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/85#discussion_r505176434" expanded>

Thanks for changing this
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/90#discussion_r505305169" expanded>

Cool idea to add the number of questions
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/90#discussion_r505306527" expanded>

Nice, good to check our exceptions
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/91#discussion_r505393045" expanded>

Good use of assertions
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/91#discussion_r505393208" expanded>

Useful warning log, great!
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/91#discussion_r505394104" expanded>

Good idea to log this but maybe using constants can help since most of the words in these strings are the same. Will open an issue to use more OOP for v2
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/117#discussion_r509018670" expanded>

good idea to protect this
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/117#discussion_r509018832" expanded>

good slap
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/118#discussion_r509022168" expanded>

Good placeholder
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/118#discussion_r509022501" expanded>

Thanks for changing this
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/118#discussion_r509022634" expanded>

Good use of the interface
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/123#discussion_r509083130" expanded>

Nice description of the implementation for the parsing
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/123#discussion_r509083801" expanded>

May have to standardise our headers later
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/123#discussion_r509083920" expanded>

Good work on this class diagram
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/123#discussion_r509084015" expanded>

good work on this sequence diagram
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509405678" expanded>

I think the first one is repeated now because I added it previously but thanks for adding all of the rest
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509407241" expanded>

You can take out add, delete and the empty constructor as I think @joelngyx is working on removing them from our code
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/127#discussion_r509842153" expanded>

This header isn't showing up properly I think you need to add a space after the # , noticed this in a few other places as well
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/127#discussion_r509842744" expanded>

I think you are missing the interface label for DisplayableList and Displayable. Some of the arrows are also out of place and arrowheads missing so you might want to check the diagram again.
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/127#discussion_r509843354" expanded>

Might want to split this as it may be confusing. Also not sure if you should be returning control to each class instead?
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/126#discussion_r510082002" expanded>

nice javadocs
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/126#discussion_r510083588" expanded>

Nice solution to allowing the number of questions and topic name to be swapped.
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/130#discussion_r510085053" expanded>

Thanks for putting this placeholder, will try to get it done soon
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/130#discussion_r510085273" expanded>

Nice formatting
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/130#discussion_r510085814" expanded>

Good idea to make the usage clearer
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/133#discussion_r510741272" expanded>

I think this is ok for now, i will add in a storage system to load the bookmarks along with notes
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/133#discussion_r510741662" expanded>

this one as well may have to create a `User` class to include notes next time but for now it seems fine
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/132#discussion_r510739468" expanded>

I think for this you can call execute on the command and then just assertTrue(true) which represents that the the execute doesn't enter a loop since a bad topic was given
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/132#discussion_r510739780" expanded>

same as above
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/132#discussion_r511478337" expanded>

Nice! Thanks for changing this
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/134#discussion_r511478806" expanded>

Good idea to abstract this
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/136#discussion_r511539069" expanded>

I know this is a draft but you should probably be taking the `TopicList` in the constructor
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502870025" expanded>

Done thanks
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502870625" expanded>

Yes sorry thanks, need to get out tests up quickly to catch these mistakes
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/25#issuecomment-704696962" expanded>

Sorry I implemented this in #13 as it will load and parse the JSON from the file before passing everything as our own objects
</panel>

<panel  header="**64 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/27#issuecomment-705957066" expanded>

Did you finish this in your pull request #34 or are there still more methods you are implementing? Remember to add your Junit tests also
</panel>

<panel  header="**65 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/21#issuecomment-705957236" expanded>

Was this done in your pull request #22 ?
</panel>

<panel  header="**66 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/21#issuecomment-706654485" expanded>

Need to make sure it works with a hintCommand
</panel>

<panel  header="**67 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/58#issuecomment-706673235" expanded>

Good idea to maintain SRP
</panel>

<panel  header="**68 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/48#issuecomment-706873100" expanded>

Done in #53 
</panel>

<panel  header="**69 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/57#issuecomment-706873468" expanded>

Done in #59 
</panel>

<panel  header="**70 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/10#issuecomment-707633231" expanded>

Done in #71 
</panel>

<panel  header="**71 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/18#issuecomment-707633320" expanded>

Done in #71 
</panel>

<panel  header="**72 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/19#issuecomment-707633406" expanded>

Done in #71 
</panel>

<panel  header="**73 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/109#issuecomment-711599927" expanded>

remember to update storage and the json
</panel>

<panel  header="**74 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/49#issuecomment-711600437" expanded>

Forget this, dw do alr
</panel>

<panel  header="**75 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/116#issuecomment-712130475" expanded>

For easy reference to first version:

Class diagram:
![image](https://user-images.githubusercontent.com/35717847/96678745-e9064a80-13a4-11eb-80d2-c4e81e856867.png)

Sequence diagram:
![image](https://user-images.githubusercontent.com/35717847/96678578-975dc000-13a4-11eb-8257-73d63cd09992.png)


</panel>

<panel  header="**76 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/93#issuecomment-713334897" expanded>

remove from functionalities
</panel>

<panel  header="**77 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/107#issuecomment-713335503" expanded>

remove functionality
</panel>

<panel  header="**78 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/122#issuecomment-713400845" expanded>

Saw that removing these methods disrupts some Junit tests, you can either construct using an arraylist for those tests or load from the test json. If this takes too long work on the ugdg first and we can get this up a bit later!
</panel>

<panel  header="**79 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/128#issuecomment-714197279" expanded>

I think you should move the exceptions higher up so it doesn't reach this assertion
</panel>

<panel  header="**80 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/114#issuecomment-714503190" expanded>

Done in #126 
</panel>

</panel>


<panel type="info" header="### 6. VISHRUTI RANJAN `@sevenseasofbri` (49 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/9#discussion_r495895459" expanded>

Consider removing this.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/18#discussion_r497988119" expanded>

`public String toString() {`
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/18#discussion_r497988694" expanded>

`public Resistor(double value) {`
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/18#discussion_r497988853" expanded>

Consider changing this to Resistor object
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/20#discussion_r498683583" expanded>

```suggestion
package seedu.duke.component;

public class PowerSource {
    private static final String SI_UNIT = "V";

    public PowerSource(double value) {
        super(value);
    }

    /**
     * Returns the value and unit of PowerSource object.
     *
     * @return String of Power Source value
     */
    @Override
    public String toString() {
        return (value) + SI_UNIT;
    }
}
```
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/20#discussion_r498683988" expanded>

The lack of a newline is causing checkStyle error
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/24#discussion_r499116484" expanded>

Perhaps the name otherValue is a little less intuitive? Consider naming it valueToBeAdded or something along those lines.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/24#discussion_r499116580" expanded>

Unsure of the purpose of the ui object in this function
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/24#discussion_r499124355" expanded>

I see. Okay it's alright then
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/24#discussion_r499124362" expanded>

Ohh okie alright gotcha
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/26#discussion_r499516525" expanded>

Yup was thinking of setters, wasn't sure whether I should add. Will add after tdys meeting!
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/36#discussion_r500066378" expanded>

While I know having break statements out here is kind of useless but does this violate coding standard? https://se-education.org/guides/conventions/java/basic.html#layout
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/36#discussion_r500068090" expanded>

Was going to ask about if the current template wasn't set, but saw this. This makes sense!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/36#discussion_r500116664" expanded>

Oh wow that's...interesting
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/39#discussion_r501810320" expanded>

Quite interesting that you added this to gradle properties to be able to render Ω, μ. Hadn't thought of this before!
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/39#discussion_r501813435" expanded>

Consider changing the array name to a plural like templates? https://se-education.org/guides/conventions/java/basic.html#naming
```suggestion
        String[] templates = {"r", "rl", "rc", "lc"};
```
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/39#discussion_r501814090" expanded>

If you commit the previous suggestion you'll have to change this too:
```suggestion
        for (String s : templates) {
```
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/39#discussion_r501816199" expanded>

Same with this collection of values:
```suggestion
        String[] effValues = {"reff", "leff", "current", "power"};
```
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/39#discussion_r501816487" expanded>

```suggestion
        for (String s : effValues) {
```
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/45#discussion_r503329770" expanded>

Nice
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/45#discussion_r503329923" expanded>

Great description!
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/45#discussion_r503330772" expanded>

Interesting!
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506081457" expanded>

Any particular reason as to why you declared these as final? Because when a variable is declared with final keyword, its value can’t be modified, essentially, a constant.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506081845" expanded>

Here as well.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506085285" expanded>

Yup it will work, but the point of declaring it as final is sort of nullified 
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506085851" expanded>

The test for this method in the RcTemplate_Test will not run because it tries to catch DukeException but the assert keyword throws a different kind of execption.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506086124" expanded>

Might consider removing this, since it is already tested by JUnit?
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506238222" expanded>

Fair, then might have to make the names capitalized right
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/53#discussion_r506615797" expanded>

Nice! Might have to add rigorous tests for this later on. 
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/53#discussion_r506615856" expanded>

Nice
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/53#discussion_r506615993" expanded>

Good use of generics!
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507394436" expanded>

Seems to be an unresolved merge conflict in this file. Might want to edit this file.
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507398208" expanded>

This is already tested in a JUnit test under AddCommand test, hence will cause a build gradle error. Consider removing this.
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507400572" expanded>

Not sure if tested through JUnit, but if build gradle fails checks again after removing the other statement, then this is likely causing the issue too.
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507401035" expanded>

Any particular reason for including so many blank newlines haahaha
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507402466" expanded>

Same with this statement. I think avoid asserting in this function (even in the other classes) since it is kind of already taken care of by exception handling. The program will terminate in case the user enters an incorrect component
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507402604" expanded>

Update: Consider removing this
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507403725" expanded>

Hmm consider naming it SPACES? Since we could change the number of spaces if required later on without having the name become obsolete
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507404546" expanded>

Interesting, what does this dependency do?
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/58#discussion_r507518419" expanded>

:0 gotta remove lah
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/59#discussion_r507657707" expanded>

Will have to change the gates to this kind of structure
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/78#discussion_r509892418" expanded>

Nice!
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508554989" expanded>

What is this file for?
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/82#discussion_r509966072" expanded>

We could assert that the logic will not call anything out of bounds?
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/82#discussion_r509973884" expanded>

Yup, sounds good!
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/83#discussion_r510200771" expanded>

Good eye
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/91#discussion_r511486370" expanded>

What is xand? Isn't it called xnor..? (・–・;)ゞ
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/91#discussion_r511486513" expanded>

Idk if this matters but there's a typo in sequence
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/91#discussion_r511487090" expanded>

Ohh lol I see
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499204872" expanded>

Yup! Good idea
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499204887" expanded>

Okay will do!

</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499204895" expanded>

Yup I'll add it
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/23#discussion_r499204913" expanded>

Noted! Will add in all getters.
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501175277" expanded>

So, remove the else and `break;` in the if block? Will `break` work for a method to return to call.. or should I just empty `return;`?
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501175652" expanded>

Yup noted. I didn't see that before. 
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501175953" expanded>

I see. Yup, that makes sense! 
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501418365" expanded>

```suggestion
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;

```
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501418751" expanded>

```suggestion
        CalculateCommand c = new CalculateCommand(LC_TEMPLATE, CAPACITANCE);
        assertDoesNotThrow​(() -> c.execute(UI));
```
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501423957" expanded>

```suggestion
       assertDoesNotThrow(() -> c.execute(UI));
```
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#discussion_r501425011" expanded>

```suggestion
        CalculateCommand c = new CalculateCommand(LC_TEMPLATE, CAPACITANCE);
        assertDoesNotThrow(() -> c.execute(UI));
```
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r502920888" expanded>

Good idea, will do
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r502920931" expanded>

Yup alright
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r502921359" expanded>

Will try, was getting errors with the fancy fonts (tutorial mode) and table for command summary
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#discussion_r503162328" expanded>

Then this thread will terminate execution and jump out of the help mode. ^_^'
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/51#discussion_r506117481" expanded>

Okay fair, I'll move it
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507176508" expanded>

Oops I had initially made it byte then changed everything else to int. Seemed to have missed this one out. Thanks for pointing out!
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507176903" expanded>

Actually, the list is initally populated with 16 null values, so technically we gotta check for if the 1st value is null. Might have to change the isEmpty() function. 
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507177037" expanded>

Noted. So I add set output as a separate fn right?
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507177145" expanded>

Good idea, will do.
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#discussion_r507182277" expanded>

Hmm, makes sense
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/73#discussion_r508694422" expanded>

Oh no oops, perhaps I'll add it in a next PR?
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511336449" expanded>

Accidently got added cuz intellij optimised the imports lol
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511337005" expanded>

Yup yup had mentioned when i created the PR:
> Have to update runtest.bat with apt commands.
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511337027" expanded>

Lol didn't notice this. Good eye
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511340891" expanded>

Couldn't think of a good way to generalise the tutorial command whilst also splitting between the two kinds of circuits. Since the both the classes already inherited from BooleanCommand/CircuitCommand I thought the only way we could define the characteristics of a TutorialCommand and implement was through an interface (oof)
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511539961" expanded>

```suggestion
```
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/90#discussion_r511555785" expanded>

@hughjazzman  I might be able to add a function declaration here (startTutorial()), I guess I add it in another PR, or ?
</panel>

<panel  header="**78 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/11#issuecomment-700820575" expanded>

> Perhaps JavaDoc to be added, but other than that LGTM.

Ohh right I forgot. I'll do it.
</panel>

<panel  header="**79 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/5#issuecomment-704219184" expanded>

Ok will add this
</panel>

<panel  header="**80 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/38#issuecomment-705307103" expanded>

Finally -_-
</panel>

<panel  header="**81 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/29#issuecomment-705405903" expanded>

Okay sounds good! 
</panel>

<panel  header="**82 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/41#issuecomment-707116499" expanded>

OHMYGOSH IT FINALLY PASSED
</panel>

<panel  header="**83 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/47#issuecomment-708140824" expanded>

Task Assignment:

Package | Person
-- | --
Command | @sevenseasofbri HelpCommand, CalculateCommand, AddCommand, SummaryCommand
Command |  @dorianfong98 ExitCommand, SetCommand, Command, TemplateCommand
Component | @oasisbeatle
Parser | @hughjazzman
Template | @PraveenElango


</panel>

<panel  header="**84 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/50#issuecomment-709395060" expanded>

LGTM!
</panel>

<panel  header="**85 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#issuecomment-711156805" expanded>

> LGTM, will need JavaDoc and maybe a comment showing the format of the `printTree`?

Yup can, I'll do that
</panel>

<panel  header="**86 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/54#issuecomment-711170288" expanded>

Just realised the name printTree is sort of misleading since the function really just modifies the 'tree' variable and really doesn't print the tree. Will change the name.
</panel>

<panel  header="**87 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/73#issuecomment-712987880" expanded>

> Sexy UML diagrams.

LMAO DHSFBJEFKERF
</panel>

<panel  header="**88 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/73#issuecomment-712992527" expanded>

BTW I'll add the glossary after everyone has added their parts to the dev guide!
</panel>

<panel  header="**89 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/67#issuecomment-715426590" expanded>

Will be done through `CalculateCommand`
</panel>

<panel  header="**90 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/89#issuecomment-715462720" expanded>

+ With HelpCommandParser
</panel>

<panel  header="**91 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/issues/40#issuecomment-715947070" expanded>


> Can @oasisbeatle or @dorianfong98 do a short write-up for `CircuitTemplate` and @sevenseasofbri or @dorianfong98 do one for `BinaryTree`?

Okie I'll do it

</panel>

</panel>


<panel type="info" header="### 7. NEO JIA ERN `@neojiaern` (43 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/24#discussion_r501099944" expanded>

Perhaps you could refer to the MESSAGE_USAGE in ReviseCommand?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/24#discussion_r501100537" expanded>

Could perhaps separate these into its respective command files like what was done for revise.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/30#discussion_r502910475" expanded>

Would it be better to include "edit" inside the method name? (e.g. showCardContentBeforeEdit) as it is only for the edit command
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/30#discussion_r503005176" expanded>

Perhaps the MESSAGE_USAGE could be included after the error message?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/30#discussion_r503005210" expanded>

Perhaps the MESSAGE_USAGE could be included after the error message?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/56#discussion_r503269712" expanded>

Not necessary to specify date when adding cards
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/56#discussion_r503269908" expanded>

Date parameter is not needed as it will be initialised in Card class
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/56#discussion_r503271228" expanded>

Not necessary to specify date.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/56#discussion_r503271406" expanded>

Not necessary to specify date
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/56#discussion_r503272000" expanded>

Perhaps this is not needed?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/56#discussion_r503272724" expanded>

Maybe you could add a separate function which is similar to this and call it for saving of tasks into file.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/56#discussion_r503275046" expanded>

Perhaps could also include previous interval too when loading from file
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/59#discussion_r503918406" expanded>

Perhaps MESSAGE_USAGE could be removed as the command is correct but chapter is not found?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/59#discussion_r503923427" expanded>

Would it be better to have a general method for the chapter and module each, then pass the message to that method?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#discussion_r504577865" expanded>

Should this be done in Storage?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#discussion_r504577953" expanded>

Should this be done in storage?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505313053" expanded>

Need this to be int for assertion
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505314875" expanded>

Need this for assertion
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505382717" expanded>

Perhaps could also add MESSAGE_USAGE like other commands?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505387608" expanded>

Perhaps could use ui.showToUser as well. And could maybe change to "Command entered: " instead? As some commands may be invalid.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505388554" expanded>

Perhaps could close scanner here?
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505389416" expanded>

Perhaps could use ui.showToUser or create a method specifically for printing these in Ui?
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508209984" expanded>

Perhaps "Lists the revision completed in ..." would be better?
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508211045" expanded>

Perhaps you could include a message for the exception?
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508211265" expanded>

Could include error message for exception here
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508211306" expanded>

Could include error message for exception here
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508212347" expanded>

Perhaps you could pass ui from Kaji to this method and call ui.showToUser and ui.showError instead of using System.out.println?
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509252401" expanded>

Maybe could refer to the constants EASY/MEDIUM/HARD instead of using integers for the switch case?
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509254005" expanded>

Perhaps could change this into one message and denote easy/medium/hard with %1$s and pass the type of difficulty into string format
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509254667" expanded>

Perhaps could use "Shows" to standardise with the message usage of other commands
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509255587" expanded>

May consider changing this to toLowerCase and use the constants instead of string literals for switch case or changing the constants to uppercase.
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509256254" expanded>

Could change this to "Rates" to standardise with other commands
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509256911" expanded>

Is it possible to throw exception or return this message to execute so that System.out.println is not called at other places other than execute function?
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509257810" expanded>

Perhaps could return this to execute and do ui.showToUser there
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509258504" expanded>

Is there a reason why "this" needs to be used? Or setRating is sufficient?
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509258849" expanded>

Perhaps return rating would be sufficient?
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/89#discussion_r509995381" expanded>

Perhaps could use caps for parameters
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/89#discussion_r509996121" expanded>

Perhaps could refactor these into constants?
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/89#discussion_r509996646" expanded>

Could include message usage here also
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/89#discussion_r509998963" expanded>

Could include message usage here
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/89#discussion_r510000891" expanded>

is it possible to return the thing you want to print to the execute method and call ui from there? For the methods below as well.
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/89#discussion_r510003419" expanded>

Could change to use of out.print
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/89#discussion_r510003799" expanded>

Perhaps could refactor these as constants?
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/issues/72#issuecomment-713290844" expanded>

Already implemented
</panel>

</panel>


<panel type="info" header="### 8. SEAN TAN RUI AN `@thatseant` (42 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503399383" expanded>

Not necessary as it's not used.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503401628" expanded>

Good idea to save all white-spaced separated characters into inputs array.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503402460" expanded>

Should throw an error.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503402706" expanded>

Should throw an error.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503403818" expanded>

@samuelchristopher consider what happens to projectIndex pointer if project gets deleted.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503404138" expanded>

Not sure whether should throw an error for this.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503405817" expanded>

Should be printing error messages.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503409170" expanded>

Do we need getter when we can access class property directly?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503409488" expanded>

Will this error ever be triggered?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503410471" expanded>

Can add some further testing to check task list after adding and deleting of tasks. Also check that switching to another project changes the list of tasks.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/34#discussion_r503642317" expanded>

Should use the inputs array that Riaz implemented where he split the inputCommand into multiple words already.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/34#discussion_r503642409" expanded>

Should use the inputs array that Riaz implemented where he split the inputCommand into multiple words already.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/34#discussion_r503643727" expanded>

How do we handle deletion of members with duplicate names? One way could be not to allow duplicate members with same name to be created.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/41#discussion_r504693935" expanded>

Consider making message type more descriptive perhaps by naming the error(See below). Error messages are clear.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/41#discussion_r504697587" expanded>

It is hard to tell from the messageType the error. Example Naming: AddTaskWrongView
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/37#discussion_r503904388" expanded>

I feel like we shouldn't use variable "description" for both project name and description as it will be confusing to use one variable for two different purposes.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/37#discussion_r503904943" expanded>

Same here. I feel like we shouldn't use variable "description" for both name and description as it will be confusing to use one variable for two different purposes.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/37#discussion_r503905342" expanded>

Should not be "Task View"?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/37#discussion_r503909591" expanded>

I feel to make it more convenient you can return name, description and deadline here.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/37#discussion_r503909858" expanded>

Then, here just call toString to return name, description and deadline here.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505207877" expanded>

Ya Ive left similar comments in your previous pull request, do check it out.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506173349" expanded>

Same point as Shreyas mentioned...members should not be access directly.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506175145" expanded>

isNamePresent should be renamed. It's to serve as an output.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506175812" expanded>

Project.members
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506175904" expanded>

Project.members
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506176472" expanded>

Good renaming of variable
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506177713" expanded>

I don't think this should be private too
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506889607" expanded>

Can be simplified to project.getTask(taskIndex)
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506889935" expanded>

No need for this function after above comment.
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506890651" expanded>

I feel that selectTask is just retrieving task using project.getTask() followed by an output message. There's no need for this function as output is handled in Command class
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/68#discussion_r508284470" expanded>

But parse() only throws DukeExceptions and not NumberFormatException?
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/68#discussion_r508284938" expanded>

How does it catch Integer.parseInt?
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/64#discussion_r508288569" expanded>

iirc prof mentioned we are not supposed to catch NullPointerException. Checked online and seem to be the case as well.
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/64#discussion_r508289488" expanded>

Not urgent but for consistency are we supposed to use the Ui class you implemented?
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/64#discussion_r508296597" expanded>

Hmm what is switchViewModes for? There's already home command to switch to home.
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508276030" expanded>

Consider assigning tasks to TeamMember here
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508276479" expanded>

It becomes important for members to keep track of tasks so deleted members will no longer be attached to tasks.
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508277545" expanded>

Are we printing lists here or in Ui? I actually don't mind either but should be standardised. Not a high priority as of now though.
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508278760" expanded>

Just to clarify, this command activates the Project View both Samuels are doing right?
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508280183" expanded>

Why is the try catch shifted from parse to executeCommand?
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508282786" expanded>

Shreyas says in another pull req "as riaz mentioned I think we don't need to put a try-catch block over here since we catching it in the main class, we just throw the exception in that method"

But parse() only throws DukeExceptions and not NumberFormatException?
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/71#discussion_r508273207" expanded>

Agree with this
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/36#discussion_r504685874" expanded>

Agree
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/36#discussion_r504686495" expanded>

Yup thanks Sam
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/47#discussion_r505195353" expanded>

The user guide has no deadline for projects. But if simple, can just do
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/47#discussion_r505201447" expanded>

Yup done!
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/49#discussion_r505384075" expanded>

My thinking is it would be clear where this method is called ie. project.getTask().

What do the rest think?
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/63#discussion_r507022678" expanded>

No it can accept more than one parameter. The split here is to separate commandType from the parameters. Inputs[1] contains the whole string beside the first word.
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/63#discussion_r507022757" expanded>

As of now, the function already loops through and extracts all params.
</panel>

</panel>


<panel type="info" header="### 9. TANG ZHI YOU `@Zhi-You` (41 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/4#discussion_r498624885" expanded>

Great job!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/24#discussion_r500760970" expanded>

Oh this is a nice addition!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/24#discussion_r500761238" expanded>

Good way to avoid magic literals!
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/38#discussion_r500797123" expanded>

Thanks for this! I think this implementation makes more sense!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/38#discussion_r500797757" expanded>

Oh right! My mistake on the primitive versus object type for the boolean variable! Thanks for helping me edit that!
I think the new naming you have here is much clearer too!  
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/38#discussion_r500802370" expanded>

Great work! I think the logic is fine for the quiz implementation!
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/39#discussion_r501464359" expanded>

I think we can implement the parseAnswer that we currently have in the Quiz class into here in future! But this will work for v1.0.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/39#discussion_r501464625" expanded>

Quiz object should be constructed in future but this will work for v1.0! 
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501704571" expanded>

I think it is better if the parser class and its interface could be packaged into their own package, which can be called parser
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501707479" expanded>

Great implementation for v1.0! Do take note that we have to handle the case where the input provided by the user is unfavorable though, such as if the input length is not 3.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/47#discussion_r501903458" expanded>

Wow! This looks great!
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502867906" expanded>

Do you think making this into an abstract class would be better than an interface because other command classes will eventually inherit from it instead of just specifying the behaviour? 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502868910" expanded>

Nice! I think this implementation is great!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502869818" expanded>

Thanks for this! It enhances cohesion between hint and question! 
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502869929" expanded>

Thanks for this too! The flag will now correspond to whether the question was shown to the user or not.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502870043" expanded>

Understand the reason for this! For future versions we will be able to handle multiple-topic quiz.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502870584" expanded>

I think this should be add instead too! 
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/56#discussion_r502882559" expanded>

Since optionList is unused here, do you think the execute method's parameters in the Command abstract class can be changed?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/56#discussion_r502883436" expanded>

I understand that you have incorporated question.markAsShown() function into the getDescription method of question now, however I feel that we should separate them out to enhance SoC and cohesiveness for the method. Will be doing that and hence for this part over here, the questions will have to be marked as shown separately.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/56#discussion_r502883484" expanded>

Just a suggestion, but I think what you have now works too! The suggestion is just something to think about for future implementations!
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/62#discussion_r503228662" expanded>

Remember to remind @anqi20 about this again @josephhhhhhhhh ! 
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/62#discussion_r503229934" expanded>

Great! Looks like a working product is right on the way!
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/62#discussion_r503230798" expanded>

Logic seems great for this class!
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/64#discussion_r503463633" expanded>

Naming of tests are great!
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/75#discussion_r504843755" expanded>

Thanks for helping the team with this change!
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/86#discussion_r505175274" expanded>

Thanks for this! Careless mistake on my part haha.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505149171" expanded>

Do you think this might be better if phrased as "Please enter in 'help' to get the list of available commands." ?
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505149380" expanded>

I think for all new lines we should use System.lineSeparator() instead as it will ensure that it works for any OS.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505149553" expanded>

Great job!
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505149638" expanded>

Can add a new line between the two parts but great job nonetheless!
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505160227" expanded>

I think these should not be returning new IncorrectCommands but should be using the ui to print the error instead. the IncorrectCommand will not be executed too. 
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505184272" expanded>

Great job! Thanks for changing this!
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505186355" expanded>

Thanks for changing this too!
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/87#discussion_r505183572" expanded>

Great work! Logic seems fine to me!
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/91#discussion_r505438693" expanded>

Yup, I agree! I think most of us will have to do that too and that could fall under an issue for v2.0.
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/102#discussion_r505690858" expanded>

Great job chaining the exceptions!
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/106#discussion_r508386714" expanded>

Looks good with the naming!
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509351825" expanded>

Thanks for adding this in! Looks good!
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509356716" expanded>

Not very sure if you need the arrows that do not correspond to a method call or not. Also, the return values should be dashed lines. 
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509357381" expanded>

Looks good! However, should the multiplicity for the association between OptionList and Displayable be 4 instead of *?
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/131#discussion_r510204744" expanded>

This is a great idea! Thanks! Now our code looks way cleaner
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/22#discussion_r500459794" expanded>

Hey! Thanks for the quick response! Able to make timely adjustments because of that. Have made a new commit with the necessary changes! Do check it out if you are free!
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/22#discussion_r500459992" expanded>

Sure! Working on it!
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502925366" expanded>

Alright noted, happen to have it here because it is linked to the QuizQuestion class.
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502928238" expanded>

Alright I think a better fitting name would be QuizQuestionsManager as it manages the quiz questions instead of simply being a list.
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502928790" expanded>

Initially I wanted the getDescription method to only be getting the description of the question, but it is also indeed true that once getDescription method is called it is clear that the question is shown too. Will be changing this! Thanks! 
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502928833" expanded>

Working on it!
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502987069" expanded>

Oh! Sorry! This comment is supposed to be deleted from the commit as it was from a previous version! I will change it now.
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/63#discussion_r503209456" expanded>

@kstonekuan has pointed out the mistakes with these lines of code. Thanks!
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/124#discussion_r509359438" expanded>

Alright! Thanks! I will change accordingly!
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/136#discussion_r511543949" expanded>

Yep, thanks! It is now updated as such in the new pull request.
</panel>

<panel  header="**52 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/4#issuecomment-702535107" expanded>

LGTM! Good job overall!
</panel>

<panel  header="**53 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/52#issuecomment-706655401" expanded>

Working on it!
</panel>

<panel  header="**54 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/109#issuecomment-711600705" expanded>

Yup! @anqi20 I think you will have to take a look at how hint is implemented and related to the storage class and copy that logic into the explanations class.
</panel>

</panel>


<panel type="info" header="### 10. DANZEL ONG JING HERN `@dojh111` (40 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/30#discussion_r501708969" expanded>

Maybe in the while loop you can switch it to a variable called: isEmpty or something instead, then you update that variable through a method which returns true when noteTitle.trim().length() == 0
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/30#discussion_r501711815" expanded>

These 2 lines can be abstracted out into a single method for better SLAP
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/40#discussion_r502926281" expanded>

Can extract into a method named "isValidTitle" or something
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/40#discussion_r502926424" expanded>

This can be extracted into a method as well, the contents in the brackets of the "if condition"
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/40#discussion_r502926630" expanded>

Can be extracted into a single method to improve SLAP
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/40#discussion_r502926718" expanded>

Same thing, can be extracted into a single method
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/40#discussion_r502926816" expanded>

Extract into single method called "checkForOutOfBounds" or something
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/40#discussion_r502927082" expanded>

Your test names I think you can look at the naming scheme on the module website - SUT name_Inputs_Expected outcome - style
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/58#discussion_r504422263" expanded>

Maybe you can try breaking this part up so that its abit easier to read
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/58#discussion_r504458598" expanded>

Maybe each if statement can be put into its own method
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/58#discussion_r504459576" expanded>

The contents in the if statement can be simplified into a nicer name I think, like "isEqualToDate"
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r505285328" expanded>

This command can be put into a separate class for reuse by the delete class
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r505285507" expanded>

Same as above, can be put into another class to be shared
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r505285646" expanded>

This as well
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r505286498" expanded>

Can split into a few smaller methods
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r506783347" expanded>

Repeated in 2 classes, can be shared also
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/64#discussion_r506898141" expanded>

I think you missing a word here
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/64#discussion_r506898490" expanded>

Maybe can simplify the condition into another method that returns true false to make it a bit more readable.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/64#discussion_r506898878" expanded>

Same here for the JavaDoc comment
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/64#discussion_r506899844" expanded>

Should the logic for like determining which messages to print be done not in the Ui class? I'm not very sure also, want to know your opinion
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/68#discussion_r507166316" expanded>

This line can be sent to Ui class - Pass in the "i" and the "note title" into a Ui method to print for you
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/68#discussion_r507166355" expanded>

Same as above
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/68#discussion_r507167532" expanded>

Can simplify the while loop conditionals
```suggestion
        while (!isEqualY && !isEqualN)
```
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/68#discussion_r507167654" expanded>

Same as the above
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/68#discussion_r507168474" expanded>

Simplify this also
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/68#discussion_r507169026" expanded>

Simplify this conditional
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/68#discussion_r507170223" expanded>

Check for the extra white space
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012160" expanded>

Maybe can just add some white spaces to separate the different logic to improve the code readability/aesthetics abit! Same for the other edit commands below.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012508" expanded>

Contents of if conditional may be extracted into another method to return true or false
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012581" expanded>

Same for this if conditional statement. Can be extracted into a method if you can find a name for it

</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012681" expanded>

Same here, for the if conditional
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012714" expanded>

Maybe this method can go into Ui, will need to check with the rest
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/76#discussion_r511326312" expanded>

Actually is there any case where we will not decrement the recurrence by 1
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511322165" expanded>

Actually, maybe we could have a class accessible variable for NoteHistory so that any method can access it at any point. When the execute is run, we set the class variable as the passed in noteHistory, this way we do not need to pass the noteHistory object down through multiple methods.
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511322540" expanded>

Help move the storage.saveTasks() from after all the catch blocks to after when the taskHistory.pushOldCopy() method is called - (Line 74 in this case) for the event and lesson edit classes also.
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511322617" expanded>

Move the storage.saveTask() method to the line below this.
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511322620" expanded>

Move the storage.saveTask() method to the line below this.
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511322969" expanded>

Can we make this a Ui method
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511325035" expanded>

Maybe instead of setting the editNumber through the constructor, set a method called setEditNumber() in the Task class itself instead.
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511592034" expanded>

Hmm yea good point. But I think what Johannine is trying to get here is separation of concerns, where we have a class that just deals with the tracking and updating of the history of tasks. I guess this is up is really up to choice, which way do we want to push towards more.
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501654736" expanded>

Thanks for the catch, I am going to change this issue.
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501656360" expanded>

Possible, I realised the name for this method may not have been the best, the idea was that I have a method that checks if both files exist - If they do, we will skip straight to file reading. If any of the files do not exist, we will proceed with save creation.

I have updated the method name to "checkIfBothFilesExists" to better reflect this.
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501664482" expanded>

Alright, I have refactored the entire method into individual methods to improve the SLAP
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501675669" expanded>

Alright, ive tried my best to refactor the function into a single method
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501676273" expanded>

Alright, I've changed this, thanks for the suggestion
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501679514" expanded>

Yep, definitely, but idk where to put it for now, so I wont move it yet
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501680118" expanded>

Alright, changed it, thanks
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/39#discussion_r503028316" expanded>

Alright, updated the code accordingly
</panel>

</panel>


<panel type="info" header="### 11. WAMIKA MALIK `@wamikamalik` (34 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/25#discussion_r503029841" expanded>

Is there a reason why a new scanner is being declared every time a command is taken in? I believe this works the same way as our previous approach right? 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/25#discussion_r503030375" expanded>

Is it necessary to have such a test? 🤔 getCommand() just calls the nextLine() function of scanner class. So by writing this test, we are essentially testing the nextLine() function which has not been written by us.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/28#discussion_r503108888" expanded>

Is this package being imported because of the BusStops being set in the array?
Can this be removed?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/28#discussion_r503111875" expanded>

Nice to have this getter here! Ensures that only minor changes will be needed for other features that made use of the route arrays. (hopefully 🤞 )
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/28#discussion_r503141657" expanded>

```suggestion
```
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/29#discussion_r503398774" expanded>

Maybe you can print out only the 1st and the last stop of the buses here with a "..." in the middle.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/29#discussion_r503413852" expanded>

Oh yah! Okie!
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r502760146" expanded>

Is this for future changes? Will the current program work without this?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r502760501" expanded>

I was wondering if the getCommand() of Ui can be used here. Just to avoid declaring a separate Scanner.
```suggestion
            String userBusRouteSelection = Ui.getCommand().trim().toLowerCase();
```
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r502865199" expanded>

```suggestion
public class RouteMapCommand extends Command{
```
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r503117661" expanded>

This class was removed in a previous commit. You might have to update your PR to reflect the new code and make changes accordingly.
PS: There will be more changes required once #28 is merged but those should be minor
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r503138215" expanded>

Once you change the code according to the new classes handling bus data, you would still have a similar function that returns the bus route. I suggest you shift the printing to Ui class. See #26 for an example.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r503628256" expanded>

You may want to remove this class since it is not being used.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/31#discussion_r504792513" expanded>

Since you have just one test, using createBusList() here is ok. If you have more than one tests for BusData, remember that calling it again might cause duplicate entries in the list.
A possible way to do such initialization is using a @BeforeAll method.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/31#discussion_r504793275" expanded>

This is something I found from my research. Do let me know if there is a better alternative!
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/37#discussion_r505181785" expanded>

Nice! Using for loop makes the code look neater.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/37#discussion_r505182097" expanded>

Another way to do this would be to store lower case names in stopNames and then use contains() and getIndexOf() functions.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/37#discussion_r505182586" expanded>

Nice function you have there! Can be implemented in the code for other features as well.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/39#discussion_r505212979" expanded>

can this import be removed?
```suggestion
```
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/39#discussion_r505222996" expanded>

Okie! Yah, I realized it wasn't running!
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/41#discussion_r505342496" expanded>

```suggestion
import seedu.duke.logic.commands.BusCommand;
import seedu.duke.logic.commands.Command;
import seedu.duke.logic.commands.RouteCommand;
import seedu.duke.logic.commands.RouteMapCommand;
import seedu.duke.logic.commands.ExitCommand;
import seedu.duke.logic.commands.HelpCommand;
import seedu.duke.logic.commands.AllBusCommand;
import seedu.duke.logic.commands.ListStopsCommand;
```
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/41#discussion_r505343002" expanded>

```suggestion
public class ListStopsCommand extends Command {
```
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/41#discussion_r505349871" expanded>

```suggestion
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertFalse;
```
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/43#discussion_r505452693" expanded>

no tab here
```suggestion
Kent Ridge MRT Station-> Opp University Health Centre-> University Town
```
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/43#discussion_r505453391" expanded>

```suggestion
PGP-> Kent Ridge MRT Station-> Opp University Health Centre-> Yusof Ishak House-> Central Library-> Kent Ridge-> Museum-> University Town-> University Health Centre-> Opp Kent Ridge MRT station-> PGPR
```
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/43#discussion_r505453538" expanded>

```suggestion
PGP-> Kent Ridge MRT Station-> Opp University Health Centre-> Yusof Ishak House-> Central Library-> Kent Ridge-> Museum-> University Town-> University Health Centre-> Opp Kent Ridge MRT station-> PGPR
```
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/43#discussion_r505453975" expanded>

```suggestion
PGP-> Kent Ridge MRT Station-> Opp University Health Centre-> University Town-> Raffles Hall-> Kent Vale-> EA-> NUS IT-> University Health Centre-> Opp Kent Ridge MRT station-> PGPR
```
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/46#discussion_r505586762" expanded>

Might not want to add assertions to a public method
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/59#discussion_r507148181" expanded>

Wondering if we want to move it to a different class like #57 
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/74#discussion_r508232665" expanded>

Can this be refactored into another function or maybe a function in Ui?
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/74#discussion_r508240902" expanded>

Okie!
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/78#discussion_r508991525" expanded>

```suggestion
logger.log.2
logger.log.3
logger.log.4
```
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/78#discussion_r508991590" expanded>

```suggestion
```
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/84#discussion_r510057010" expanded>

```suggestion
  * [3.3.Check for buses at a bus stop: ```/bus```](#33-check-for-buses-at-a-bus-stop)
```
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502768546" expanded>

Great catch!
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502768575" expanded>

Oops!
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502769370" expanded>

Oh no! We missed that
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502824078" expanded>

Comment not required 

```suggestion
      
```
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/26#discussion_r503179947" expanded>

Hahah, okie! I will push these changes in a new commit!
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/26#discussion_r503180339" expanded>

Okie! I will follow that approach.
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/33#discussion_r505176096" expanded>

Thank you for the feedback!
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/35#discussion_r505250333" expanded>

Oh yes! That's a better way to do it.
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/57#discussion_r507147026" expanded>

Sure! I was wondering if those should be added if and when they are being used...
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/6#issuecomment-705646110" expanded>

Minor change needed for parser class so that the child classes can make use of splitCommand() method
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/28#issuecomment-706952910" expanded>

I realized that this will effect other features involving the use of the bus route array in main. We should remember to make appropriate changes in other pull requests that are open
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/29#issuecomment-707218026" expanded>

Since #13 is linked to a different feature, you might want to create a new issue solving a different user story. For example, "As a forgetful person, I would like to know which buses are available in my zone, so that I can avoid entering the wrong bus."
</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/8#issuecomment-707235152" expanded>

Need to add more tests to account for the new command classes added.
</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/31#issuecomment-708518522" expanded>

Is this supposed to fix the issue #18 ?
</panel>

<panel  header="**49 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/18#issuecomment-708915072" expanded>

Seems that this issue should have been closed already!
</panel>

<panel  header="**50 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/34#issuecomment-708966125" expanded>

This issue has be resolved.
</panel>

<panel  header="**51 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/8#issuecomment-709028492" expanded>

Issue can be closed now!
</panel>

<panel  header="**52 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/68#issuecomment-712083116" expanded>

Also contributes to #54 
</panel>

<panel  header="**53 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/60#issuecomment-712625108" expanded>

Fixed by #59 
</panel>

<panel  header="**54 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/64#issuecomment-712625405" expanded>

Fixed by #52 
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/70#issuecomment-712625640" expanded>

Fixed by #69 
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/75#issuecomment-712688824" expanded>

working towards issue #55 
</panel>

</panel>


<panel type="info" header="### 12. NG SHU LIN JANE `@Jane-Ng` (33 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/19#discussion_r500101515" expanded>

It would be better if "commandArgs" is used instead of "arg" to standardize with the rest
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/19#discussion_r500102074" expanded>

It would be better if you initialise the Chapter object in the ReviseCommand
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/20#discussion_r500164759" expanded>

follow the format of methodUnderTest_inputGiven_expectedOutput for test methods
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/27#discussion_r501502604" expanded>

out.println will do for this line
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/27#discussion_r501507288" expanded>

It would be better to use .equals instead of == and != for comparing the string
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/27#discussion_r501509289" expanded>

instead of checking if (access.getModuleLevel() != "") first, you can do something like this:
 if (access.getModuleLevel().equals("")) {
    // print error message
    return;
}
// rest of the code that should be executed
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/27#discussion_r501509916" expanded>

instead of checking if (access.getChapterLevel() != "") first, you can do something like this:
if (access.getChapterLevel().equals("")) {
// print error message
return;
}
// rest of the code that should be executed
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/27#discussion_r501510727" expanded>

instead of checking if (access.getModuleLevel() == "") first, you can do something like this:
if (!(access.getModuleLevel().equals(""))) {
// print error message
return;
}
// rest of the code that should be executed
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/55#discussion_r503286251" expanded>

will getting the chapter in ReviseCommand be better? means you pass the chapterIndex in the ReviseCommand() 
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/62#discussion_r504463961" expanded>

This method is not needed, it has been changed to loadCard
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/62#discussion_r504466630" expanded>

Would the original way be better?
Admin admin = new Admin(storage.loadModule());

Then don't need to import the ModuleList class
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/62#discussion_r504470087" expanded>

Should all these be under Ui class instead?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/62#discussion_r504471131" expanded>

Should return ListDueCommand()?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/62#discussion_r504472579" expanded>

This method not needed as well
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#discussion_r504584349" expanded>

Do not need to pass in Storage object
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#discussion_r504584467" expanded>

Do not need to pass in Storage object
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#discussion_r504586930" expanded>

Yes
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505278250" expanded>

I think for this, you can have a return after line 41 so that you would not need the else part. Then the rest of the code will follow. Something like this:
if (dueChapters.size() == 0) {
    ui.showToUser("You have no tasks due today! Please check back again tomorrow!");
    return;
}
// rest of the code
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505278752" expanded>

you can use ui.showToUser
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505278892" expanded>

you can use ui.showToUser
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505286045" expanded>

you can use ui.showToUser
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508400387" expanded>

maybe you should check if the user entered a valid argument? for example you can check if the user entered a valid date, and if the user user entered 'history', you can pass today's date as the argument
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508402460" expanded>

Maybe you call createHistoryDir in the method createAdmin in storage.
And for createHistory, you can call it in the method saveHistory
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508405986" expanded>

instead of checking for history here, you can check in loadModule in storage instead. so that it wont add the history folder as a module object
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508406258" expanded>

instead of checking for dues here, you can check in loadChapter in storage instead. so that it wont add the due folder as a chapter object
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508410925" expanded>

if the due date is null, you can show something like "No due date" instead of "due by null"
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#discussion_r508411030" expanded>

if the due date is null, you can show something like "No due date" instead of "due by null"
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/81#discussion_r508333778" expanded>

you can use setIsModuleLevel() to do this
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/81#discussion_r508334256" expanded>

you can use setIsAdminLevel() to do this
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/81#discussion_r508339921" expanded>

you can use setIsModuleLevel() to do this
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/81#discussion_r508339954" expanded>

you can use setIsChaptereLevel() to do this
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/85#discussion_r509174521" expanded>

these 2 methods not needed anymore
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/85#discussion_r509176225" expanded>

maybe you can do throw new FileNotFoundException(message) then it will show the error at Kaji.java
</panel>

</panel>


<panel type="info" header="### 13. DANIEL LIM ZI-JIE `@daniellimzj` (28 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501634444" expanded>

Could this method be generalised? It doesn't necessarily have to be a command specifically used when saving and loading files.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501635648" expanded>

I think some quotation marks could make this clearer, and in the end of the sentence, I think you might mean all other cases. 
```suggestion
     * @return Boolean true if string is "true" (ignoring case), and false for all other cases.
```
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501636488" expanded>

Should this be split into two methods, one for each save file? Might make it clearer.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501636936" expanded>

Same as above, this could be split further into 3 methods, if it makes it clearer.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501637396" expanded>

I think the JavaDoc comment for this function, and the variable's descriptive names, make this comment a bit unnecessary.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501637999" expanded>

Similar to a previous comment, the JavaDoc comment and good variable naming makes this comment seem unnecessary.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501639357" expanded>

I think these functions only differ in the parameter you are passing in. You could consider making it one function?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501640531" expanded>

Could the method be renamed to better reflect the variable you are creating?
```suggestion
                String noteToSave = convertNoteToString(note);
```
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501642077" expanded>

Same comment, you could consider changing the method name to better fit what it does.
```suggestion
                    dataToSave = convertDeadlineToString(task, taskType);
```

You could consider this for the methods below too.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501643383" expanded>

Consider changing these to non-static variables. Such that we would be accessing the object for the getType() method instead of accessing the class.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/39#discussion_r502993372" expanded>

Could consider using the DATE_TIME_FORMATTER from the FileCommand class.
There's no need for constants to be private, and if we ever decide to change the DATE_TIME_FORMATTER there would be less stuff to change.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/59#discussion_r504414615" expanded>

Could be renamed to make it consistent with checkForNotesSaveFile and other variables
```suggestion
    private void checkForTasksSaveFile(File saveFileTasks) {
```
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/58#discussion_r504419012" expanded>

Since the LifEasier class already instantiates a TimetableUi, could consider just passing that object into the execute command instead of instantiating a new one.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/58#discussion_r504419575" expanded>

Could consider putting this into the seedu.lifeasier.ui package with the rest of the ui classes.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/58#discussion_r504420585" expanded>

You could also consider leaving it like this, and in LifEasier creating a new DisplayScheduleCommand and calling the method from that object. I'm honestly not too sure!
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/56#discussion_r504408269" expanded>

You could consider placing this section before the case for when there are no tasks in the day. Something to do with making the happy path prominent:
https://nus-cs2113-ay2021s1.github.io/website/se-book-adapted/chapters/codeQuality.html#make-the-happy-path-prominent
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/56#discussion_r504408843" expanded>

Should this import be removed if we are no longer using the Ui class?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/56#discussion_r506166432" expanded>

Oh yes I forgot about that. My bad!
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r506885538" expanded>

You could add the "-1" logic in this line, so you don't need to keep typing it afterwards

```suggestion
            noteNumber = Integer.parseInt(ui.readCommand()) - 1;
```
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r506886109" expanded>

You could consider refactoring this into the Parser class, and passing the parser object into the execute method too.
Doing this could help in ensuring SRP.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r506886835" expanded>

Consider adding a line in between to ensure the JavaDoc standard is adhered to.
```suggestion
     * Parses the deleteNotes command that the user inputs.
     * 
     * @param input String containing the user's input.
```
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/61#discussion_r506887029" expanded>

Same for a few of the other JavaDoc comments!
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012428" expanded>

Could consider using constants for these:
```suggestion
                times[INDEX_START] = start;
                times[INDEX_END] = end;
```

where INDEX_START = 0 and INDEX_END = 1
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012497" expanded>

same for getting the "by" of the deadline as well!
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012562" expanded>

Same comment as the earlier one!
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/66#discussion_r507012650" expanded>

Could you consider renaming this to include "Message" for consistency?
```suggestion
    public void showEditableParametersMessage(String type) {
```
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511551519" expanded>

This might make it less object oriented though! I'm not too sure what is the best way also though.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/74#discussion_r511552084" expanded>

Can I suggest that maybe one way to do this would be to put the methods and variables in the NoteHistory and TaskHistory classes within the TaskList and NoteList class instead? This way we don't need to pass another class into every method, and instead everything is nicely contained within the TaskList and NoteList classes. 
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/64#discussion_r506935988" expanded>

Good point, I'll change it and see how it looks!
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/64#discussion_r506936507" expanded>

The reason why I left it like this for now was because I found it difficult to have descriptive meaningful method names if I were to split it up.
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/13#issuecomment-703603528" expanded>

Fixes #5  
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/issues/5#issuecomment-703607801" expanded>

Closed by merging pull request #13 
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/issues/6#issuecomment-703629738" expanded>

Closed in pull request #15 
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/25#issuecomment-704699356" expanded>

Closing pull request as the build tests fail.
Trying again in another branch.
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/issues/23#issuecomment-706502077" expanded>

Fixed in pull request #28 
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/issues/24#issuecomment-707108474" expanded>

Fixed by pull requests #35 #36 #37 #38 #39 #40 #41
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/issues/32#issuecomment-707108553" expanded>

Fixed by pull requests #35 #36 #37 #38 #39 #40 #41
</panel>

</panel>


<panel type="info" header="### 14. JERICHO CHUA WEI QUAN `@jerichochua` (27 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/23#discussion_r499947516" expanded>

Once we have Ui class we can consider moving these lines of code there instead, and call the required methods. Same for `viewProfile()`.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/24#discussion_r499946891" expanded>

Try to be consistent with the spacing between methods? And add the whitespaces in the method names, eg
` public Exercise(String name, Calorie caloriesBurnt) {`
For this class and the other classes as well.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/34#discussion_r500933573" expanded>

I think you haven't deal with the case when the user enters `bye`. Maybe use a boolean `isExit`, equal to `c.isExit()` and use that as the condition for the while loop so that the loop can be terminated?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/34#discussion_r500934176" expanded>

Remove the whitespace between `Fitr` and the open bracket, i.e. `public Fitr(...) {`
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/34#discussion_r500934679" expanded>

I believe the exception class is not yet created, when it's created it should be `FitrException` (follow camelcase)
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/34#discussion_r501461883" expanded>

Need to override `isExit()` method
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/47#discussion_r502988410" expanded>

Run the `checkstyleMain` and fix the coding standard violations
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/47#discussion_r502988578" expanded>

Use `getBmi` instead of `getBMI`
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/74#discussion_r507123267" expanded>

Maybe consider using primitive types instead.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/87#discussion_r508431441" expanded>

Would it be possible to put this in a new class? Something like a `DateTimeManager` class?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508142809" expanded>

Need a fullstop at the end of the sentence, otherwise the checkstyle will complain.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508142987" expanded>

Need to change the text - you're reading the tips file.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508143498" expanded>

If we move the tips.txt file into a resources folder, then I think there isn't a need to pass the path of the file to the constructor since the location of the text file would be fixed. Can consider removing it from constructor and just define `src/main/resources/tips.txt` above.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508143729" expanded>

Wouldn't be necessary - the file is not user generated, and it would have been packaged with the JAR file already.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508145674" expanded>

Check indentation
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508146701" expanded>

Will the user be entering a command to get tips? If not I don't think it should be a `Command` class... looking at the main class it seems like it's not, it shows up whenever the program first runs. I think can consider not extending `Command` and just use a standalone class, maybe something like `TipManager`?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508147008" expanded>

Feels like this can be simplified, since the tips will be shown when the program first runs, and the user isn't going to be typing a command for tips. See the comment in the `TipCommand` class..
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508147363" expanded>

See the comments in the `Storage` class - I don't think its necessary to include a file path of the tips file since it's going to be included inside the JAR file, so can consider removing it from the constructor here..
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508430374" expanded>

I think should put in a single line, not separate
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/86#discussion_r508430721" expanded>

Since the class is not a command anymore, maybe can consider putting it in another package? Maybe a `tip` package?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/90#discussion_r508943867" expanded>

Got two different `caloriesInFood` here...
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/90#discussion_r508944339" expanded>

Isn't the return type of calories an `int`?
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/89#discussion_r508928576" expanded>

Are these commented lines still needed? If not needed then maybe can consider removing them?
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/89#discussion_r508928639" expanded>

Same here - maybe consider removing them if not needed?
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/98#discussion_r509845952" expanded>

Need to add `public` in front
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/98#discussion_r509846051" expanded>

Need add `public` in front also
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/98#discussion_r510013891" expanded>

I think using `assert` like this is abit dangerous?
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/issues/17#issuecomment-704233501" expanded>

Fixed in #24 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/41#issuecomment-706527171" expanded>

Finished implementing the loading and saving of files for user's profile, food and exercise lists.
Checks failing because of the AddCommand class.
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/99#issuecomment-714364691" expanded>

Already implemented, thanks
</panel>

</panel>


<panel type="info" header="### 15. NEIL BANERJEE `@neilbaner` (25 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502854860" expanded>

Do you think this is better here, or in the CliUserInterface class? I did do it this way in my iP, but I'm not sure this is necessarily the better way to do it. 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855041" expanded>

Does this ever get executed? I thought if there's an exception it will only execute the catch block. 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855123" expanded>

This is probably ok for now, but we should really do something a bit more useful to the user than just printing the stack trace, perhaps throw a custom exception. 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855157" expanded>

Maybe later we should create a ZeroNoteException class that all the regular exceptions will inherit from? For now this should be fine though. 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855375" expanded>

Should this really be static?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855396" expanded>

We should probably implement a custom exception for this, but it's probably fine for now...
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855498" expanded>

The whole thing inside the print statement could be refactored into the TaskList class, as a `toString()` method or something, do you agree?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855546" expanded>

This should probably be changed in the future to include a logo for Zer0Note. 
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855634" expanded>

Could we just use `input[1]` for this?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855876" expanded>

We could also potentially add this as a field in CliCommand, do you think that might be a good idea? Since every command will have a command word. 
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502855960" expanded>

We could have subclasses of CliCommand for commands with and without arguments, and the subclass with arguments could contain these fields to be overridden. Do you think that might work?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502856070" expanded>

We should add custom exceptions for all of these, catch those in CliUserInterface, and use an inherited `printErrorMessage()` method or something right?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502856211" expanded>

The function doesn't actually throw any exceptions though, as confirmed by the method signature, right?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502892936" expanded>

I could be wrong here, I'm sure the creators of IntelliJ know more about Java than me :P
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502856489" expanded>

Potentially put the title and the content on separate lines?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502856526" expanded>

Should we add a `setTitle()` as well?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502856720" expanded>

I think execute() should call the methods below as necessary, shouldn't it?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502892834" expanded>

So when you want to list the notebooks, the CliUserInterface can do something like: 

```java
CliCommand command;

if(input.startsWith("List"){
    command = new List(commandArgs, noteBookList);
} 
...
command.execute();
```
And then in the execute method:
```java
public void execute() {
    switch(commandArguments) {
    case "nsp":
        listNotebooks_nsp();
        break;
    ...
    }
}
```

Not particularly good code up here, but I think you get the idea of what I meant, right?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#discussion_r503156836" expanded>

Do you think something like `ApplicationState` would be a more appropriate name, since this class encapsulates more than just the mode?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#discussion_r503157669" expanded>

We only ever have one NotebookShelf per instance, so perhaps this should be renamed to `notebookShelf` instead of `currentBookShelf`?


</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#discussion_r503158803" expanded>

This should probably be renamed to match the field name, no?
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#discussion_r503164052" expanded>

We should move this to a setter as discussed in the meeting right? Or am I remembering incorrectly?
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/59#discussion_r505885303" expanded>

This could potentially be replaced by throwing new exception, couldn't it?
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/59#discussion_r505886353" expanded>

Nice use of exceptions here 👍
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/80#discussion_r509846746" expanded>

Image link appears to be dead, perhaps merge first and then fix to get the final URL
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#discussion_r503247594" expanded>

I decided to not worry about exceptions too much at this stage. There is a better way to do exceptions that I want to discuss later. For now this should be ok as it causes the program to not crash. 
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#discussion_r503247887" expanded>

If you feel like it sure!
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/53#discussion_r504572958" expanded>

Thanks, it was ~~one press of `Ctrl-Alt-L`~~ a lot of hard work and software engineering, yes, that's definitely what that was...
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/53#discussion_r504573178" expanded>

I blame IntelliJ for automatically "optimising" that
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/53#discussion_r504575449" expanded>

:)
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/issues/9#issuecomment-703403183" expanded>

Duplicate of #7 
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/issues/11#issuecomment-703403647" expanded>

Duplicate of #8 
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/issues/12#issuecomment-703408358" expanded>

Duplicate of #10 
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#issuecomment-706686466" expanded>

This should solve #18 as well. 
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#issuecomment-706707990" expanded>


We could pass the input arguments, as well as the notebook list, in the constructor perhaps?Sent from my Samsung Galaxy smartphone.
-------- Original message --------From: Long Nguyen &gt;notifications@github.com> Date: 11/10/20  21:48  (GMT+08:00) To: AY2021S1-CS2113T-T12-3/tp &gt;tp@noreply.github.com> Cc: Neil Banerjee &gt;neilb5400@gmail.com>, Comment &gt;comment@noreply.github.com> Subject: Re: [AY2021S1-CS2113T-T12-3/tp] Add list() function in notebook mode (#42) 
@longngng commented on this pull request.



In src/main/java/seedu/duke/userinterface/command/List.java:
>  public class List extends CliCommand {
+
     @Override
     public void execute() {
 

But the list() function needs the object as well, like listNotebooks_nsp(Notebook sampleNotebook), so I'm not sure how to code it. Also, should the List class handle input arguments like "nsp"? That doesn't seem follow the principle right?

—You are receiving this because you commented.Reply to this email directly, view it on GitHub, or unsubscribe.

</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#issuecomment-707009276" expanded>

I think this PR would take care of #32 and #8 as well.  
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/50#issuecomment-707461703" expanded>

Looks like there's probably some missing imports for exceptions. 
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/52#issuecomment-708181901" expanded>

Functionality of this code has been verified to be correct. I/O redirection tests have not yet been rewritten. Merging so I can fix the style to be more consistent. 
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/53#issuecomment-708213506" expanded>

I'll try to finish as much as I can by 2100 today, after which you guys can review, merge and work on it further. Please do try to follow the style, and OOP conventions, I used as much as possible for the sake of consistency. Thanks all!
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/53#issuecomment-708334835" expanded>

We really need to rewrite the IO redirection tests...
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#issuecomment-708701540" expanded>

I believe this solves #13 and #16. 
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/94#issuecomment-716114878" expanded>

Thanks for the fixes @chuckiex3! Since you requested review from everyone else too, should I wait for more people to review before merging? I think it should be fine though. 
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/94#issuecomment-716115257" expanded>

Your wish is my `seedu.Duke.userinterface.Command` :)
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/96#issuecomment-716128757" expanded>

Implemented saving for notebooks. Loading to come soon. 
</panel>

</panel>


<panel type="info" header="### 16. HENG FU YUEN `@HengFuYuen` (24 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/21#discussion_r502865963" expanded>

Perhaps you can consider changing the method name to getPortionSize.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/21#discussion_r502866152" expanded>

Perhaps you might want to leave a blank line at the end of the file.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/21#discussion_r502866754" expanded>

Maybe you can consider adding JavaDoc comments to some of the methods in this class.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/21#discussion_r502866981" expanded>

Perhaps you would like to split them into different tests using assertEquals, assertTrue, etc for testing and using a three-part naming style for each method e.g. methodUnderTest_inputGiven_expectedOutput
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/19#discussion_r503305489" expanded>

Perhaps you would like to leave a blank line at the end.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/19#discussion_r503306977" expanded>

Maybe you can consider using a specific import rather than a wildcard import.
Also perhaps you can consider using the three-part name format for the naming the testing methods: methodUnderTest_inputGiven_expectedOutput
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/19#discussion_r503308534" expanded>

Perhaps you would like to consider this for the other files as well.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/14#discussion_r502862292" expanded>

Perhaps you can consider splitting them into individual tests and the consider naming each test in the following three-part format: methodUnderTest_inputGiven_expectedOutput
E.g.
```
@Test
public void getCalorie_food_returnsCalorie() {
    assertEquals(480, testFood.getCalorie);
}

```
Also, for the assertEquals method, I think the parameters are (expected, actual) so you might also want to consider switching the variables around.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/22#discussion_r502868854" expanded>

Perhaps you would like to import specific methods rather than using wildcard import.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/22#discussion_r502868982" expanded>

Perhaps you can consider splitting them up into different tests using assertEquals and assertThrows for tests that throw exceptions.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/42#discussion_r504386401" expanded>

Perhaps you can consider leaving a new line at the end.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/42#discussion_r504386461" expanded>

Consider breaking this up into different methods.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r503647344" expanded>

Maybe consider adding a semicolon at the end of this line.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r503647515" expanded>

Perhaps consider adding () after clear so `.clear()`
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r503648491" expanded>

Maybe you can consider using `ui.printDatabase(manager.getDatabase.getFoodList)` because I think printAllData method is used mainly for debugging purposes.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r503648636" expanded>

Hi! Perhaps you would like to add in the name parameter when constructing the person class as well as currently the first input parameter of a person is actually their name. 
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r503649058" expanded>

Perhaps consider using break instead of return after each case switch.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r503649542" expanded>

I am not sure if this will be an error, however, I have changed my printFoodList input parameter to a String instead of  a FoodList, maybe you would like to add in `.toString()` behind the `getFoodLis()`
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r503651146" expanded>

Sorry for informing you late, last night I decided to change the method name to ui.printPersonInfo(String personInformation)  to keep things consistent and shorten the method name, so perhaps you would like to make an edit as well. Also, I can't seem to find the variable personInformation that you passed in as a parameter maybe you would like to input `getPerson.toString()` instead as the method takes in a String.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r503652527" expanded>

I think foodList might not have a get method so maybe you can consider shifting line 114 up as line 114 returns a String representation of the deleted item and you can just pass this String into the ui's printDeletedFood method.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#discussion_r504073843" expanded>

Perhaps you may want to change this as Ui does not have a divider method.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/61#discussion_r509840359" expanded>

Perhaps consider changing female to an if-else case and the else case can throw an exception. Maybe you would like to consider this for activity level as well.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/61#discussion_r509840579" expanded>

I am not very sure if an update would be good/necessary for this file but perhaps you can consider.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/61#discussion_r511323691" expanded>

Perhaps you might want to make a specific imports rather than wildcard imports.
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/6#issuecomment-706806068" expanded>

Thank you for reviewing! 

- Reasons behind the implementation of setter methods: Possible future extensions that enable users to make edits to their information in case they have inputted it wrongly or if the information has changed over time. (Editing function is not currently available in this iteration as the user can restart the program to reinput the information but this function could be considered in the next when user data is saved and cannot be edited otherwise). However, if this is not implemented in the next iteration and is unnecessary, it will be removed. 

- Will add current weight field next iteration
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/19#issuecomment-707133479" expanded>

As the Food class (functional but without JavaDoc comments) are already merged into the master branch of the team repo, maybe you can consider pulling the team repo into you local repo and merging the master branch to your branch (take note not to do it the other way around) so that your branch is up to date with the team repo and this would also likely minimise any possible merge conflicts.
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/37#issuecomment-707806834" expanded>

Merging of Calculator was done in another PR #19.
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/issues/8#issuecomment-708143259" expanded>

Satisfied by #42 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/issues/11#issuecomment-708143399" expanded>

Satisfied by #42
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/issues/43#issuecomment-708143558" expanded>

Satisfied by #42
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/40#issuecomment-708529075" expanded>

Merging of Main. Parser and Manager done in #44 
</panel>

</panel>


<panel type="info" header="### 17. VISHESH P ARORA `@wish2023` (24 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/7#discussion_r498192939" expanded>

Nice job on creating the package early
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/7#discussion_r498193153" expanded>

Yup we don't need this anymore!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/12#discussion_r499200563" expanded>

Make sure to have this on two seperate lines
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/12#discussion_r499694227" expanded>

Brilliant
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/12#discussion_r499694640" expanded>

Well organised the code looks really neat!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499316393" expanded>

Maybe consider renaming the "time" parameter to "startTime" to avoid confusion
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499316565" expanded>

Consider renaming the "time" parameter to "startTime" here too as this is the time the task should task.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499336724" expanded>

Consider renaming the "Commands" class to "Command" as this relates to a single command.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499337612" expanded>

Yup good naming!
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499337757" expanded>

This looks good!
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499338127" expanded>

It may be better to leave this in lowercase, as this is what our user guide says. We can convert this into an enum in our next version?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499338611" expanded>

Consider renaming "c" to "command"
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/10#discussion_r499700814" expanded>

Renaming this to `taskList.addTask` would be great :)
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#discussion_r502745974" expanded>

Good that the importance is being converted to upper case here!
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#discussion_r502746011" expanded>

Remember that the user will type "high" instead of "HIGH"
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#discussion_r502746472" expanded>

I think we can remove the first addTask() . The method right below this seems to have the same functionality in addition to assigning a unique index value
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#discussion_r502746723" expanded>

Noted that the user will now see the list from the timetable class only
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/43#discussion_r502746915" expanded>

Looks great!
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/99#discussion_r506940123" expanded>

This test will return true once 23-10-2020 is in the same week as the current date. Perhaps there's a better way to generate a false case. Maybe the recurrence can be `(LocalDate.now() + 7 days).toString()`
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/99#discussion_r506940323" expanded>

This test is exactly the same as `testIsTaskIncluded_filterByToday_returnsTrue()`. Perhaps a better input could be a day that lies in the same week as `LocalDate.now` and adding this as a parameter.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/99#discussion_r506940423" expanded>

Good idea to simplify the code
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/99#discussion_r506940507" expanded>

Will we have to change the dates EXPECTED.TXT everytime we test?
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r509038196" expanded>

Remember to update this new default value in user guide
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r509039596" expanded>

Seems like you have a `getDurationString()` it may be easier to use that?
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499654304" expanded>

Noted! Has been changed to `edit`
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499671628" expanded>

@amanda-chua take note method name has been changed to `addTask`
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#discussion_r502876654" expanded>

Whoops forgot to remove this
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/66#discussion_r503147403" expanded>

ooh good spot
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507931049" expanded>

I just implemented this for debugging purposes I have removed it now
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r508212094" expanded>

Whoops forgot to delete
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/130#discussion_r509860283" expanded>

Yup let's change it to `logicManager` once that's merged
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/130#discussion_r509860326" expanded>

Oh whoops
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/130#discussion_r509860375" expanded>

Okay I'll delete this and add it in another branch
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#issuecomment-706671988" expanded>

> Left some comments about some parts of the code, some are just suggestions, the important thing is the `main` function inside `ForecastFilter`. I think you forgot to remove it?
> 
> Also, can you add Junit test cases for `ForecastFilter`? Or since we are down on time we can also merge this pr first and add that later.

Noted, will add Junit test cases for `ForecastFilter` tomorrow
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/60#issuecomment-706830347" expanded>

Junit test cases are now created for `ForecastFilter`
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/65#issuecomment-706915598" expanded>

Note recurrence will still be "today", I have just created a recurrenceDate attribute. This is to make it easier future versions when recurrence will be a day of the week, so it'll be good to leave that as a string.
</panel>

</panel>


<panel type="info" header="### 18. SAMUEL LEOW WEI HAN `@samuellleow` (24 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/8#discussion_r500750720" expanded>

Should the creating of a new instance be inside this function instead?
public TeamMemberList() {
     members = new ArrayList&gt;>();
}
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/8#discussion_r500751481" expanded>

Should we account for zero team members? Catch an error?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/22#discussion_r503180154" expanded>

Good implementation to switch between different views
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/35#discussion_r503918744" expanded>

Would extracting to the UI class be neater? 
So everything related to printing will be under user interface.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/35#discussion_r503921217" expanded>

Similar case here, would extracting the printing function to UI class be neater?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/35#discussion_r503921446" expanded>

Similar case here, would extracting the printing function to UI class be neater?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/36#discussion_r504478823" expanded>

Would it be clearer if the name of the variable is changed to secondProjectIndex.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/36#discussion_r504480920" expanded>

Would combining these statements into one single command be neater. Use line wrapping for the different lines of output.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/34#discussion_r504483802" expanded>

I think that output-ing a warning for the user and ask them to provide a full name or have them provide a specific index would be better.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505156897" expanded>

Can consider changing the exception name to something else other than Duke, unless we are still naming our program Duke. (small issue)
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505158290" expanded>

I feel that this part is confusing. I understand that it is supposed to throw an error, however the exception message is "add task", maybe change it to "add task error"?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505158420" expanded>

similar case here, would changing it to "add project error" be clearer?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505158541" expanded>

similar case here, would changing it to "switch error" be clearer?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/47#discussion_r505159567" expanded>

You can check my implementation for this variable so that when we print out the description, there will be spacing in between the words.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/47#discussion_r505162340" expanded>

require an else statement? We can implement the "deadline" function for projects as well. 
I would be able to do that since I need to combine it with printing out the statement during the "select" function.
If approved, I will create an issue for it and start working on it.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/49#discussion_r505310023" expanded>

Im not sure about the rest, but I got confused when i first read the code.
Maybe we can change the name to getTaskInsideAProject()?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/49#discussion_r505310544" expanded>

same here, would changing to createTaskInsideAProject be better?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/49#discussion_r505310766" expanded>

same here, would changing to deleteTaskInsideAProject be better?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/49#discussion_r505311391" expanded>

same here, would changing to getNumberTaskInsideAProject be better?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/57#discussion_r506950015" expanded>

Should we extract this to Ui class or Exception class??
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/57#discussion_r506950028" expanded>

Should we extract this to Ui class?
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/65#discussion_r507150530" expanded>

For future reference, should we remove this as the task does not require multiple inputs.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/65#discussion_r507151712" expanded>

For future references, should we remove this??
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508335823" expanded>

I don't think there is a need for IndexOutOfBoundsException here.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/61#discussion_r507880533" expanded>

hmmm, you are right I can combine it together with the toString() function
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/64#discussion_r508300356" expanded>

Fixed!!
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/64#discussion_r508302262" expanded>

Fixed!!
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/64#discussion_r508302859" expanded>

Fixed!!
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/issues/62#issuecomment-712942872" expanded>

Fixed!!
</panel>

</panel>


<panel type="info" header="### 19. CHEONG RAY YANG, MARCUS `@Kafcis` (22 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/55#discussion_r502916370" expanded>

According to the UG, the file should be data.csv. This was my mistake that I did not fix because it was temporary test code.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502913837" expanded>

the correct name here according to the user guide is load.csv. This was my mistake, eventually we should allow the user to change what file they are loading
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502914017" expanded>

There is a possibility of an empty save file, should initialise maxNumber to the default of -1?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502914388" expanded>

Much cleaner code than the original
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502914860" expanded>

found it a bit weird that the argument order is not the same as add task, I know that the number is a required argument so its in the front, but it might look a bit messy to others.

I would have done the same, but am also not too sure about the correctness
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502916872" expanded>

Done
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502917094" expanded>

Sounds good!
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502917250" expanded>

The TaskList initialises the maxNumber as -1. We can either change it here or there as long as its standardised. I suggest changing it here because I used this in some of the test code and allows us to check fo rpotentially unused TaskLists 
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507746977" expanded>

This if else block can be replaced with a switch block to improve readability
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507750927" expanded>

This is a good idea
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507756733" expanded>

small nitpick, i can start from 0 then go to i&gt;6, functionality wise is the same but might be more readable for others
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507760591" expanded>

not sure if we should support having tasks with the same task number, as long as the cloned tasks are not saved should be ok. 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/115#discussion_r507761050" expanded>

Nice cleanup here, eventually should be moved to Time class
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r507792191" expanded>

need more parser code to change this later
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r507794110" expanded>

maybe can use the string "+-------"?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r507795158" expanded>

same thing as line 104,  maybe can use only 1 string
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r507798845" expanded>

not sure if this is going to be flagged in the checkstyle
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r507801273" expanded>

Something similar is in 115, could consider making it an attribute or a method call from the Task/Time class
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r509017099" expanded>

I think that keeping these this here is better, it keeps calling bits and pieces all the time. If we do eventually do refactor it, the class needs to put the entire timetable in one shot
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r509017774" expanded>

we can just throw an error that says that the tasknumber is conflict with another, I'll handle this in the allocator PR
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r509017888" expanded>

awesome
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/156#discussion_r511342162" expanded>

Add a check if the taskRecurrence is Today or a particular date, probably don't need "every today" to be printed out
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501588020" expanded>

I gladly accept this nitpick
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501591524" expanded>

I refactored this part and deleted the overloading because it was not being used
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501597111" expanded>

It deletes the correct thing, but I have to agree that the naming is a bit off
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501605047" expanded>

The overloaded method is to distinguish tasks that require a new index vs a preloaded task with its own assigned index
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501627129" expanded>

I'll just keep it in for now until Alston is done with the main Athena
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501627182" expanded>

I'll just keep it in for now until Alston is done with the main Athena
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/96#discussion_r506840742" expanded>

I'll change it to isFlexible
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/96#discussion_r506841182" expanded>

I need the sorting according to time so ArrayList is actually a bit better for this scenario, I might need a bit of help with the time sorting, not very clear how to do it
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/96#discussion_r506841455" expanded>

Ok will change soon
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509845940" expanded>

Its the code coverage report files, they might appear again so I put it here so it won't be added accidentally
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509846168" expanded>

That works too
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r509849337" expanded>

I changed it to DAY so we do not need to make a new Forecast value
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#discussion_r510707525" expanded>

Eventually we can assign it in the settings, its a magic  number for now
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/119#discussion_r508987649" expanded>

It actually quits if it hits this part so the user would not notice
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/8#issuecomment-703260880" expanded>

I was thinking the same thing actually, it is a bit difficult to store 2
separate sets of data in one csv

On Sun, 4 Oct 2020 at 10:05 PM, Daniel Lim Wee Soong &gt;
notifications@github.com> wrote:

> @Kafcis &gt;https://github.com/Kafcis> I think we don't need to store the
> timetable generated from the task list in a file, because the same
> timetable can always be generated from the same task list. Looking at the
> scale of this, there won't be much impact in performance if we generate the
> timetable when the program starts. But if you wanna do it, you can use
> getTimetable() to get the week's timetable.
>
> @alstontham &gt;https://github.com/alstontham> The timetable given to the Ui
> will be a list of TimetableDay objects, each containing a date and a list
> of Tasks. So you can work on printing that now.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> &gt;https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/8#issuecomment-703260677>,
> or unsubscribe
> &gt;https://github.com/notifications/unsubscribe-auth/ALNIBIWF2UI3JON5UFBE72DSJB6J5ANCNFSM4SAG45PA>
> .
>

</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/19#issuecomment-704852377" expanded>

I wanted to avoid changing Amanda's code, but I can do it as a method
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#issuecomment-705492140" expanded>

I think this is safe to merge, most of the checkstyle problems are addressed in the next PR
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/39#issuecomment-706504308" expanded>

Duplicated
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#issuecomment-706706921" expanded>

That sounds logical, I will do that as well for the subsequent PRs too
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/71#issuecomment-709765924" expanded>

we did a quick fix before v1, I'll settle this in another PR
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/100#issuecomment-712258912" expanded>

Yeah it's done
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/132#issuecomment-715222936" expanded>

It actually goes to that part because I don't want to keep checking if the task exists before I delete it. I think its bad form but it prevents the code from having too many layers. At the moment it is already like 3 layers of nesting at some parts. The comment is just to make sure it doesn't trip the checkstyle
</panel>

</panel>


<panel type="info" header="### 20. CHAN JIAN HAO `@ChanJianHao` (22 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/34#discussion_r501461402" expanded>

Would be good if an extra line is added after EOF. 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/34#discussion_r501473777" expanded>

All good now!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/89#discussion_r504115002" expanded>

Perhaps we could standardize our logger to be something along the lines of private static `Logger LOGGER = Logger.getLogger("&gt;CLASS>.class.getName()");`

</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/137#discussion_r507530327" expanded>

Remember to add a new line for EOF, otherwise, LGTM!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/140#discussion_r507818270" expanded>

Perhaps use of a constant would provide more clarity. 
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r507819345" expanded>

Good use of logger!
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r507820295" expanded>

Perhaps a constant would provide better clarity? 
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r507821065" expanded>

Introducing a constant here would be good?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r507821512" expanded>

Might want to add a new line to EOF here. 
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r507821906" expanded>

How about a new line here?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/146#discussion_r508229041" expanded>

Would it be better to just gitignore the entire folder rather than individual sub-folders?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/146#discussion_r508229756" expanded>

Perhaps some meaning could be added to those numbers.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/146#discussion_r508230839" expanded>

Perhaps the phrasing for this message could be simpler 
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/146#discussion_r508232141" expanded>

Perhaps add a new line before EOF.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/156#discussion_r508967944" expanded>

Great work extracting datetime class!
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/158#discussion_r509001393" expanded>

Perhaps we could standardize the amount of periods we use for logs, and when to use them?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/158#discussion_r509001865" expanded>

Great work on updating the runtest file!
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/158#discussion_r509009096" expanded>

Alright sounds good! 
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/183#discussion_r511311000" expanded>

Perhaps you could standardize params naming to be `PARAMETER_NAME`?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/183#discussion_r511311640" expanded>

Great work in writing tests!
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/183#discussion_r511312362" expanded>

Great work separating long strings into multi lines. 
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/183#discussion_r511312669" expanded>

Is it good practice to print test results?
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/144#discussion_r508175548" expanded>

Updated, thanks!
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/171#discussion_r510557574" expanded>

Fixed that, good catch.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/171#discussion_r510557622" expanded>

Thanks for the reminder! 
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/185#discussion_r511484753" expanded>

You're right, shall leave the fix for the next update!
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/issues/77#issuecomment-708893422" expanded>

``
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/185#issuecomment-715941975" expanded>

> I apologise for the delay in the review. Thanks for working on the UG!

No worries, have a good weekend!
</panel>

</panel>


<panel type="info" header="### 21. SEAN LIM ZHI XIANG `@Aseanseen` (20 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#discussion_r500766169" expanded>

Violates coding standard due to *
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#discussion_r500767575" expanded>

This method seems a bit long, maybe do more abstraction
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#discussion_r501159165" expanded>

Need to remove the null due to updated constructor for DeleteCommand. 1 more occurence below.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#discussion_r502934341" expanded>

Violates coding standard for ternary expressions
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#discussion_r502934570" expanded>

Unsure why the spaces?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#discussion_r502934907" expanded>

Not sure about the readability of this line
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/39#discussion_r502921994" expanded>

Need to add a space between ) and { to prevent checkstyle violation
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/43#discussion_r503148769" expanded>

There are syntax errors here, see the checks tab for more info
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/47#discussion_r503679152" expanded>

Not sure if this is magic number?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/57#discussion_r504392641" expanded>

Maybe use .isEmpty()?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r503689364" expanded>

I believe the command should be changed to "edit -t"
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r504572755" expanded>

Maybe append with COMMAND_WORD here instead
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r504573310" expanded>

Curious why javadoc deleted? 1 more occurence below
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/74#discussion_r506271717" expanded>

I think the COMMAND_WORD should exist in the parent class EditCommand instead
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/74#discussion_r506272179" expanded>

Same concern that COMMAND_WORD should exist in the parent class EditCommand instead
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/80#discussion_r507181029" expanded>

Now the manager is able to take values from Mon to Fri. Will attempt to update it to be more date specific.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/85#discussion_r508402933" expanded>

Maybe set a variable to the set so that you do not have to keep repeating the getModulesMap()
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/85#discussion_r508404201" expanded>

Maybe assign a value to moduleCode.getModuleCode() so that you do not keep calling it
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/85#discussion_r508407061" expanded>

I think I have seen this method appear multiple times in many parsers, could we extract it to a method?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/85#discussion_r508407393" expanded>

Is there a reason why this is protected rather than private?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/35#discussion_r501175845" expanded>

Pull request is failing due to enabling of the gradle checkstyle. This means there are files that are failing the checkstyle, please check the checks tab and amend the files thanks
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/88#discussion_r510133709" expanded>

Thanks, added
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/76#discussion_r507612493" expanded>

Unintended edits
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/76#discussion_r507612643" expanded>

Ok, will make amends
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/12#issuecomment-702233830" expanded>

I think the commented code can be removed. But otherwise, looks good to merge.
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/17#issuecomment-704298151" expanded>

Amended the AddCommand, DeleteCommand, enum in Parser. Checks are failing due to the functions it requires from other classes.

AddCommand:
testDeadline(String deadline)
addTask(String desc, LocalDateTime dateTimeOfDeadline)
addModule(String desc)
execute()

DeleteCommand:
deleteTask(int taskId)
deleteModule(String moduleCode)
execute()

</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/26#issuecomment-704301757" expanded>

Looks good to merge
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#issuecomment-704303972" expanded>

Looks ok, but the Parser needs more prepare commands (delete, list, done)
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/17#issuecomment-704314054" expanded>

> could u add, a AddCommand.FORMAT
> a constant that outputs the correct format on how a addcommand will be read

Ok, added

</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/issues/61#issuecomment-708545405" expanded>

Implemented on purpose, but has been amended.
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/76#issuecomment-715918149" expanded>

There is some bug with this PR, checks are running forever.
</panel>

</panel>


<panel type="info" header="### 22. LIM AN QI `@anqi20` (20 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/5#discussion_r498654793" expanded>

Good Job!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/34#discussion_r500764534" expanded>

I think a better naming for this would be "questions"
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/34#discussion_r500764903" expanded>

I think we should all following this naming convention of "all...". 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/38#discussion_r500800436" expanded>

All these naming makes it easier to understand! 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/44#discussion_r501480297" expanded>

The JUnit test looks good!
The naming of the method is accurate as well.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501668736" expanded>

Would "chosenOption" be a better way to name it? 
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502870085" expanded>

Nice, using the common interface makes everything easier and neater!
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502870522" expanded>

I'm a bit confused with this. It's a add method but it removes the option... 
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/62#discussion_r503011737" expanded>

Nice catch on the accessibility 
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/62#discussion_r503012232" expanded>

Maybe we could add something here for users who had wrote commands not in our list. I can create something in Ui
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/63#discussion_r503621935" expanded>

Awesome refactoring! 
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/67#discussion_r503739301" expanded>

Just some minor details, would the first part of the naming be better to follow the naming in Topic? getDescription_... Similar to getsQuestionList_questionList_returnsQuestionList( ) 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/90#discussion_r505410565" expanded>

Oh thank you for adjusting the formatting! 
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/90#discussion_r505411166" expanded>

Oh sorry I missed this out! 
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/90#discussion_r505412919" expanded>

Oh, it sounds a lot nicer! 
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/103#discussion_r505957902" expanded>

Nice catch! Sorry for that error! 
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/124#discussion_r509289502" expanded>

Would it be better if we have a few words to introduce the diagram first? 
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/122#discussion_r509835386" expanded>

Nice catch on removing the empty constructor too! 
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/130#discussion_r510160749" expanded>

Ah this makes it look a lot cleaner and easier to understand! Thanks! 
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/135#discussion_r511531226" expanded>

Thank you for doing up the table of contents! It looks neater and easier to understand now!
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/23#discussion_r500757578" expanded>

Ok, I will take note of this and change them. Thanks for the explanation! 
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/23#discussion_r500757662" expanded>

👍 
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/23#discussion_r500757895" expanded>

Ahh, slipped my mind! Thank you for pointing it out! 
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505171229" expanded>

Ok done!
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505172714" expanded>

Ok, will look out for it. Thank you!
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79#discussion_r505172885" expanded>

Okie!
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509383344" expanded>

Oh ok, I think it's 4! Thank you for spotting it!
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509394042" expanded>

Okie, I will look into this. Thank you! 
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509861394" expanded>

Updated! Thank you! 
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125#discussion_r509861453" expanded>

Oh ok, I have changed this too! Thank you! 
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/108#issuecomment-713333457" expanded>

We have decided that the users can just change the database via the Json files
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/122#issuecomment-714174845" expanded>

Fixes #119 
</panel>

</panel>


<panel type="info" header="### 23. MOOI SUET YENG, FRANCENE `@chuckiex3` (20 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502898465" expanded>

I think this can be removed? 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#discussion_r503246681" expanded>

InvalidInputException?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#discussion_r503247403" expanded>

I could do that next time if you want? xD 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#discussion_r503249577" expanded>

Okay, sure!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/48#discussion_r503407348" expanded>

I think imports should be listed explicitly, as stated in https://se-education.org/guides/conventions/java/basic.html
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/53#discussion_r504500482" expanded>

Sooooooo much neater omg, thank you.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/53#discussion_r504502637" expanded>

Good effort in making this section neater xD 
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/53#discussion_r504502813" expanded>

Probably should not have wildcard imports...
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/50#discussion_r503645341" expanded>

argument* , same for the others
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/55#discussion_r504818074" expanded>

Trivial, but you may want to use NOTEBOOK_DELIMITER, SECTION_DELIMITER and PAGE_DELIMITER respectively for this.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/70#discussion_r507856717" expanded>

oh yes hehehe that's a better description than mine xD
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/70#discussion_r507857178" expanded>

missing the link to the delete function!
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/70#discussion_r507859613" expanded>

oh yes separating the commands for the different modes seems like a good idea! 😀
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/72#discussion_r508339489" expanded>

I'm not sure if we should leave this as planner mode.. I think we should standardise what we call it since it's called timetable mode in our code.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/72#discussion_r508339763" expanded>

hehehe thank you for helping me fix this
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/72#discussion_r508346880" expanded>

btw, I think you need a gap between the # and the words, i.e. "### Listing tasks: `list`" instead of "###Listing tasks: `list`", in order to make that a header.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/83#discussion_r509846781" expanded>

oh yay 
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/83#discussion_r509847201" expanded>

I think you should remove this line...
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/83#discussion_r509847324" expanded>

I think this should be removed ?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/83#discussion_r509847430" expanded>

Good job!
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502892209" expanded>

Hmm, I initially didn't have that there but IntelliJ threw me an error. xD I clicked on whatever they suggested (which is `return null;`). No worries, I'll go have a look at it again :D 
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502892265" expanded>

Yea, sure. That can be done. 👍🏼 
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502894631" expanded>

... Omg that is true HAHAHA okay, I'll change that. 
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502894780" expanded>

Yea sure, that would be nice. 
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502895000" expanded>

...Right. I'll delete that line.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502895263" expanded>

ah, definitely not. I'll go change that.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502895948" expanded>

I did something similar in my own ip as well. xD See if the others have anything to say about it then? 
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502896373" expanded>

I'll add this as a `//TODO` for now
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502896414" expanded>

I'll just add this as a `//TODO` for now
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#discussion_r502896621" expanded>

added as a `//TODO`
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/62#discussion_r507182839" expanded>

What do you suggest changing it to? xD Or you mean I should just replace that line with sth like `if (notebookIndex &gt; 0)` ?
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/62#discussion_r507288555" expanded>

ooooooh the -1 is thrown when the notebook/section/page cannot be found (when the user selects a notebook/section/page that doesn't exist)... so you don't like that the -1 is being thrown is it ?
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/77#discussion_r509276549" expanded>

Sure, I'll edit that before merging.
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/52#issuecomment-708184015" expanded>

Yayyyyyy thank you.
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/62#issuecomment-711159982" expanded>

should fix #62 
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/issues/38#issuecomment-716112679" expanded>

Fixed by #91 
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/94#issuecomment-716115126" expanded>

if you think it's good enough then merge it please 😛
</panel>

</panel>


<panel type="info" header="### 24. Yeow Wei Liang, Brandon `@brandonywl` (19 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502916470" expanded>

Is it perhaps better in the long run if we do it via a ArrayList<Command>? 

```
ArrayList<String> commandHelpList = new ArrayList<String>();
commandHelpList.add(AddNoteCommand.getUsageNote());
commandHelpList.add(AddEventCommand.getUsage());
commandHelpList.add(CreateTagCommand.getUsage());
commandHelpList.add(DeleteNoteCommand.getUsage());
commandHelpList.add(DeleteEventCommand.getUsage());
commandHelpList.add(DeleteTagCommand.getUsage());
commandHelpList.add(EditNoteCommand.getUsage());
commandHelpList.add(EditEventCommand.getUsage());
commandHelpList.add(ExitCommand.getUsage());
commandHelpList.add(FindCommand.getUsage());
commandHelpList.add(ListEventCommand.getUsage());

int i = 0;
resultString = "";
for (String command : commandHelpList) {
    String color = (i % 2 == 0) ? COLOR_CYAN_STRING : COLOR_WHITE_STRING;
    i++;
    resultString += command + InterfaceManager.LS + color;
}
return resultString;
```
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502916490" expanded>

Naming issue on the getCommandUsage
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502916647" expanded>

Should we standardize using pointer Boolean or primitive boolean?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502916700" expanded>

Similarly, perhaps we should change to boolean if the parameter is not necessary in defining generics.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502917005" expanded>

Need to rename this as well as COMMAND_USAGE_NOTE
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502918366" expanded>

Small error on my PR that wasn't caught. Should add full stop.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502918576" expanded>

Should also rename this. Apologies for the sloppy naming.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502918778" expanded>

Good catch on standardizing this so it's easier to read across the board
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502932040" expanded>

I'm just afraid if we add more commands down the line we need human intervention to always check if the colour ordering is correct. Doesn't affect any functionality so it's not important.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/66#discussion_r504561626" expanded>

Will clean up naming after 1.0
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504641079" expanded>

Perhaps follow standardization after Code Review 1.0, put an empty line between group of imports. Group the import by usage/type.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504670325" expanded>

You should swap the two. assertEquals method arguments are expected and actual. For the sake of debugging in the future it would be better if we caught it now
```suggestion
        assertEquals(NOTE1_TITLE + " pinned: " + 'N', getExecutionStringInputIndex(notebook, 0));
        assertEquals(NOTE2_TITLE + " pinned: " + 'Y', getExecutionStringInputIndex(notebook, 1));
```
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504671358" expanded>

```suggestion
        assertEquals(NOTE1_TITLE + " pinned: " + 'N', getExecutionStringInputTitle(notebook, NOTE1_TITLE));
        assertEquals(NOTE2_TITLE + " pinned: " + 'Y', getExecutionStringInputTitle(notebook, NOTE2_TITLE));
```
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504672256" expanded>

```suggestion
        assertEquals(PinCommand.COMMAND_UNSUCCESSFUL_MESSAGE, getExecutionStringInputIndex(notebook, 5));
        assertEquals(PinCommand.COMMAND_UNSUCCESSFUL_MESSAGE, getExecutionStringInputIndex(notebook, 3));
```
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504672958" expanded>

```suggestion
        assertEquals(PinCommand.COMMAND_UNSUCCESSFUL_MESSAGE, getExecutionStringInputTitle(notebook, "Title"));
        assertEquals(PinCommand.COMMAND_UNSUCCESSFUL_MESSAGE, getExecutionStringInputTitle(notebook, "Random"));
```
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504673457" expanded>

```suggestion
        assertEquals(note1ExpectedOutput, getExecutionStringInputIndex(notebook, 0));
        assertEquals(note2ExpectedOutput, getExecutionStringInputIndex(notebook, 1));
```
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504673843" expanded>

```suggestion
        assertEquals(note1ExpectedOutput, getExecutionStringInputTitle(notebook, NOTE1_TITLE));
        assertEquals(note2ExpectedOutput, getExecutionStringInputTitle(notebook, NOTE2_TITLE));
```
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504674166" expanded>

```suggestion
        assertEquals(ViewNoteCommand.COMMAND_UNSUCCESSFUL_MESSAGE, getExecutionStringInputIndex(notebook, 5));
        assertEquals(ViewNoteCommand.COMMAND_UNSUCCESSFUL_MESSAGE, getExecutionStringInputIndex(notebook, 3));
```
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r504674584" expanded>

```suggestion
        assertEquals(ViewNoteCommand.COMMAND_UNSUCCESSFUL_MESSAGE, getExecutionStringInputTitle(notebook, "Title"));
        assertEquals(ViewNoteCommand.COMMAND_UNSUCCESSFUL_MESSAGE, getExecutionStringInputTitle(notebook, "Random"));
```
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502530525" expanded>

Apologies. Automatically did it while importing through Intellij.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502531094" expanded>

I was considering that there should be no issues with duplicate events as they may be for future events that are named similarly. E.g I set an event but didn't know about recurring function so I created an event for every week.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502531505" expanded>

Noted on this point. Will make necessary changes.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502531741" expanded>

Thanks!
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502532433" expanded>

Noted, will change. But it won't cause an error as JRE handles boxing and unboxing of the non-primitive types in the background.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502537360" expanded>

On this point, I was following the structure of prepareAddNote and how error handling was taken care of (Level of throw or at a higher level). Can confirm again if I should just throw the exception?
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502562388" expanded>

My bad. Didn't pull a new copy yet with the changed error handling format. Mine had error handled at the problem level.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502805626" expanded>

Sorry! I didn't merge this branch with the upstream master. Done in the next commit.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/44#discussion_r502815678" expanded>

Good catch! Didn't see this
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502807605" expanded>

Done. Thanks!
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502808631" expanded>

I considered having a optional tag that allows to list by a certain search criteria, but I felt that in the interest of breadth-iterative development, this wasn't as key to developing recurring events as it is so I comment it out first.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502808704" expanded>

Done already. Thanks!
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502860561" expanded>

Yes but in this case these are parameters not the constant so I don't think there's any coding standard violations.
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502860605" expanded>

Apologies, forgot to refactor the names after changing it to final.
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502895580" expanded>

Alright. I moved them from parser over to here because I thought it would be a central location + parser was getting very bulky already
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/46#discussion_r502895660" expanded>

Alright. Apologies for the mistake. Was referring to an older version of the code base for styling and didn't change this part.
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/58#discussion_r503273639" expanded>

I placed it here because following the rest I thought we would expect a COMMAND_UNSUCCESSFUL_MESSAGE. Can remove comment as well.
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/58#discussion_r503275598" expanded>

I've re-worded the comment to be clearer as to what it means so it doesn't look as weird
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503934944" expanded>

Ah didn't know this was possible!

</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503942756" expanded>

Why the whitespace? The tab itself is a whitespace
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503946401" expanded>

I just left it in because in the future there might be need to develop looking at future reminders. But then again in the current iteration I saw no need for it / we may not develop it at all cause of limited use cases.
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503947117" expanded>

I guess I was unclear. The input formats should be YYYY or YYYY-MM
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503950793" expanded>

I used Object cause it was more type-safe. I was considering that when the timetable expands and has multi-year usage, we may have issues with recurring events and their reminders so I was implementing the equals function to be able to compare reminders. However, I revamped how the recurring events are displayed so this function actually has no more use.
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503951814" expanded>

Er actually theres no significant need to do this as a class anymore. I was still learning on functional programming and functional interfaces in Java and their syntaxes so I implemented this as a stop-gap measure. Will update it.
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503979837" expanded>

I think it's fine because even in the lecture notes they talk about assert as a error handling as well as a JUnit. It can be used for both. I implemented it here as an assert because if its not the same then there would be big problems with the entire remind functionality.
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/52#discussion_r503981028" expanded>

Also, if there is difference in the two, it would indicate issues in the parser or implementation of the code, nothing on the user, hence exception is a less viable option.
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/65#discussion_r504638994" expanded>

Was causing a bug with recurring values
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509957230" expanded>

Tried this and the line got too long and unreadable.
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r509959897" expanded>

Sorry but what's the significance of doing that as opposed to +=?
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r510031790" expanded>

While possible, I'd lose the information on the name of the month and at each event, I'll have to check the month and see if it's different at each step. I'll basically be shifting the processing of each event from Event to here. Is there any significant reason why? If not I feel there's no added benefit to doing so.
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r509969416" expanded>

I did it this way initially but my concern with handling it in the formatter is that it breaks encapsulation and increases coupling. Violates the "tell-don't-ask" principle, but handing it to the formatter improves single-responsibility principle.
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510041118" expanded>

What do you mean?

</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510042183" expanded>

Oh I did it as a separate function for compatability to other PR where I do listing. No point re-writing code just to iterate the same lines.
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510043974" expanded>

My considerations are formatEvent would be heavily utilized when listing events. When listing multiple events we would most likely be listing them in the same box so it would make sense to have a separate function that formats them as a string.
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/108#discussion_r510044330" expanded>

See above regarding formatEvent
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r510650036" expanded>

I'll see what I can do as I am already currently pushing in the year and month already. May be able to cut down the data struct shape
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r510650269" expanded>

Done from earlier PR
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/107#discussion_r510650798" expanded>

Will resolve convo when confirmed after merging.

</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/54#issuecomment-707463491" expanded>

Are we done with this issue or do we close it?
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/105#issuecomment-714218026" expanded>

Noted. So for this we should highlight it in the developer guide right?
</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/106#issuecomment-714218631" expanded>

![image](https://user-images.githubusercontent.com/28587601/96825128-fbdf5480-1462-11eb-898d-d1b876392270.png)
Able to recreate bug when doing [list-e] vs [list-e  ].  Spaces after list-e causes this issue.
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/105#issuecomment-714219099" expanded>

Okay thanks for the clarification! Closing this.
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/106#issuecomment-714219938" expanded>

Resolved.
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/106#issuecomment-714220233" expanded>

Resolved. Will push branch together with refactor of listEventCommand.
</panel>

</panel>


<panel type="info" header="### 25. TOLENTINO ABNER JR MORALES `@abnermtj` (19 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/21#discussion_r502338462" expanded>

perhaps remove  some of the old Duke descriptions
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/21#discussion_r502339447" expanded>

perhaps a more apt name than executeFunction(), idk
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/21#discussion_r502339861" expanded>

maybe remove the spacing between first line of the method and the next, for consistency
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/21#discussion_r502344666" expanded>

er like the line i commented on said duke.txt and list of tasks
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/40#discussion_r503107792" expanded>

i'll probably try to move this to cheat sheet class

</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503040012" expanded>

Not really sure about the use of super here since DirectoryIsEmptyException didn't do it
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503042388" expanded>

to keep consistent with other if statements, might wanna do a .trim() here
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503045534" expanded>

not sure if line 62 to 67 is needed. line 65-67 seems like it can go into 69.5
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503048313" expanded>

A few of the class names sound more like method names. Perhaps instead of ParseDataFIle, DataFileParser
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503048958" expanded>

perhaps parse execution can be renamed it took me a while to understand 94 - 97. perhaps it could be renamed to parsedData or something
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503051317" expanded>

it seems like for both read and write classes will create Files if not present already, perhaps make It only the job of write to create both the folders and files
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503051959" expanded>

perhaps this could be aptly named as my understanding is that it points to an actual file and not a directory.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503052161" expanded>

clean code makes me go yes
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503053388" expanded>

good method namings

</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/54#discussion_r505423972" expanded>

big brain

</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/77#discussion_r509927008" expanded>

probably can use getCheatSheet(name) instead
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/84#discussion_r511031350" expanded>

I'm not really sure if they would be nitpicky on the use of '*', I've been trying to avoid it because of that.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/84#discussion_r511032897" expanded>

Code looks clean, LGTM!
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/84#discussion_r511232557" expanded>

i think so but it's really ugly and I hate it
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/82#discussion_r510233474" expanded>

alright fixed!
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/82#discussion_r510253739" expanded>

kk
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/91#discussion_r511397707" expanded>

alright! done
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/91#discussion_r511405191" expanded>

Alright done!
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/38#issuecomment-706878118" expanded>

Ops i merged forgetting to check the tests LOL Brandon has fixed the tests
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/issues/69#issuecomment-715456695" expanded>

Done for view command

</panel>

</panel>


<panel type="info" header="### 26. CHUA SIN ENG, AMANDA `@amanda-chua` (19 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499256852" expanded>

For this i will be parsing in an integer alr so i think can remove the getTaskNumber method.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499256887" expanded>

For this i will be parsing in an integer alr so i think can remove the getTaskNumber method.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499257042" expanded>

Can replace all the println to UI methods.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499332390" expanded>

Remove one empty line from here.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499332460" expanded>

Remove empty lines from here.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499332842" expanded>

Remove one empty line from here.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499333102" expanded>

Remove one empty line from here.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499333162" expanded>

Remove one empty line from here.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/22#discussion_r499987678" expanded>

Change the importance to notes
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/33#discussion_r501557961" expanded>

Remove extra line
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/33#discussion_r501558410" expanded>

add space before String
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501559704" expanded>

remove the empty lines
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/34#discussion_r501559876" expanded>

remove the empty line

</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502923634" expanded>

I think `taskListWithoutTask` should be `editedTaskList`
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r502923785" expanded>

I think `taskListWithoutTask` should be `taskListWithDone`
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/61#discussion_r503628399" expanded>

Change `taskListWithoutTask` to `taskListWithDone`
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/76#discussion_r503400305" expanded>

Might want to change the method name to smt like `deleteTask_successfully`?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/135#discussion_r509821441" expanded>

Maybe can give examples of ABC
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/128#discussion_r510298181" expanded>

List out the commands individually instead of the *
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/37#issuecomment-705519264" expanded>

For add command: throw exception when name or time of task is not in the user input.

</panel>

</panel>


<panel type="info" header="### 27. ALSTON THAM YONG HAO `@alstontham` (16 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499457492" expanded>

Can call "ui.printList(ArrayList&gt;Task> tasks)" and let the ui handle the printing
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499468803" expanded>

Can call the printList() function from ui and pass it the filtered list (so tasklist will still handle the filtering)
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499472456" expanded>

Could call ui method printTaskEdited(task) to print out the edited task to the user
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499475989" expanded>

Could call ui method printTaskDeleted(task) to print out the deleted task here as well
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499476728" expanded>

Can call ui method printTaskAdded(task) to let users know what task they added
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/11#discussion_r499478060" expanded>

Can call the ui method printTaskDone(task) to let users know which task they marked as done
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/8#discussion_r499523664" expanded>

> @alstontham The timetable given to the `Ui` will be a list of `TimetableDay` objects, each containing a date and a list of `Task`s. So you can work on printing that now.

Ok! Will work on this
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/8#discussion_r499523893" expanded>

> @alstontham I think it would be good to overload the `toString` method so that we can print the object directly. You can work on printing out a `Date` and `TaskList` on your side first then we can move that code here later.
> 
> Or you can fetch this branch and modify it, then make a pull request to my branch.

Sure, will see what I can do
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/35#discussion_r501538686" expanded>

would checkstyle flag this extra space?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/35#discussion_r501538860" expanded>

would checkstyle flag this extra space?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/47#discussion_r502184126" expanded>

I'm not sure if the main method is supposed to throw the exception? The exception should be handled at a "lower" method
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/68#discussion_r503199012" expanded>

Maybe a more descriptive method name would be helpful? 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/74#discussion_r503371405" expanded>

Can remove extra spaces here
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/116#discussion_r508304216" expanded>

Do you want to shift the methods that print out the Timetable to Ui?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/119#discussion_r508315121" expanded>

Could you add a "\n" at the end to make the spacing of the Ui outputs consistent?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/119#discussion_r508315321" expanded>

Same here, add "\n" to making spacing of outputs consistent
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/12#discussion_r499225186" expanded>

Hmm not sure why it shows up like this on github but I definitely had it on two separate lines in my IDE
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/55#discussion_r502499882" expanded>

oops my bad
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/55#discussion_r503011367" expanded>

Ok, I'll amend it
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r503358734" expanded>

will fix this
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r503359294" expanded>

oh this wasn't in my commit but was accidentally added onto this PR
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r503359806" expanded>

I'll change it to AddMissingRequiredParametersException
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#discussion_r503360265" expanded>

This exception isn't finalized yet as I need to wait for the edit command to be fixed so I can test it.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/156#discussion_r511342885" expanded>

fixed!
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/27#issuecomment-704985457" expanded>

Fixed the checkstyle issues in Ui.
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/18#issuecomment-706878574" expanded>

Resolved in #55 
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/73#issuecomment-707166895" expanded>

I have added exceptions to handle when no index and an invalid index has been passed to `delete` in #48 
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/48#issuecomment-707178148" expanded>

Yes, this PR partially addresses #73, however I have yet to properly implement exceptions for `list` and `edit` as I need to wait for those commands to be fixed first.
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/118#issuecomment-712588448" expanded>

Sorry my bad, I thought I changed this in a previous commit but I think it got changed back.
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/143#issuecomment-715201428" expanded>

I refactored the color and UI code in this PR so it can be compared with the UI information in the DG
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/pull/143#issuecomment-715233991" expanded>

I haven't finished editing the DG yet, will push some more commits soon!
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-2/tp/issues/155#issuecomment-715879931" expanded>

Square brackets around t/TIME, add view command in the help method
</panel>

</panel>


<panel type="info" header="### 28. PUAH SIEW WEN `@e0425705` (16 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/12#discussion_r499146528" expanded>

Could have a final static for this magic number
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/12#discussion_r499146595" expanded>

alist should be in camelCase
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/12#discussion_r499146685" expanded>

adatetime should be in camelCase
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/63#discussion_r502884358" expanded>

this comment could be added into the ui
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71#discussion_r503179853" expanded>

can refactor this into ExceptionMessages class
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71#discussion_r503180271" expanded>

magic number here, perhaps can make it as a final variable
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71#discussion_r503181478" expanded>

magic number present here
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71#discussion_r503181829" expanded>

naming should be InitialiseUser instead of Initialiseuser
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71#discussion_r503183484" expanded>

the naming of this should be activityMultiple instead
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71#discussion_r503183751" expanded>

presence of magic numbers
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71#discussion_r503183903" expanded>

presence of magic numbers
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/106#discussion_r509042790" expanded>

perhaps naming of firstString and secondString would be more appropriate?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/106#discussion_r509044018" expanded>

these variables should be in caps
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/106#discussion_r509044291" expanded>

this should be in caps
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/106#discussion_r509044585" expanded>

perhaps a better naming could be done for this?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/106#discussion_r509044877" expanded>

same issue for this, perhaps a better naming could be done for this?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/30#discussion_r499248659" expanded>

noted
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/30#discussion_r499248667" expanded>

noted
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/59#issuecomment-706669649" expanded>

fixes #41 , #27 , #45 
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/31#issuecomment-706669708" expanded>

fixes #18 , #19  , #21 , #22 , #23
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/30#issuecomment-706669743" expanded>

fixes #18 , #19  , #21 , #22 , #23
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/108#issuecomment-714811277" expanded>

fixes #88
</panel>

</panel>


<panel type="info" header="### 29. NGUYEN TIEN KHOA `@tienkhoa16` (16 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#discussion_r501759248" expanded>

Perhaps you can explicitly list out all the imports instead of using * to pass checkstyle
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#discussion_r501760206" expanded>

maybe remove unused code?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#discussion_r501762010" expanded>

whitespace after while
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#discussion_r501762729" expanded>

whitespace before { ?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/90#discussion_r508430209" expanded>

Maybe this method should be Storage class since the Create Command should be focusing on dealing with the creation diet session
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/90#discussion_r508431471" expanded>

perhaps this can be extracted out to the printResponse() method
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/94#discussion_r509153553" expanded>

Printing help in workout session search does not seem so right :sweat_smile:
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/94#discussion_r509153842" expanded>

Perhaps can implement the UI printing here also
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#discussion_r509224511" expanded>

Should the name of array type variable in plural form (i.e. inputs, exercises)? 
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#discussion_r509226511" expanded>

Should the boolean array name sounds more boolean (i.e. hasEndedWorkoutSessions)?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#discussion_r509227229" expanded>

Workout Session is under Workout Menu, so is it clearer if we show "Workout Menu > Workout Session >>>>>" ?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511548203" expanded>

This Confirmation method is duplicated in multiple places, so maybe we can extract them out into utils?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511548457" expanded>

Should we delete those commented out lines?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511548523" expanded>

For consistency in printing, can change here to "delete [MOVE_ID]"
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511548539" expanded>

And also here to "search [NAME_OF_MOVE]"
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511553212" expanded>

Actually, it's used in workout manager and workout session as well. So can merge this PR first then I'll create a util method for that and you guys refactor your code accordingly
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/61#issuecomment-711036808" expanded>

Fixes #62 
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#issuecomment-716029643" expanded>

Great work in refactoring! 👍 
</panel>

</panel>


<panel type="info" header="### 30. SIM JUN YOU `@f0fz` (15 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/13#discussion_r499171782" expanded>

Is this supposed to be `inputChecker(userInput)` and not `!inputChecker(userInput)`?  If the user command is valid then it will continue asking for user input?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/13#discussion_r499171865" expanded>

Is HelpCommand supposed to be the only one in Pascal case?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/17#discussion_r499173024" expanded>

If removing getter function, then the `feedbackToUser` attribute should not be private.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/57#discussion_r504393036" expanded>

Should be `output == null` because TaskManager/ModuleManager returns `null` if the respective lists are empty.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r503687827" expanded>

TaskManager's edit function takes a new Task object to get around needing an edit function for each property of task, especially when we will be adding new task properties in the future. Is it possible to reverse this change here?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/76#discussion_r507023253" expanded>

What are these edits for?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/76#discussion_r507023561" expanded>

Command classes should only call methods or store and pass information, and should not have standalone methods. Ideally, your timetable command would call 'TimeTable.generateWeekTable()' (and others) and not have its own method for doing so.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/76#discussion_r507023613" expanded>

Will roll these methods into the new Lesson class
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/76#discussion_r507023761" expanded>

The logic in this method (and the next method below) will be moved to the new TimeTable class
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/106#discussion_r511579553" expanded>

Do we actually need quotes around the old and new module codes?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/106#discussion_r511579625" expanded>

Can we actually use this format for date?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/106#discussion_r511579659" expanded>

Missing a space between opt and args
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/106#discussion_r511579695" expanded>

Download instead of down?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/106#discussion_r511579769" expanded>

Space after colon. Also, the command is `bye` instead of `exit` no?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/106#discussion_r511579890" expanded>

Should add an explanation here that the `task_index` can be found from `list -t`
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/26#discussion_r499680498" expanded>

Okay, I will add that in a later PR
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/23#issuecomment-703282501" expanded>

Seems like there's a lot of changes made... Can we get a more detailed description? 
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#issuecomment-704308826" expanded>

Checks seem to be failing due to missing portions from other parts of the code base. Parser code seems good to me.
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/54#issuecomment-707889192" expanded>

Please update branch
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/55#issuecomment-707892473" expanded>

Update branch please
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/59#issuecomment-708180422" expanded>

Please update branch
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/issues/50#issuecomment-709454204" expanded>

#70 WIP
</panel>

</panel>


<panel type="info" header="### 31. HUBERTUS ADHY PRATAMA SETIAWAN `@adhy-p` (15 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r502918497" expanded>

A very minor thing but I think you missed a whitespace after the ':' in DETAILS.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r502919441" expanded>

Whoa Theo god used assertions alrd 👍 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r502920059" expanded>

I think can change to something like this for better readability
```
cheatSheetFileBuild
        .append(DETAILS)
        .append(WHITESPACE)
        .append(cheatSheet.getCheatSheetDetails());
```

</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r502920820" expanded>

Isn't it better to just write the stuffs in storeCheatSheet() inside executeFunction() directly?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r502920992" expanded>

Why do you replace the string with whitespace " " instead of an empty string "" (?)
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503440656" expanded>

Will work on it 👍 
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503444295" expanded>

👍 
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503444383" expanded>

Actually for this one, do you want me to add a method to remove cheatsheet by index in addition to the current remove by name?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503445108" expanded>

For the next iteration, I think can move this to UI class. Not urgent tho
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503445311" expanded>

I think this one should be done by the constructor, or at least outside the for loop.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503446069" expanded>

If can't find programmingLanguage and keyword, I think can just print everything (coz no filter?). What do you think?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503447727" expanded>

hmm for this one I think just do it similar to our IP? create a variable inside a for loop in print method then just print the variable? 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503448878" expanded>

wow you guys so advanced.. using hashmap and stuff 💯 
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/91#discussion_r511380561" expanded>

Should we add `.trim()` to avoid this?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/91#discussion_r511381493" expanded>

shall we change this to `/s`?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/85#discussion_r511296294" expanded>

Noticed this one is duplicated from getIsFavourite
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/85#discussion_r511297027" expanded>

Currently when I tried
`/delete /i 2`
The description map will return
```
NAME -> NULL
INDEX -> 2
```

So without the null check, it will always try to get the cheatSheet by name even when the user tries to get it by its index
</panel>

</panel>


<panel type="info" header="### 32. WONG ZHEN WEI `@keke101` (14 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/18#discussion_r500859916" expanded>

I think it would be better if you change this to plural form since it contains a list of members. Likewise for the class name.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/19#discussion_r500864245" expanded>

I agree, we should split them into subclasses, inheriting `MemberCommand` for example. It's what the TA suggested.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/17#discussion_r500786048" expanded>

Yeap, Haoxiang, remove this file then commit again to the same branch, then we will merge this pull request
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/17#discussion_r500866735" expanded>

I think it is ok, we can leave it as it is now and we will settle the package names later on
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/17#discussion_r500877019" expanded>

I think wait for the next person to review then merge.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28#discussion_r501209612" expanded>

What's the reason for using static members? This will be a problem when it comes to multi-project management.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28#discussion_r501222405" expanded>

"member" can be changed to "members" which will make more sense as it is a list of members.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28#discussion_r501638214" expanded>

Yeah. Since it is not static, you still need to pass the project object around to be manipulated, and that should be the way since there will be multi-project management in v2. This is because we need to determine which exact project we are manipulating.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91#discussion_r507022659" expanded>

No need for `new Hashtable&gt;>();` since you are overwriting it at line 15.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91#discussion_r507022784" expanded>

Should we trim the values at `Parser` instead?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91#discussion_r507024732" expanded>

Sorry, missed this out, this can be SLAP-ed right? So that `REMOVETASK` and other actions that requires array list can use the same function.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91#discussion_r507024944" expanded>

Alright
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#discussion_r510735729" expanded>

I think no need to nest another `try-catch`, you can just put another catch for `NumberFormatException` in the other `try-catch`.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#discussion_r510736387" expanded>

Got a getter for `nextId` already, at line 37
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/31#discussion_r502775508" expanded>

@gmit22 Can I double check with you if this is supposed to be `==` or `!=`?
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/18#issuecomment-704806090" expanded>

Functionalities I think are good to go but I think some variable names should be changed. For example like those that contains a list of elements, the variable name should be plural.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/17#issuecomment-704811970" expanded>

Looks good to me, can merge imo.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/24#issuecomment-704939798" expanded>

Update: JSON.simple library is already approved
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/27#issuecomment-705105581" expanded>

Looks good to me, I think can be merged.
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/30#issuecomment-706306795" expanded>

`checkStyle` is failing. You should fix them first before you make final commit.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28#issuecomment-706307906" expanded>

Good to merge. However, we need more discussion of the structure of `Ui` class because I feel it is too verbose. Maybe we can proceed with the commit for now then modify it later on.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/65#issuecomment-707856133" expanded>

Looks good, can be merged
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/60#issuecomment-707944641" expanded>

Need to resolve the conflict first.
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/106#issuecomment-712966592" expanded>

Duplicated issue
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/100#issuecomment-712970333" expanded>

There's conflict that needs to be resolved.
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#issuecomment-715182051" expanded>

Have you tried enabling the assertions? [Link](https://stackoverflow.com/questions/18168257/where-to-add-compiler-options-like-ea-in-intellij-idea)
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#issuecomment-715417324" expanded>

You are talking about the Unit Test assertions is it? Those assertions are different from the normal assertions. Normal assertions are placed in the code using the `assert` keyword, therefore the link I have provided only works for normal assertions. Anyway both have different purpose, so yeah.
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#issuecomment-715418323" expanded>

I think we can merge this one, then you create another PR request for the JUnit.
</panel>

</panel>


<panel type="info" header="### 33. FELIX HALIM `@felixhalim` (14 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r502735375" expanded>

It would be better to change to `getProductName();`
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r502735559" expanded>

I think it is okay to put it here since this comment is command-specific.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r502735649" expanded>

I think it is okay to call it here since it is command-specific
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/27#discussion_r503072658" expanded>

It would be better to mention specifically what are being imported instead of using wildcard `*`
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/27#discussion_r503073824" expanded>

Good job on coming up with the sort algorithm, Kian En! I would move this to `AddPlaceCommand.java` so that it sort only if the user added a new place.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/29#discussion_r503329341" expanded>

It supposed to be `userInput.startsWith("search ")`. If not, input like `searchex` will be detected as valid command.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36#discussion_r507084968" expanded>

Yep, this has been resolved.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507277705" expanded>

It is preferred to mention explicitly which packages are imported
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507278701" expanded>

What is the difference between this and line 33?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/51#discussion_r508659039" expanded>

No newline here
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/51#discussion_r509120078" expanded>

This supposed to be `rmdir /s /q trippie_data`
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/51#discussion_r509131885" expanded>

`del` is used to delete file. Based on `runtest.sh` looks like you wanted to delete a directory and its content, right? Use `rmdir /q /s trippie_data` instead, it is equivalent to `rm -rf`
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/51#discussion_r509133081" expanded>

Since your PC OS is macOS and mine is Windows (Error is in .bat file which is executable in Windows). I will take-over this error.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/66#discussion_r510863168" expanded>

Isn't this deleteExpenseCommand?
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/issues/1#issuecomment-696160718" expanded>

This is just a test
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/issues/12#issuecomment-706648484" expanded>

Please review #22 
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/issues/12#issuecomment-706654302" expanded>

Apparently Java has a problem with a dash. So, I suggest implementing `/` (slash) instead of `-` (dash) for the command format. @ShawnTanzc  need to adjust accordingly.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/23#issuecomment-706654335" expanded>

Apparently Java has a problem with a dash. So, I suggest implementing / (slash) instead of - (dash) for the command format. @ShawnTanzc need to adjust accordingly.
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#issuecomment-711448073" expanded>

It doesn't pass Gradle check
</panel>

</panel>


<panel type="info" header="### 34. NAZRYL BIN KHAIRIL IDHAM LIM `@Nazryl` (12 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/33#discussion_r500701938" expanded>

He haven't start on it. He created the classes as a template first I think.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502916163" expanded>

AddNoteCommand.getCommandUsageNote() change to AddEventCommand.getCommandUsage()?
```suggestion
                + AddNoteCommand.getCommandUsage() + InterfaceManager.LS + COLOR_CYAN_STRING
```
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502916251" expanded>

```suggestion
    private static final String COMMAND_USAGE = COMMAND_WORD + ": Adds a note to notebook. Parameters: "
```
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/47#discussion_r502916271" expanded>

```suggestion
        return COMMAND_USAGE;
```
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503215946" expanded>

Redundant space?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503217175" expanded>

```suggestion
        /**
          * Based on user inputted tags, will store the respective values in an ArrayList
          * E.g. if user input 2 tags, CS2113 and important, will have 2 ArrayList
          * 1 for the values corresponding to CS2113 and the other for important tag
          */
```
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503217448" expanded>

oops messed up the block comment.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/51#discussion_r503217847" expanded>

Another space
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/78#discussion_r505424736" expanded>

Maybe can give a short comment on what's happening here.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/78#discussion_r505426011" expanded>

@param?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/78#discussion_r505426327" expanded>

@param here too
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/78#discussion_r505426759" expanded>

Forget to remove? Or just ignore for next PR use.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502178912" expanded>

Already informed beforehand
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502179077" expanded>

Already informed beforehand
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502179344" expanded>

Dont need. I have catch possible errors before it adds.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#discussion_r502183911" expanded>

Removed throws comment
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/50#discussion_r503166979" expanded>

Good idea. Shall implement it right away. Thank you for your suggestion.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/61#discussion_r504639991" expanded>

isnt final.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/74#discussion_r504643751" expanded>

@Chongjx Take note. Cuz it was giving me an empty space when there are no tags
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r507485191" expanded>

Junit needs input due to our plan to put get input content to AddNoteCommand class. I cannot simulate a scanner input hence I getContent first. If it is blank, user puts an input. If its not blank, it means it is from the junit class which already has the content already pre input into the note.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r507512830" expanded>

will do it once ive merge this in. have yet to pull the new one. might have conflicts
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r507513109" expanded>

as of now no
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r507519299" expanded>

I made it loop till there is content in the input.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#discussion_r507656610" expanded>

deleteNote(index) does not return boolean, so I made it return true. Also, I cannot remove the exception, when it getNotes it will return an exception when the index is out of bounds.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/111#discussion_r510136328" expanded>

I didnt realise this. I followed the format from addressbook to make it tidy and easy on the eyes. Jx and I used whitespaces when implementing the classes in the first place. I think its a minor matter as long its readable.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/111#discussion_r510137225" expanded>

wouldnt it makes sense to break all of the note stuff in the formatter? and just pass the success parameter? since we are passing in the note too
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/32#issuecomment-704413653" expanded>

Please reject this pull request, thank you
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/32#issuecomment-704415889" expanded>

It is now ready for review.
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#issuecomment-705707796" expanded>

Need help with the Gradle checks. I suspect is something to do with EXPECTED.txt
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/40#issuecomment-705720754" expanded>

Had to remove "help" from the ui-test. Wait till @brandonywl adds in his AddEvent and DeleteEvent then can add the "help" back into the input. Issue fixed!
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/61#issuecomment-707634613" expanded>

Created PR first. Not ready to be reviewed. Will notify.
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/88#issuecomment-710784943" expanded>

@prachi I've helped you added some codes for pinCommand but its commented out due to your junit test failing. The codes are for the formatting that @Chongjx has done.
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/issues/118#issuecomment-715495538" expanded>

Its fixed on my side. I havent commited.
</panel>

</panel>


<panel type="info" header="### 35. RIAZ AHAMED `@riazaham` (12 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/34#discussion_r503740740" expanded>

Hmm then should we implement this for projects and tasks also?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/37#discussion_r504461114" expanded>

It is task view iirc. isProjectListView refers to project view so means not in task view
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/37#discussion_r504461394" expanded>

yup agreed
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505414167" expanded>

Apparently, it can't catch NullPointerException. Think you could work around it?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/63#discussion_r507017181" expanded>

I think the '2' is the limit for integers so in that sense I believe Shreyas' concern is valid.
I have 2 suggestions:
- We loop through the inputs and extract out key-map info for multiple params
- We only include 1 param type for all our commands
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/63#discussion_r507034252" expanded>

Ok got it thanks for the clarification
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/68#discussion_r507811050" expanded>

I believe this is not recommended (importing with *). You can just revert back to the old implementation
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/68#discussion_r507828834" expanded>

Do we need this....?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/68#discussion_r507829637" expanded>

Don't need this here if it is already caught in parse(). We try not to repeat codes but do let me know if there are other reasons for this implementation
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/80#discussion_r509475957" expanded>

do you wanna change it to if-else? Just a suggestion for better readability but this works too!
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/77#discussion_r509473768" expanded>

just need to include the teamMembers ArrayList in signature
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/81#discussion_r509478760" expanded>

Might have merge conflicts since "assign" is also used for project view
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503610966" expanded>

Yup have added a remark to throw error
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503611224" expanded>

I think it's just for good practice
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/26#discussion_r503611646" expanded>

true, have removed in my next commit
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/57#discussion_r506951795" expanded>

Oh thanks for the review, just committed the changes in Home Command PR!
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/57#discussion_r506951798" expanded>

Solved!
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508283791" expanded>

They haven't implemented it yet so I'm not sure how to link it but yes that's the intention
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508284600" expanded>

actually in the parse function there will be nothing to catch.
If you realise the only thing the parse function does is extract the user input.
It does not process it, so no errors thrown
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508285548" expanded>

I think as of now that feature is not in our user guide. Like showing the list of tasks attached to members.
So since no other command uses it for now I didn't implement it.
It's a breadth first approach
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508285681" expanded>

I think as of now that feature is not in our user guide. Like showing the list of tasks attached to members.
So since no other command uses it for now I didn't implement it.
It's a breadth first approach
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/69#discussion_r508286431" expanded>

I have no preference, I think both make when it comes to organisation
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/71#discussion_r508289736" expanded>

I thought of it also but I realized it's more of an improvement since as of now there isn't a need for it.
We have no feature planned that will use the enums, (e.g sort by priority).
Also, the error handling is quite tedious to implement if we use enums.
I will implement it in the final run once we're done with a working 2.0.
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/64#issuecomment-711159007" expanded>

> I need help with jUnit test for this feature.
> I'm unsure about how I should test invalid project ID and deadline format since the exceptions are thrown inside Parser class and not executeCommand().

What do you mean? For JUnit tests you don't need exceptions tho. You can hardcode the error messages.
Check my JUnit tests
</panel>

</panel>


<panel type="info" header="### 36. EYO WEI CHIN `@EyoWeiChin` (11 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/23#discussion_r500325811" expanded>

Thanks for refactoring out the methods! 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/31#discussion_r500780066" expanded>

Perhaps this could be replaced with a switch statement if you feel it would be neater.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/46#discussion_r502326365" expanded>

This part could be changed to: 
Iterator iterator = jsonList.iterator();

To remove the depreciated / unchecked warning
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/46#discussion_r502326963" expanded>

Following the above comment, this line could be split into these 2 parts to:
            //Advance the Iterator
            jsonObject = (JSONObject) iterator.next();
            jsonObject = (JSONObject) jsonObject.get("data");
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/46#discussion_r502327995" expanded>

Following the above comment to remove the warning. This chunk of code can be replaced with:
            for (Object genre : jsonGenre) {
                animeGenre.add((String) genre);
            }
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/85#discussion_r503916521" expanded>

Thanks for making this part neater.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/135#discussion_r507175075" expanded>

Would this be better if it was refactored using the utility methods available in CommandParser?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/165#discussion_r509853606" expanded>

Is this subsection needed? I wanted to do one for mine as well, but it seems weird without another subsection or "proposed implementation" section
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/165#discussion_r509853703" expanded>

Thanks for helping me fix the formatting for my images!
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/165#discussion_r509855871" expanded>

Hmm okay got it! I'll make modifications to my portion in my next PR. Thank you.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/185#discussion_r511472486" expanded>

It seems that there is a mistake in the numbering here
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/131#discussion_r507079386" expanded>

Ah, I left it there mistakenly. I have fixed it, thank you for pointing it out. 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r508166518" expanded>

I have extracted the searchType as a constant!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r508166648" expanded>

I have extracted out the values as constants.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r508166710" expanded>

I have added a newline here.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r508166761" expanded>

I have added a newline here as well, Thank you!
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r508171525" expanded>

Got it! I have rectified the issue. Thank you
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r508177773" expanded>

I have made the changes, in all affected areas. Thank you for pointing it out. 
</panel>

</panel>


<panel type="info" header="### 37. WU YUXIN `@Lezn0` (11 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502768016" expanded>

4 spaces instead of 8
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502769262" expanded>

```suggestion
    private static ArrayList<Bus> buses = new ArrayList<>();
```
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/26#discussion_r503177447" expanded>

Might be better to separate i to a counter and a boolean for better clarity.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/33#discussion_r505108118" expanded>

Good test cases
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/33#discussion_r505108662" expanded>

Nice! The tests account for most situations.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/39#discussion_r505106161" expanded>

```suggestion
            if (info.name.equalsIgnoreCase(input)) {
```
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/39#discussion_r505106417" expanded>

usage of getName function is redundant.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/39#discussion_r505107111" expanded>

Good test cases for the program
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/74#discussion_r508382569" expanded>

might be better to move this to UI
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/78#discussion_r509337287" expanded>

```suggestion
    public static Bus selectBus(String busCode) {
```
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/78#discussion_r509340816" expanded>

Is it possible to use an assert here instead of try-catch since the catch block is not doing anything? I'm not very sure
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/28#discussion_r503104913" expanded>

```suggestion
package seedu.duke;

import java.util.EnumSet;

public enum BusStops {
    PGP("PGP","prince george residence"),
    KENTRIDGEMRTSTATION("Kent Ridge MRT Station","mrt"),
    OPPUNIVERSITYHEALTHCENTRE("Opp University Health Centre","opposite UHC, where students can get MC"),
    YUSOFISHAKHOUSE("Yusof Ishak House", "Location with student service center and restaurants"),
    CENTRALLIBRARY("Central Library","also known as CLB"),
    KENTRIDGE("Kent Ridge","idk"),
    MUSEUM("Museum", "Opposite Faculty of Engineering"),
    UNIVERSITYTOWN("University Town","place full of fun"),
    UNIVERSITYHEALTHCENTRE("University Health Centre","UHC, where students can get MC"),
    OPPKENTRIDGEMRTSTATION("OppKentRidgeMRTstation","MRT"),
    RAFFLESHALL("Raffles Hall","Hall located nearby Faculty of Engineering"),
    KENTVALE("Kent Vale","somewhere"),
    EA("EA","located in Faculty of Engineering"),
    NUSIT("NUS IT","Opposite Central library"),
    PGPR("PGPR","prince george residence");

    private final String description;
    private final String name;

    BusStops(String name,String description) {
        this.description = description;
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public String getName() {
        return name;
    }

    public static void listStops() {
        for (BusStops info : EnumSet.allOf(BusStops.class)) {
            System.out.println(info.name + " : " + info.description);
        }
    }
}
```
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/28#discussion_r503141634" expanded>

Yup, only for testing.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/59#discussion_r507153593" expanded>

sure why not
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/6#issuecomment-706514074" expanded>

Better skeleton bus data
</panel>

</panel>


<panel type="info" header="### 38. DUAN YU HANG `@Artemis-Hunt` (9 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507335218" expanded>

Can consider switching to using TablePrinter to print help in standardized table format - look at code below for example. Columns in the table are separated by semicolons
Code:
![image](https://user-images.githubusercontent.com/62279011/96392821-ce3ea500-11ef-11eb-8d71-1cad9acbbdaa.png)

Output:
![image](https://user-images.githubusercontent.com/62279011/96392852-e8788300-11ef-11eb-8297-f10cdf213f23.png)


</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507340759" expanded>

Can consider changing to standardized input format, to remain consistent with the manual/auto tracker and finance tools input format. 

Let's say we have CommandPacket packet = InputParser().parseInput(input)
The commandPacket will be as such:
![image](https://user-images.githubusercontent.com/62279011/96393027-8cfac500-11f0-11eb-846d-13f84832c61f.png)
Params can be accessed via packet.getParam("note"), for instance. This will return "skip page 70" as a String
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507343209" expanded>

Can consider refactoring code into separate function(s), to avoid "arrowhead" code (deeply nested if-else and loops)
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507353402" expanded>

See comment on lines +87 to +92 first before reading this comment: If goals in totalGoalList is changed to a hashMap then the goal for that month can be accessed with this.goals.get(month) in TotalGoalList.java instead of haping to use a for loop to search through all entries. 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507354512" expanded>

Try not to have unhandled exceptions unless necessary. Do add comments to explain the scenario(s) in which the exception would be triggered
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507356916" expanded>

Can consider changing the totalGoalList to a hashMap with key {month} and value {goal}, since we only allow them to set 1 goal for the month.
E.g.
totalGoalList
JAN: 1500
FEB: 2000
MAR: 4500
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507358353" expanded>

Consider renaming this variable - goalSetter gives the impression that it is a class that handles setting the goal, when it is simply the goal to be set. Maybe something like goalToSet would be clearer
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507360368" expanded>

Consider storing total monthly expenditure/income in a hashMap.
E.g.
expenditureList
JAN 1500
FEB 254
MAR 0

Increment/decrement the total amount whenever there is a change made. For instance, when a new expense of $25 is added to the ledger for June 15 2020, increment the total expenditure for June by $25. When this same expense is edited to become $45, increment June expenditure by $20. When this expense is deleted, decrement June expenditure by $45.

This way, there is no need to loop through all entries every time there is a new entry or every time you want to view the goal.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74#discussion_r507370018" expanded>

Avoid calling main() over and over again - this creates a new loop. So if the user does 10 operations, this will cause 10 nested main loops to be created. Should return to the top level main loop directly (i.e. use `return;`) and allow the main loop to continue
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/1#issuecomment-701996803" expanded>

Good job
</panel>

</panel>


<panel type="info" header="### 39. TAN ZHENG CHONG, SHAWN `@ShawnTanzc` (9 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/27#discussion_r503126848" expanded>

Could consider replacing -1 with a defined phrase so it is more reader friendly
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36#discussion_r506935475" expanded>

@felixhalim say that we should include the space so that when user type "buys" or "buyer" it won't be detected
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36#discussion_r506935639" expanded>

Not recommended to use * it doesn't fit the gradle checkstyles
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36#discussion_r506935820" expanded>

Additional Spacing
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36#discussion_r506935914" expanded>

Same reason as mentioned
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507435995" expanded>

do we need to remove spaces for this too?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507437620" expanded>

I did this so it gives users the flexibility or options to type in "2" or "Day 2". so I dun think we should replace it?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/46#discussion_r508189537" expanded>

General notes: 
+ 'convert /to'
+ 'edit functions' (ForEx Rate, ForEx Abbreviation)
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/46#discussion_r508189835" expanded>

include foreign currency abbreviation
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r502759493" expanded>

NullExceptionError is not fixed
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#issuecomment-706475236" expanded>

will add new PR
</panel>

</panel>


<panel type="info" header="### 40. WONG HENG CHIN `@EthanWong2212` (9 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502768225" expanded>

```suggestion
    private static final String[] AA1 = {
        "PGP",
        "Kent Ridge MRT Station",
        "Opp University Health Center",
        "Yusof Ishak House",
        "Central Library",
        "Kent Ridge",
        "Museum",
        "University Town",
        "University Health Centre",
        "Opp Kent RIdge MRT station",
        "PGPR"
    };

    private static final String[] AA2 = {
        "PGP",
        "Kent Ridge MRT Station",
        "Opp University Health Centre",
        "University Town",
        "Raffles Hall",
        "Kent Vale",
        "EA",
        "NUS IT",
        "University Health Centre",
        "Opp Kent Ridge MRT Station",
        "PGPR"
    };
```
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/35#discussion_r505245589" expanded>

```suggestion
            assert !locations[0].isempty() : "Location 0 is empty.";
            assert !locations[1].isempty(): "Location 1 is empty.";
```
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/35#discussion_r505246587" expanded>

Looks good. Can consider using .isblank()
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/43#discussion_r505506468" expanded>

```suggestion
There are 7 commands you can use to get bus information from Nav@NUS

>Notes about command format:  
```
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/43#discussion_r505506863" expanded>

Would be good to start each section with a brief intro
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/43#discussion_r505508436" expanded>

```suggestion
This following steps is a guide to start running Nav@NuUS.

1. Ensure that you have Java `11` or above installed in your computer.
```
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/43#discussion_r505508577" expanded>

Would be good to start each section with a brief intro
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/57#discussion_r507145156" expanded>

Perhaps we should add getters for faculty and info here too. Otherwise we can go ahead and merge
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/57#discussion_r507148041" expanded>

Sure, we can add it when implementing the other features
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/39#discussion_r505219865" expanded>

I've removed this file. Wasn't meant to commit it to branch
</panel>

</panel>


<panel type="info" header="### 41. IVANDER JONATHAN MARELLA WASKITO `@ivanderjmw` (9 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r499270573" expanded>

I think the variable name `userInput` is better than `command`.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r499270622" expanded>

A better exception name would be `BadFormatException`.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r499270661" expanded>

This needs to be called from Ui as well, once its implemented.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r499270888" expanded>

`userInput` will be a better variable name than `command`.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r499270924" expanded>

This shouldve been an abstract class for all the other commands.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/20#discussion_r499270956" expanded>

I think creating this class as a parent for everything else will solve the parser error.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/29#discussion_r503328417" expanded>

commands should be appended with a space character.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/50#discussion_r508652836" expanded>

Why is there a need for this return statement?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/59#discussion_r510299806" expanded>

Nice formatting, LGTM!
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507424989" expanded>

Unlike read command, this line is used without printing any symbols before the user input.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507654106" expanded>

Umm.. did I remove the lines by accident?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507654467" expanded>

shawn I think there are some of your changes I accidentally deleted. It's the automerge..
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507654972" expanded>

okk
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/38#discussion_r507669593" expanded>

No, this was changed in this commit. But we could think of this feature again. [Link to commit.](https://github.com/AY2021S1-CS2113T-W11-2/tp/commit/a604d8334a4b5a00dc9181c49b5a63de6bee7a72)
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/51#discussion_r509141311" expanded>

Thank you @felixhalim 
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/51#discussion_r509141653" expanded>

I tried to delete a directory, and output no errors if it does not exist.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/issues/10#issuecomment-703125880" expanded>

Duplicate issue
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/issues/16#issuecomment-703289051" expanded>

Hello Sameer,

I opened a new issue for the mismatched project requirements. Our team will update it ASAP. Please check #19 

Regards,
Ivander
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/51#issuecomment-713448842" expanded>

Todo: Fix runtest.bat (@felixhalim )
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/58#issuecomment-714596789" expanded>

Thank you felix!
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/62#issuecomment-714623806" expanded>

LGTM! Nice.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/issues/30#issuecomment-714859161" expanded>

Fixed in #18 
</panel>

</panel>


<panel type="info" header="### 42. TAY CHIN HENG `@dozenmatter` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/63#discussion_r500047727" expanded>

I was thinking if it would be better to place quoteToPrint inside your toString() method and implement printAllQuotes() inside TextUi class instead? Then all you need is to call quoteList.toString() inside your printAllQuotes() method to print all quotes. 

What do you think? :)
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/71#discussion_r501412151" expanded>

Why do you create a DeleteCommand inside your todo package?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/71#discussion_r501412352" expanded>

Likewise for this and other commands. Ideally all of our commands should be defined under the "commands" package
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/74#discussion_r502730699" expanded>

Not sure if this line of code will fail, but I think it will be better to use information.isEmpty() or information.equals("") ?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/99#discussion_r504616766" expanded>

no worries I think that is not too big an issue
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/138#discussion_r507671988" expanded>

By right execute() should take in Storage as parameter and this line of code should be storage.save() instead due to the previous commit I pushed just now. Not sure why Git did not flag this as a merge conflict though.

Can you try to pull the latest one and see if the code updates?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/154#discussion_r509066238" expanded>

Just to confirm, will your bookmark work if you do not 0-index this? 
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/154#discussion_r509071155" expanded>

Oh I see how your code works now. As a suggestion, it will be better to 0-index the number here, so that you will not need to -1 from other places of your code such as your delete() and findByIndex(). 

I will assume that your code is working and approve it.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/137#discussion_r507625879" expanded>

i think this could be previously from Yilun's one. Just now the log file got merge conflict so I just anyhow remove some lines haha.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/137#discussion_r507665541" expanded>

Yup you're right this line can be removed 👍 
</panel>

</panel>


<panel type="info" header="### 43. LIM GANG LE `@limgl1998` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/32#discussion_r501670102" expanded>

I think this line should be in one of the methods instead of being declared outside
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/32#discussion_r501672424" expanded>

Maybe it would be clearer for the instance of ModuleList to be called modList instead? It might get confused with module.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/44#discussion_r502935272" expanded>

Maybe can include a file creation here so the user need not manually create one
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/44#discussion_r502935543" expanded>

I think the address can be refactored into a constant e.g. FILE_PATH
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/47#discussion_r503101338" expanded>

Maybe can label as a comment what the various index of the array modInfo refers to
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/50#discussion_r503892430" expanded>

A suggestion is that this string can be set as a constant in the UI class and then you can call the constant (UI.constant name) here.  If the message is changed at the other class for whatever reason then this part will automatically change also so don't really need change manually every time.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/88#discussion_r510014947" expanded>

Not sure if really wanna use this as this is kind of buggy. Might need to update/ tweak cmd for it to show
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/88#discussion_r510063967" expanded>

Hmm, then for now we just use it. If it was encountered as a bug during testing then we change? Cos now this method is not tested yet right?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/45#discussion_r502934286" expanded>

Sounds like a good idea!
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/49#discussion_r503831706" expanded>

Okay sure will change it back
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/67#discussion_r508393346" expanded>

yeah should ignore
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/8#issuecomment-703726622" expanded>

Fixes #23 
</panel>

</panel>


<panel type="info" header="### 44. GUNIT MITTAL `@gmit22` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/19#discussion_r500141229" expanded>

SO do we insert the code for adding and editting to project member list here?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/19#discussion_r500340831" expanded>

Yes so something like project member which will be handling all this?

</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/19#discussion_r500341660" expanded>

Good job, as @chocomango  said we need to break commands into subclasses I think.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/17#discussion_r500360259" expanded>

I think here the main implementation is for parser to be used for your testing?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/31#discussion_r502778906" expanded>

Yes that makes more sense for setting it. Thanks
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/34#discussion_r502886624" expanded>

change this get to getTask, so it becomes backlog.getTask(id -1 )
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/34#discussion_r502886677" expanded>

Similar to add, maybe implement a removeTask also in the backlog task class
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#discussion_r510841048" expanded>

Think remove it then 
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28#discussion_r501595931" expanded>

Yes i forgot to incorporate that change will do
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28#discussion_r501596517" expanded>

Agreed.
Okay so just public variable will be used here? Then won't we have to pass the project object in all the functions?

</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28#discussion_r501835993" expanded>

Just to clarify:
So once project is created and thrown, the command returns the proj variable which is stored in the parser to edit? 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/27#issuecomment-705685871" expanded>

Good to merge.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/30#issuecomment-705950891" expanded>

I think you'll have to pass the project since all of it will be added to the backlog attribute of it. I have implememnted the add and delete, can check from there also if needed. 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/30#issuecomment-705962835" expanded>

Code has been changes, the parameters and all so I think you need to adjust to that. So i think need to factor that in 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/34#issuecomment-706672608" expanded>

Suggested some changes, rest looks good to merge
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/34#issuecomment-706672655" expanded>

Please assign appropriate labels, and everything.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/33#issuecomment-706672795" expanded>

Any reason for moving project in a different package?
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/33#issuecomment-706678414" expanded>

Like add all classes which need to be stored in one package?
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/33#issuecomment-706678447" expanded>

The structure is making it a bit confusing imo, maybe change that?

</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/34#issuecomment-706698463" expanded>

Good to merge
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/33#issuecomment-706741998" expanded>

I meant like add all the files whose data has to be stored in the same main package. Also, can you see Duke class and remove your parser?
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/15#issuecomment-706834611" expanded>

Done by #34 
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/23#issuecomment-711388652" expanded>

Sounds good
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#issuecomment-715890600" expanded>

Resolve the conflicts, youd have to do it using cli in your own repo @e0426051 
</panel>

</panel>


<panel type="info" header="### 45. CHEN JIA JUN `@iamchenjiajun` (7 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/28#discussion_r503502004" expanded>

I think this part may throw an exception when the user doesn't enter an integer input.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/28#discussion_r503502570" expanded>

Otherwise I think it looks good to merge 👍 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/79#discussion_r509624746" expanded>

I only used this line to check if the user entered valid arguments but can be removed for your part of the code if needed.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/79#discussion_r509624983" expanded>

Same for this as other comment.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/82#discussion_r510789426" expanded>

Typo here
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/87#discussion_r511441165" expanded>

I was thinking that if we only print a new sorted list using the "list" command, the users will never know which task they are setting as "done" or "deleted".
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/87#discussion_r511450188" expanded>

Yea that makes sense.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/17#issuecomment-704022798" expanded>

Add EXPECTED.TXT and input.txt IO redirection tests from the iP
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/21#issuecomment-706265348" expanded>

oops checkstyle failed
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/issues/7#issuecomment-706507368" expanded>

Adding a task
Format: add TASK_NAME [by/DD-MM-YYYY-HH:MM] [at/DD-MM-YYYY-HH:MM] [p/PRIORITY_NUMBER] [class/CLASSIFICATION]
Adds a task with a given task name.
Example: add tP meeting,
add tP meeting by/16-09-23:59 at/15-09-2020-11:00,
add tP meeting by/16-09-23:59 at/15-09-2020-11:00 p/1
add tP meeting by/16-09-23:59 at/15-09-2020-11:00 p/1 class/project
Expected output: 
Noted. I’ve added this task.
tP meeting by: 16-09-2020-23:59 @ 15-09-2020-11:00
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/38#issuecomment-707815231" expanded>

LGTM
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/40#issuecomment-707863606" expanded>

LGTM!
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/41#issuecomment-707866566" expanded>

LGTM!
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/47#issuecomment-708197770" expanded>

It seems to be failing I/O redirection tests, try modifying EXPECTED.TXT with the new contents of ACTUAL.TXT and verify if it's the intended behaviour.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/47#issuecomment-708198488" expanded>

Might have to change input.txt too since some of the commands are changed.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/78#issuecomment-713683308" expanded>

Consider refactoring creating the command as a new method in CommandCreator class using the design patterns. You can pass in the full command or parsed command as an argument for the method. Check the add command and set command for an example. I didn't move everyone's commands because I didn't want to claim credit for the code.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/87#issuecomment-715974287" expanded>

There's so many constructors to ListCommand now, I wonder if we can actually pass in an enum to the ListCommand instead and use a switch statement in the execute method. But that will be for another time I guess (maybe v2.1 or another PR sometime later).

But then with enums we'd have to pass in blank arguments for "category" when listing category, so another point to consider.
</panel>

</panel>


<panel type="info" header="### 46. CHEN QIXING `@QX-CHEN` (7 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-1/tp/pull/38#discussion_r503290930" expanded>

No need these.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-1/tp/pull/38#discussion_r503291411" expanded>

-1 later because range check is done in the later part.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-1/tp/pull/38#discussion_r503291532" expanded>

-1 here.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-1/tp/pull/38#discussion_r503291789" expanded>

Perhaps variable name change to index?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-1/tp/pull/38#discussion_r503292212" expanded>

Fullstop before new line.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-1/tp/pull/38#discussion_r503292526" expanded>

Expand out, should be highlighted in code style.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-1/tp/pull/38#discussion_r503293945" expanded>

specifically line 37
</panel>

</panel>


<panel type="info" header="### 47. JOSEPH ABRAHAM `@josephhhhhhhhh` (7 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/1#discussion_r498617682" expanded>

good job!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/23#discussion_r500755122" expanded>

Ah yes, this makes sense. We can cut down on unnecessary variables this way!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502870346" expanded>

The DisplayableList class seems a bit redundant at the moment as its functions are very similar to an actual ArrayList. We should look into developing this class more to better manipulate the lists in our program.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502955929" expanded>

The coding logic here looks really good! Nice work!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59#discussion_r502957332" expanded>

Since you're getting QuizQuestionList with this function, would calling the new QuizQuestionsManager object quizQuestionList instead of quizQuestionsManager? 
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/116#discussion_r509017056" expanded>

The diagrams all look really good! Nice.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/124#discussion_r509601423" expanded>

Looks really good, the explanation is methodical, while using concise language. Nice job!
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501670846" expanded>

Good point! Will make the recommended alteration right away.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501784820" expanded>

Ah yes, pardon my folly, will adjust it in future. Thank you!
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501785472" expanded>

It was initialised above the if loop. 
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46#discussion_r501786287" expanded>

Alright, noted! Will look into how to make the implementation better in future!
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/91#discussion_r505407470" expanded>

Roger, this makes a lot of sense. Thank you!
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/132#discussion_r511056376" expanded>

Understood! And done!!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/132#discussion_r511056422" expanded>

Understood! And done!!

</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/1#issuecomment-702524034" expanded>

Overall, well done changing your name.
</panel>

</panel>


<panel type="info" header="### 48. ONG CHIN HANG `@CookieHoodie` (7 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/12#discussion_r501008254" expanded>

I think this printSubject function should be implemented in Ui class instead of here right?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/27#discussion_r503325496" expanded>

Should have created new exception classes for flashcards. NoSubjectException is supposed to be used by subject commands, but I noticed that the topic commands were also using the same exceptions, so I guess we can change it later
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/32#discussion_r503756430" expanded>

List of flashcards is not used, can be removed
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/45#discussion_r507023115" expanded>

This method is no longer needed. I will delete it in the subsequent pr.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/52#discussion_r508407110" expanded>

Inside the constructor of the classes that extends Exception, it should call super(message). In this case, it should call super(printNoFlashcardsError).
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/52#discussion_r508410431" expanded>

Personally I don't think it's a good idea to make Ui to return string the exception message in this way if no cuztomization is to be done to the message. Constants would be better in this case.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/52#discussion_r508417457" expanded>

We could create a method in Ui such as printError(Throwable err) and pass the error to that method for it to print out. In that way we let Ui handle all the printing and improves cohesion.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/33#issuecomment-711129711" expanded>

necessary instances such as storage can also be passed in if they are needed in certain execute methods.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/28#issuecomment-715187066" expanded>

Issue is solved. Closing this issue.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/48#issuecomment-715192482" expanded>

Issue is solved. Closing this issue.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/71#issuecomment-716107867" expanded>

partially fixes #29
</panel>

</panel>


<panel type="info" header="### 49. LIM YUAN BING `@farice9` (7 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/56#discussion_r504356556" expanded>

Should probably git ignore this? Or intended ya
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/92#discussion_r508595594" expanded>

I think it'll be clearer if you put

```
assert cardIndex <= flashcardDeck.size() : "card index inserted should be less than size of deck at this step"
```
assert is used to check if the value of something is what it **should actually be**, in this case, you want to assert that card index is actually less than or equal to deck size.

Consider adding another check for cardIndex to be greater than 0 btw! Otherwise negative values might break the application.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/92#discussion_r508597852" expanded>

Just adding on, the more general alternative would be testAddCard() !

Remember to apply the renaming to delete card and write to file as well.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/102#discussion_r510359017" expanded>

I think need to Figure 2 instead of figure 2
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/102#discussion_r510359100" expanded>

Same thing here
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/102#discussion_r510360062" expanded>

Are we keeping this line?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/102#discussion_r510360221" expanded>

Everything else looks goood
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/6#issuecomment-704729473" expanded>

# Assessing different features of the application
- User should be able to enter and exit a feature of the application
- If possible, the user can jump from one feature to another without going back to the main menu

</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/40#issuecomment-706914323" expanded>

LGTM, gonna merge and refactor any parts if necessary. Noice mate.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/49#issuecomment-707914305" expanded>

I agree with the check cap thing Sihui mentioned, but let's leave it to v2.0
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/49#issuecomment-707917664" expanded>

LGTM, it won't affect other parts of the code atm since it only implements list grade function. Will merge this PR!
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/50#issuecomment-707919559" expanded>

Will link the specific PR to this issue when working on it. Thanks for creating the issue!
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/45#issuecomment-707953057" expanded>

Nice work Florence! Functions look good.

I resolved merge conflict between this branch and the latest TP master (after merging Shiho part). Then found out there are checkstyle errors. For the interest of time, I'll merge this PR in and fix the checkstyle on my side locally. 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/41#issuecomment-707966577" expanded>

LGTM, failed some checks due to very little checkstyle error, will fix in the upcoming PR. Merging it!
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/56#issuecomment-708114503" expanded>

Nvm just merge first! Thankss
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/57#issuecomment-708332250" expanded>

LGTM, thanks for the prompt addition. Merging it 😸 
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/59#issuecomment-708337301" expanded>

LGTM, merging it!
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/9#issuecomment-708505053" expanded>

Need to implement for the bookmark and academic features. Flashcard and timetable local storages have been built by @slightlyharp and @hailqueenflo .
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/76#issuecomment-711140243" expanded>

Thanks for adding the log!
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/11#issuecomment-711140750" expanded>

Remember to close this issue if it's done!
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/84#issuecomment-711143573" expanded>

![image](https://user-images.githubusercontent.com/56571027/96363983-7ca00700-116a-11eb-8183-a8f372277f43.png)

end result
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/98#issuecomment-713365227" expanded>

LGTM!
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/102#issuecomment-715223888" expanded>

Sorry wrongly approved, wait for new push before merging
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/9#issuecomment-716099518" expanded>

This issue has been solved by each individual working on their feature

bookmark storage -> @lingsihui 
academic storage -> @luziyi9898 
timetable storage -> @slightlyharp 
flashcard storage -> @hailqueenflo 
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/28#issuecomment-716099614" expanded>

Closing this issue since it has been implemented
</panel>

</panel>


<panel type="info" header="### 50. KER CHIN TIAN `@kerct` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/43#discussion_r502854814" expanded>

Why not just take in Module as an argument?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/43#discussion_r502854942" expanded>

Is "checkIfModuleExist" a better name?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/45#discussion_r502915041" expanded>

Should we change -1 into a variable called INVALID_WORKLOAD or INVALID_WEEK too?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/50#discussion_r504354496" expanded>

How about using COMMAND_EXIT.length() instead?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/67#discussion_r508245671" expanded>

Should we gitignore this file?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/89#discussion_r510534888" expanded>

Is it better to use the verb form "analyse" for the command instead? 
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/44#discussion_r502994959" expanded>

The file is already created when the Storage object is initialised, this part is just a check when trying to read from the Storage object.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/44#discussion_r502995013" expanded>

Okay!
</panel>

</panel>


<panel type="info" header="### 51. RANI KARTHIGEYAN RAJENDRAKUMAR `@1-Karthigeyan-1` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/12#discussion_r499003059" expanded>

Could be more specific in naming convention. For example, "getList" or "getActivityList"
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/30#discussion_r499244274" expanded>

Might have to SLAP this later on, once the base parser class Is up
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/75#discussion_r503351821" expanded>

You can use the methods in findDescriptionCommand class and assert using those methods. 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/75#discussion_r503352151" expanded>

Same as the previous comment
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/102#discussion_r508616506" expanded>

Nice slap!!!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/118#discussion_r511505624" expanded>

 Assertions.assertThrows() might help for exception testing
An example is given here:
https://howtodoinjava.com/junit5/expected-exception-example/
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/48#issuecomment-705657629" expanded>

Looks good!
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/54#issuecomment-706031122" expanded>

Looks good!
</panel>

</panel>


<panel type="info" header="### 52. ONG DE ZHI `@OngDeZhi` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/31#discussion_r500780462" expanded>

The variable `commandOption` is not used, perhaps we can use a if statement for now since there be more options later for the watchlist command.
```
if (commandOption.equals("-n")) {
    // create watchlist code
}
```
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/131#discussion_r507076862" expanded>

Do you still need this? Otherwise, it would be better to remove the old code.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r508169351" expanded>

Capitalize the first letter, same for line 314.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/171#discussion_r510524436" expanded>

Is it intending to log some workspace information here after it is saved? There's a ":" at the end for line 119.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/171#discussion_r510525626" expanded>

I think you could consider using a constant here.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/171#discussion_r510525772" expanded>

Looks good!
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/34#discussion_r501465361" expanded>

Noted on that, I will add an extra line.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/140#discussion_r508125239" expanded>

Noted on that, I have updated to use a constant for it.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/146#discussion_r508241301" expanded>

Alright, I will add some comments to explain the numbers.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/146#discussion_r508241375" expanded>

Okay thanks.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/146#discussion_r508243439" expanded>

Ok, I have removed some redundant words in it.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/146#discussion_r508240288" expanded>

That's true but because it affects the data folder in the src/test too, hence I made it specific. Perhaps, we could add it back after this PR as by then, the test files required for the JUnit would be uploaded already.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/158#discussion_r509008659" expanded>

Yep, I think we could standardize to 2 periods, ".."?
I think we could use it during the initialization process? Seems like the only place it would fit.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/165#discussion_r509854819" expanded>

You are welcome :)
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/165#discussion_r509855326" expanded>

I think so because we are gonna have another subsection called design consideration, I guess having just current implementation should be fine!
</panel>

</panel>


<panel type="info" header="### 53. ZHOU SHIKAI `@shikai-zhou` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/26#discussion_r502991709" expanded>

I think you should not put this inside the constructor
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/40#discussion_r503762970" expanded>

Should we use break instead of return?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/40#discussion_r503768269" expanded>

As long as it works I guess ...
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/51#discussion_r506562133" expanded>

Since the variables are already declared, why not pass use them? Like ShowDuration instead of Integer.parseInt(2)
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/51#discussion_r506563056" expanded>

What if we don't know showDuration?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/114#discussion_r511591025" expanded>

Does this function prints out the review?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/88#discussion_r510549270" expanded>

I just made it so that it prints out hours and minutes. Still cannot parse yet.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/1#issuecomment-701155969" expanded>

Great job
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/37#issuecomment-707524831" expanded>

This is done for add
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/98#issuecomment-715881021" expanded>

add &gt;Module Code> &gt;1> &gt;Number of Lectures>
Do you think the above works?
</panel>

</panel>


<panel type="info" header="### 54. LING SI HUI, SHIHO `@lingsihui` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/61#discussion_r504693200" expanded>

Good Job.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/87#discussion_r508234563" expanded>

👍🏻 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/92#discussion_r508547002" expanded>

You should rename your test function name in the following format!
methodUnderTest_inputGiven_ExpectedOutput
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/92#discussion_r508578143" expanded>

 Your error: java.lang.AssertionError: size should not be greater than card index at this step

I think you meant assert flashcardDeck.size() >= cardIndex

</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/92#discussion_r509020282" expanded>

good job ! 
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/103#discussion_r510742109" expanded>

You can look at my RemoveLinkCommand class evaluateLinkNumber to add the exceptions! 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/49#issuecomment-707868953" expanded>

looks good. Maybe you can rename check grade to check cap instead of check grade and list grade. 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/45#issuecomment-707871957" expanded>

Maybe you can add a Flashcard Ui class to print out all your Ui. 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/41#issuecomment-707873295" expanded>

Maybe you can add a constant for all your magic number to improve code quality.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/39#issuecomment-707903858" expanded>

Thanks for the reminder!
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/58#issuecomment-708353767" expanded>

Okay Thank you! 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/63#issuecomment-708461888" expanded>

Fixes #20 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/73#issuecomment-710037998" expanded>

Fixes #62 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/88#issuecomment-712665637" expanded>

Ganbatte
</panel>

</panel>


<panel type="info" header="### 55. WANG ZESONG `@wgzesg` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#discussion_r501644415" expanded>

Try use commandLibrary as well?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#discussion_r501645157" expanded>

Since it's the same we can refactor the two to a shared package then use it for all parts?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/90#discussion_r509009059" expanded>

Printing response can put in Ui class. Response content can be a constant
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/90#discussion_r509011034" expanded>

Can try use/adapt the getInput method from Khoa's Ui package. That may standardise it
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#discussion_r509269916" expanded>

Can create a new instance of workoutSessionUi and make the method non static. That would be more oop and better design
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#discussion_r509274246" expanded>

Can try convert to throw Schwagserexceptions which can be handled by SchwasadsfgerHandler. That will help format the output which aligns with Ui output format
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/101#issuecomment-713686215" expanded>

Good refactoring to avoid circular dependency
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/119#issuecomment-715919814" expanded>

good effort!
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/121#issuecomment-716118460" expanded>

Nice refactoring
</panel>

</panel>


<panel type="info" header="### 56. LOOI KAI WEN `@kaiwen98` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/15#discussion_r502817848" expanded>

I think the reason why I was not able to exit your sub program is because your event loops here are slightly convoluted and possibly buggy. Please review! 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/17#discussion_r502818283" expanded>

You can try reviewing LocalDateTime methods for better ways to parse months. Likewise, my DateTimeManager class and parseRawDateTime method in InputParser class may be helpful to you in this particular function.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/17#discussion_r502862792" expanded>

May want to refactor into another function
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/17#discussion_r502862939" expanded>

So you used toString() to handle save text output.  You can perhaps introduce another method to the classes, possibly with an interface, to print some kind of save statement separately. This make make your life easier when you parse.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/17#discussion_r502863035" expanded>

In case you cannot find a better way to deal with this, look at my previous comment
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/issues/26#issuecomment-706661304" expanded>

Noted. Will work on it.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/issues/31#issuecomment-706730256" expanded>

Please take a screenshot, and report your input sequence.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/40#issuecomment-706940392" expanded>

Can you look into the following:
1. Your main loop do not have an exit condition. That's why you cant exit back to main menu
2. You are not using MenuPrinter in your feature. Hence MenuPrinter.prompt does not print error message for you.
3. May want to look into better presentation of error message
4. You may want to augment your command menu with what the user can input, I was not sure what to do

Please fix 1 and 2 then the PR will be merged. The rest LGTM.
![image](https://user-images.githubusercontent.com/57187325/95718700-65ac7100-0ca1-11eb-84dd-49a04f6b6f7d.png)

</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/pull/46#issuecomment-707229530" expanded>

Yo, please check out this issue: #47 
Please review the changes and let me know if you feel something better can be done.
You will need to do some slight refactoring. Kindly do so then it will be good to merge. 
</panel>

</panel>


<panel type="info" header="### 57. JAZHTEN LOW YONGSHEN `@jazhten` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/40#discussion_r503764081" expanded>

No, I think break might cause the program to terminate as if a "bye" has been passed in. Not sure if it will break the outerloop in the main Duke class.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/46#discussion_r503931334" expanded>

is it possible to throw more than 1 exception? Does it even catch the IndexOutofBounds? 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/59#discussion_r507398282" expanded>

well done with this part
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/88#discussion_r510535299" expanded>

Can I just check if our code can parse hours on top of minutes?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/88#discussion_r510572023" expanded>

Ah okay, will raise an issue.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/26#discussion_r502991997" expanded>

No it's not inside the constructor, I'll move it to the bottom so it's clearer haha
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/51#discussion_r506616952" expanded>

Just assume they know or set default.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/51#discussion_r506617659" expanded>

Good catch, whoever is in charge of the add command just adjust accordingly.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/26#issuecomment-706796738" expanded>

Additionally, fixed some bugs related to adding show (would've caused null pointer exception)
Added test methods as example for how to write tests and specifically how to reference the ShowList
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/36#issuecomment-707204734" expanded>

Also abstracted String related commands to StringOperations class
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/35#issuecomment-707207534" expanded>

Nevermind fixed it...
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/36#issuecomment-707415769" expanded>

Sorry don't merge yet, there's some bug with one of the commands
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/36#issuecomment-707421621" expanded>

Just to explain the new changes for edit commands :

getRawEpisodesForSeasons() used instead of getEpisodesForSeasons() -> this one checks array using season-1 so it'll lead to bounds errors

- If numSeason increases:
        - set a new array for episodes and init the new seasons with 1 episode

- if numSeasons decreases:
        - replace episodes with smaller sized array and delete the episodes in the later seasons
        - initially episodes=[10,12] for 2 seasons, when resized to 1, episodes=[10]
 



</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/34#issuecomment-707459822" expanded>

Fixed issue.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/38#issuecomment-707505415" expanded>

Might want to try using Ui.print.... instead of just printing using System.out.println() in the individual functions.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/40#issuecomment-707582289" expanded>

Nice, may want to remove the empty test functions before the final release.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/41#issuecomment-707582786" expanded>

Good use of the Ui class!
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/59#issuecomment-711490237" expanded>

For the date part, just raise the issue and I'll work on it later. thanks
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/63#issuecomment-711501161" expanded>

Thanks for cleaning up.
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/70#issuecomment-713264225" expanded>

Good cleanup.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/73#issuecomment-714170993" expanded>

Yea, I think we should include it in the UG so it'll be easier to use for the pitch/demo. Don't think it's necessary for the DG, maybe a quick note in the abstract or intro about the student part would be sufficient.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/114#issuecomment-716142112" expanded>

Good work with the review commands! Thanks Bryan.
</panel>

</panel>


<panel type="info" header="### 58. THEODORE PINTO `@theopin` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/74#discussion_r507375522" expanded>

Might want to append a "Programing Language: " cos the parser currently looks out for it bfore parsing the language
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/74#discussion_r507376038" expanded>

not sure what is this for
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/74#discussion_r507378343" expanded>

Might want to append a "Contents: " cos the parser currently looks out for it bfore parsing the language
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/82#discussion_r510232801" expanded>

Perhaps a a better word than pattern for the variable name?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/82#discussion_r510234945" expanded>

Might wanna apply slap more here since iza little arrowheaded
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r502926887" expanded>

Noted! Thanks for highlighting
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r502927285" expanded>

Initially did that to cover up visual bug. Resolved!
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503084271" expanded>

Noted! Will rectify them.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503085773" expanded>

Alright! Thanks for the suggestion.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503086328" expanded>

Got notified by intelliJ to use it XD
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503088952" expanded>

Noted!
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503091334" expanded>

Okay
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503091419" expanded>

XD
</panel>

</panel>


<panel type="info" header="### 59. WANG SHUYI `@mrwsy1` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502768130" expanded>

Line47 "AA1" should be "AA2"
```suggestion
        busesInZoneA.add(new Bus("AA2", AA2));
```
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/26#discussion_r503177378" expanded>

```suggestion
    KENTVALE("Kent Vale","Accommodation for visiting faculty guests"),
```
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/26#discussion_r503177562" expanded>

```suggestion
    UNIVERSITYTOWN("University Town","Place full of fun"),
```
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/41#discussion_r505350272" expanded>

the *
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/63#discussion_r507183507" expanded>

didnt we add these last time
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/29#discussion_r503404354" expanded>

Yes, currently it will show 
![Untitled](https://user-images.githubusercontent.com/56810260/95769370-5b629500-0cea-11eb-8872-8bb5bb5c3bf7.png)


</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/29#discussion_r503412159" expanded>

might be a little weird because both AA1 and AA2 would show "PGP-> ...-> PGP" right now if that's the case, but I will take note of that for future updates
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/74#discussion_r508236653" expanded>

i'll try that 
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/74#discussion_r508389624" expanded>

ok
</panel>

</panel>


<panel type="info" header="### 60. CHAN XU HUI `@durianpancakes` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/210#discussion_r511554834" expanded>

public String printPostQuizQuestion(int l, String correctnessLogo) {


</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/210#discussion_r511554870" expanded>

return question + correctnessLogo + "\n\n"
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/210#discussion_r511554891" expanded>

return question + correctnessLogo + "\n\n"
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/210#discussion_r511554924" expanded>

Add one line here:

String correctnessLogo;
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/210#discussion_r511554953" expanded>

System.out.println(quizzes.get(quizIndexes.get(l)).printPostQuizQuestion(userAnswerManager.
                                getUserAnswers().get(l), correctnessLogo));
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/130#issuecomment-709902010" expanded>

Resolves #129 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/189#issuecomment-715189790" expanded>

Resolves #189 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/issues/211#issuecomment-716104304" expanded>

Prints time instead of date
</panel>

</panel>


<panel type="info" header="### 61. SAMUEL PAUL CHRISTOPHER `@samuelchristopher` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/44#discussion_r504756122" expanded>

inputs[1]
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/61#discussion_r507875566" expanded>

this naming brings clarity! good job sam
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/61#discussion_r507876166" expanded>

why printing and returning a string? doesnt the return string from `executeCommand` in every command get printed?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/61#discussion_r507877465" expanded>

nice :^)
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/81#discussion_r511563367" expanded>

nice job on including the id here shreyas
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/8#discussion_r500819033" expanded>

dont need cause the variable is already initialised on [this line](https://github.com/AY2021S1-CS2113T-T09-1/tp/blob/7cd85a2268c4e2eeb93a769ebcb82c17dd9f30f9/src/main/java/seedu/duke/TeamMemberList.java#L6)
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/8#discussion_r500821703" expanded>

thanks for pointing that out sam ! fixed here 7cd85a2268c4e2eeb93a769ebcb82c17dd9f30f9
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506317253" expanded>

ok! thanks man
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506317951" expanded>

thanks sean!
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/issues/67#issuecomment-712095674" expanded>

![image](https://user-images.githubusercontent.com/13195220/96445025-d4f60800-1241-11eb-872a-88aff9996c86.png)

progress as of 19 october 2020, 7:30 pm

moving on to extend task functionality first
</panel>

</panel>


<panel type="info" header="### 62. ALDO MAXIMILLIAN SUGITO `@domaxi` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/22#discussion_r502283479" expanded>

The printing of the cheatsheet names should return a String. All the Sytem.out.println should be handled by only the UI class.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/22#discussion_r502283648" expanded>

^same as first comment
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/22#discussion_r502286694" expanded>

The test is well made, but I think you can move the test into the Test package instead of putting it inside the cheatsheet list class
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503618700" expanded>

Nice Job! Very Neat and the OOP is damn legit
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503624088" expanded>

Legit!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/84#discussion_r511032222" expanded>

Did you just list it one by one?
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/issues/60#issuecomment-710747336" expanded>

I added another attribute in the cheatsheet, isFavorite. Also added a method setFavorite() in the cheatsheet class
</panel>

</panel>


<panel type="info" header="### 63. JOEL NG YI XIAN `@joelngyx` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/2#discussion_r498618863" expanded>

Good job!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/22#discussion_r500745640" expanded>

Good use of tests! And good formatting overall
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/44#discussion_r501464693" expanded>

looks good
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51#discussion_r502870880" expanded>

Changed existing interfaces into classes under 2 broad interfaces, making the code tidier. Looks great!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/65#discussion_r503684892" expanded>

Looks great!
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-3/tp/issues/28#issuecomment-706654834" expanded>

Implemented

</panel>

</panel>


<panel type="info" header="### 64. SHREYAS KUMAR `@shreytheshreyas` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506127076" expanded>

Sam I think you got to make this private and make use of getters and setters, bcus i dont think it's good practice to make class members private. 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/53#discussion_r506338885" expanded>

Sean why ah ? We making all the attributes in the other classes private anyway right 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/63#discussion_r507013306" expanded>

Sean just one question over here ah, we will only able to accept one param over here issit?  something like "select t/2". But will this block of code be able to accept a command like "deadline t/2 d/2020-10-18" where there are two params ?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/71#discussion_r508256292" expanded>

Dude over here we passing a string for the priority ryt, You want to change it to an enumeration??
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/73#discussion_r511591340" expanded>

Riaz, just one doubt over here, for the priority are we using numbers, or are we gonna explicitly mention "High","Medium", Low", because in the user guide we inputted numbers for the priority.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505473811" expanded>

yeah i'll do that once we finalize the project name, just kept it as duke exceptions because that's the intial name we used to create the class
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505474911" expanded>

Yes even i thought it would confusing because of the way the code is structured, but there's a reason i kept it like this, will explain it to you guys over a zoom session 
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/48#discussion_r505477216" expanded>

ok sure but in which is the case that a null pointer exception will be thrown, prof said there is no reason we should catch it in this sectoin ryt right ?
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/54#issuecomment-710913027" expanded>

Guys tried to make the code over here look more modular using SLAP as sean suggested and implemented the commands to adhere to the user guide.  lmk what u guys think
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-1/tp/pull/86#issuecomment-716100495" expanded>

yeah dude, as for now we are using strings for the priorities ryt and I'm assuming the priorities we'll be assigning to the respective tasks will be numbers since that was how it was mentioned in the user guide. So as for now I'm just sorting the tasks by comparing their priority strings and it will arrange every task in ascending order.

</panel>

</panel>


<panel type="info" header="### 65. LIEW WEI SIEW `@LiewWS` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511549017" expanded>

Should we remove this branch since the loop will break at line 27 and update would not be called? Can probably replace it with an assert !isTerminate(command).
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511549544" expanded>

Should we copy into the new ArrayDeque before shuffling? Do we want to keep the original order of the Deck?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511551281" expanded>

Idea for UG FAQ: What if my flashcard answer contains a single word "done" or "exit"?
Possible answer: Escape the command using \exit or "exit".

</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511586868" expanded>

Sorry the earlier comment wasn't very clear. What I meant was that since we have
```
ArrayList<FlashCard> getDeck() {
    return deck;
}
```
then would passing the reference to the ArrayList to shuffle cause the original deck to be randomized also?

If we want  to maintain the order in the original deck then perhaps a suggestion could be changing getDeck() in Deck class to
```
ArrayList<FlashCard> getDeck() {
    return new ArrayList<>(deck);
}
```
so that other methods cannot modify the ArrayList<FlashCards> inside the Deck object except through add and delete.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/13#issuecomment-704680516" expanded>

Delete command for Normal Mode implemented by @alwaysnacy in #26.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/17#issuecomment-704682000" expanded>

Actually do we need JUnit tests for Help Commands?
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/24#issuecomment-704687913" expanded>

Should we add `throws Exception` to the signature of `executeCommand()` in `Main` also?
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/30#issuecomment-704825739" expanded>

I will create a new PR after fixing the issues.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/72#issuecomment-712819728" expanded>

Moving the logic to FlashCard class instead since that is where the response strings are generated.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/72#issuecomment-713411327" expanded>

Discovered bug in formatting when the flashcard id has more than 1 digit. Re-opening issue as a reminder to fix it.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/87#issuecomment-713658488" expanded>

Updated model component as well.
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#issuecomment-716142008" expanded>

Looks good to merge. @kaijiel24 what do you think?
</panel>

</panel>


<panel type="info" header="### 66. NEO YAO JIE, JOEL `@yAOwzers` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/43#discussion_r502919950" expanded>

Would it be better if we used:

this.taskList.remove(index - 1);

We can also store this inside the taskList class as a method! What are you thoughts?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/55#discussion_r504831540" expanded>

Just to note, we can replace this magic number!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/62#discussion_r507181678" expanded>

We should try to remove these -1 as it's a little confusing without any context
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/62#discussion_r507231151" expanded>

Oh like what's the significance of -1? Or its supposed to perform like `if (notebookIndex &gt; 0)` ?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/50#discussion_r503656732" expanded>

Oh okay thanks! Will make edits! I think something went wrong during the merge conflict, was working fine on my end just now
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/83#discussion_r509848739" expanded>

OMG LOL SORRY
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/issues/12#issuecomment-703403207" expanded>

Overlap with Long
</panel>

</panel>


<panel type="info" header="### 67. ZHANG JIAYI `@gua-guargia` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/60#discussion_r504435632" expanded>

Perhaps can extract this part as an exception so that someone reading the code wouldn't get distracted by alternative paths taken when error conditions happen.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/60#discussion_r504436878" expanded>

Probably need to add another line of code to remove the module stored in the moduleList in the access class as well, the allModules variable seems like an instance of the moduleList stored in the access.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/60#discussion_r504437194" expanded>

Probably need to add another line of code to remove the chapter stored in the chapterList in the access class as well, the allChapter variable seems like an instance of the chapterList stored in the access.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/60#discussion_r504438131" expanded>

Perhaps can extract this part as an exception so that someone reading the code wouldn't get distracted by alternative paths taken when error conditions happen.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/81#discussion_r508374677" expanded>

Thank you, I have changed all the separated code into setIsModuleLevel().

</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509360003" expanded>

Thank you, I have changed the constant to all Uppercase and changed the case to relevant constant
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509362357" expanded>

I have modified the method to return boolean instead of String because the execute method will need to print several messages for standard situation, therefore, I use boolean for convenience.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/87#discussion_r509371244" expanded>

Sorry, it is a bit hard to achieve for this method, because this print statement is part of the while loop, return the message or throw exception will terminate the loop. Do you have any suggestions?
</panel>

</panel>


<panel type="info" header="### 68. YEE ZONG SHEN JOHNSON `@Johnson-Yee` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502821088" expanded>

String array declared but not used.
Could be implemented below replacing in line 46: Instead of "AA1", could add Zone_A[0] and Zone_A[1] to show a sequential approach in preparation for larger number of bus routes. Keep in view for future commits.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502822782" expanded>

Could refactor into a method adding all bus routes to the arraylist of bus object. For loop to run through and add the bus routes into the array list. This is to prepare for larger number of bus routes as we include other zones in our future versions. Keep in view for future commits.
```suggestion
        busesInZoneA.add(new Bus(ZONE_A[0], AA1));
        busesInZoneA.add(new Bus(ZONE_A[1], AA2));
```
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/23#discussion_r502824579" expanded>

```suggestion
        busesInZoneA.add(new Bus(ZONE_A[0], AA1));
        busesInZoneA.add(new Bus(ZONE_A[1], AA2));
```
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/29#discussion_r503376223" expanded>

Are you printing all buses and their specific routes together?

</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/25#discussion_r503469122" expanded>

Initially, I added a some string functions to edit the getCommand(). However, in hindsight, the string manipulation should not be done in the ui function and I removed them. The UiTest in this case is trivial and not needed! I will close this pull request soon.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/25#discussion_r503469421" expanded>

Edited it! Thank you for spotting that

</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r502961509" expanded>

Thank you! I will work on that in my next commit
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r503161125" expanded>

Alright, will update the code accordingly to the most recent pull request by Yuxin. 
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/19#discussion_r503635943" expanded>

Alright! Removed, sorry bout the oversight.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/78#discussion_r509343910" expanded>

reafFile could throw a filenotfoundexception and that exception has to be dealt with. 
We could refactor this into a method in the main function to make it look neater

</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/81#discussion_r510017914" expanded>

```suggestion
# IDEA files
/.idea/
/out/
/*.iml

# Gradle build files
/.gradle/
/build/
src/main/resources/docs/

# MacOS custom attributes files created by Finder
.DS_Store
*.iml
bin/

/text-ui-test/ACTUAL.txt
text-ui-test/EXPECTED-UNIX.TXT
logger.log
```
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/81#discussion_r510018246" expanded>

```suggestion
logger.log.lck
*.log.*
logger.log.1
/logger.log.2
/logger.log.3
/logger.log.4
/logger.log.5
/logger.log.6
/logger.log.7
/logger.log.8
logger.log.1.lck
logger.log.2.lck
```
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/81#discussion_r510061817" expanded>

```suggestion
*.log.*
logger.log.1
/logger.log.2
/logger.log.3
/logger.log.4
/logger.log.5
/logger.log.6
/logger.log.7
/logger.log.8
logger.log.1.lck
logger.log.2.lck
```
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/29#issuecomment-707192950" expanded>

Looks good to merge to me!
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/59#issuecomment-711251367" expanded>

Looks good to merge!
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/pull/92#issuecomment-716106729" expanded>

LGTM
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-3/tp/issues/76#issuecomment-716106923" expanded>

Issue addressed! #78 
</panel>

</panel>


<panel type="info" header="### 69. DORIAN ALEXANDER FONG `@dorianfong98` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/9#discussion_r495892651" expanded>

Good description.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/9#discussion_r495897497" expanded>

Perhaps it's time for a new ASCII name art? :)
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/79#discussion_r509891513" expanded>

nice catch
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/63#discussion_r508253180" expanded>

Yep, just following the ToC for addressbook since their user proifle and value prop is both under product scope and only product scope is in ToC
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/63#discussion_r508253374" expanded>

sounds good
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/74#discussion_r509537102" expanded>

Yes because the main README is outside the directory of the tp folder hence it can't be accessed via gh pages, i've tried.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/74#discussion_r509539409" expanded>

apparently not
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/76#discussion_r509880102" expanded>

ok
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/77#discussion_r509885463" expanded>

done
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/79#issuecomment-714242356" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 70. ANDRE WONG ZHI HUA `@AndreWongZH` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/17#discussion_r502447539" expanded>

Making the ArrayList static seems unnecessary. Maybe consider `private ArrayList&gt;Event> tests = new ArrayList&gt;>();`
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/17#discussion_r502447945" expanded>

This method can be an instance method. Being static seems unnecessary.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/17#discussion_r502448362" expanded>

Maybe add spaces in between the arguments.
</panel>

</panel>


<panel type="info" header="### 71. HO CHONG HAN NATHANIEL `@nat-ho` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/84#discussion_r502940147" expanded>

Nice catch!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/137#discussion_r507641805" expanded>

Isn't the list manager initialized before the load command is called in main?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/137#discussion_r507645351" expanded>

Ah okay, initialize is called again when an error has occurred during updating in the even the data was written halfway
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/63#discussion_r500077049" expanded>

That's a good suggestion. I have updated the code to reflect the changes. Now the printing of quotes will be done with the TextUI class!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/138#discussion_r507676674" expanded>

Got it updated to the PR!
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/3#issuecomment-703194054" expanded>

Tutorial testing
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/67#issuecomment-704370542" expanded>

Looks good as a start!
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/79#issuecomment-706573550" expanded>

Looks good!
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/90#issuecomment-707555003" expanded>

LGTM!
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/91#issuecomment-707644206" expanded>

LGTM!
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/96#issuecomment-708116484" expanded>

LGTM
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/141#issuecomment-712215211" expanded>

There was some conflicts with the quotesify logs. Resolved it and merged!
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/142#issuecomment-712234870" expanded>

LGTM
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/145#issuecomment-712610917" expanded>

LGTM!
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/148#issuecomment-712651118" expanded>

LGTM!
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/151#issuecomment-712741528" expanded>

LGTM! Thanks for adding the launch and shutdown 👍 
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/168#issuecomment-715774319" expanded>

LGTM
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/169#issuecomment-715908841" expanded>

LGTM
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/180#issuecomment-716094640" expanded>

LGTM
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/179#issuecomment-716100482" expanded>

LGTM
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/181#issuecomment-716103333" expanded>

LGTM
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/187#issuecomment-716138484" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 72. TAN JIAN HUI TOBIAS `@tobiasceg` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/17#discussion_r500341518" expanded>

Add a constant FORMAT 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/39#discussion_r502919037" expanded>

Looks good to me, once merged I will add this into the parser 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r503745386" expanded>

Is it possible to also add a EditTaskCommand format like ur EditModuleCommand
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#discussion_r500974214" expanded>

 i dont think i can abstract this switch statement due to the fact that it returns different methods based on the command_word_****? Any advice?
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/12#issuecomment-703099145" expanded>

Looks good to me, no issues. 
Can merge
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/17#issuecomment-704310281" expanded>

could u add, a AddCommand.FORMAT
a constant that outputs the correct format on how a addcommand will be read 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/35#issuecomment-705012014" expanded>

looks good, thank you for solving the bug that affects me 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/38#issuecomment-706661949" expanded>

looks good to me, once 1 or 2 more ppl look thru n approve i think can merge

i updated my textui last night also, with regards to the printing of the list
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/issues/60#issuecomment-708243678" expanded>

got it, fixed help command in my latest PR . 

The edit command is fixed with wang qins latest PR
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/issues/89#issuecomment-714375018" expanded>

solved with PR df04fbc6f689c65c0dea794eeb336d41ebcd15f3, merged 
</panel>

</panel>


<panel type="info" header="### 73. LUSI WU QI `@Lusi711` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#discussion_r502931278" expanded>

There is commandParams in CliCommand class. Could it be better to just utilise them?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#discussion_r502931485" expanded>

Overall well done! I like the detail you put in to splitting all the methods.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/77#discussion_r509264120" expanded>

Is it better to phrase this as "Switches from notebook mode (at the bookshelf level) to the timetable mode or vice versa:. Since there are no other modes currently.
</panel>

</panel>


<panel type="info" header="### 74. YEAP CHUN LIK `@yeapcl` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/pull/40#discussion_r502726821" expanded>

Please consider using switch-case. Otherwise, the last one should be a single else-statement. (https://se-education.org/guides/conventions/java/basic.html#layout)
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/pull/77#discussion_r511548381" expanded>

can you probably extract the method out? Quite a number of duplications.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/pull/15#issuecomment-705116458" expanded>

Hi Manuel and Wei Siong, I think we should define a Timetable Class and use it to create ArrayList&gt;Timetable>. Also, it fails CI test. Can you push some changes to debug to code that cause CI to fail? Thanks.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/issues/12#issuecomment-706472897" expanded>

So that I can quit the application in a manner expected by the developer. (e.g. correctly save all my class timetables in a text file)
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/issues/12#issuecomment-706472999" expanded>

Feature implemented
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/issues/7#issuecomment-708149970" expanded>

Feature fulfilled.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/issues/27#issuecomment-708150952" expanded>

Feature fulfilled.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/issues/11#issuecomment-708151047" expanded>

Feature fulfilled.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/pull/60#issuecomment-708438336" expanded>

PR did not pass CI, please review your code again
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/issues/78#issuecomment-716112130" expanded>

Reopened because the bug is still not resolved.
</panel>

</panel>


<panel type="info" header="### 75. LIU HAORAN `@yuqiaoluolong` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/39#discussion_r503927205" expanded>

Good and completed assertion statements.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/39#discussion_r503928834" expanded>

Current commit LGTM.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/19#discussion_r503315698" expanded>

OK.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/19#discussion_r503321521" expanded>

Ok, I fixed them in v0.6
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/19#issuecomment-707130946" expanded>

> The build tests are failing because of the dependency of the code on the Food class. Have you tested the code locally?
> 
> Possible workabouts:
> 
> * Consider moving changes to a branch that targets  snowbanana12345's Food class.
> * Otherwise, consider implementing a minimal Food class which we could also remove when merge conflicts arise later.

I copied and pasted the Food class into seedu.calculator package and added the JUnit test.
</panel>

</panel>


<panel type="info" header="### 76. WANG ZIXIN `@WangZixin67` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/53#discussion_r507127232" expanded>

I think just use the try part below is enough. Because when it equals "", it also throws NumberFormatException.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/53#discussion_r507129060" expanded>

The same when it is null
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/33#discussion_r502993638" expanded>

Sorry, I commented out for testing some exceptions. Forgot to recover it.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/36#issuecomment-708140942" expanded>

Overall is good. Could we separate testParser into 5 parts? The method seems a little bit long.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/43#issuecomment-708447409" expanded>

Although I follow the step to enable assertion, I don't know why assertion is still not enabled. 
</panel>

</panel>


<panel type="info" header="### 77. CHAN WEI LING `@chocomango` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/19#discussion_r500150831" expanded>

There will be another class that runs the code so that we can lessen the code in Project class
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/28#discussion_r501211482" expanded>

Agreed, we can remove the static keyword to allow each instances of the class to have their own variables. Just to better prepare for our v2.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91#discussion_r507024272" expanded>

Updated this issue.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91#discussion_r507024399" expanded>

Sure. I did a simple update on parser to facilitate this.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91#discussion_r507024863" expanded>

This is just a temporary change before @homingjun make a permanent change to parser.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/91#discussion_r507024897" expanded>

ArrayList should be totally removed from parser.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/12#issuecomment-703696329" expanded>

good to merge
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/19#issuecomment-704162538" expanded>

Good job, looks good for now. We can further break the individual command actions into classes and inherit from the parentCommand.
E.g. addMemberCommand inherit from MemberCommand
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/23#issuecomment-704828634" expanded>

Yup sounds good, we should standardise. I also suggest we can have data package to hold all the data classes like Project, Sprint, Task.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/33#issuecomment-706674225" expanded>

simply to put all data classes in one package, but this is all in development, we can change when we integrate later
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/33#issuecomment-706678734" expanded>

I don't understand what you mean by all classes in a file. Maybe we can discuss it during our meeting tonight.
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/37#issuecomment-707131706" expanded>

Sprint object to store tasks allocated to sprint from project backlog, with start and end date.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/90#issuecomment-711120244" expanded>

Looks good. We can further standardise where we catch exceptions after we revamp our v1.0.
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#issuecomment-715398955" expanded>

> 
> 
> I have merged the try-catch block and removed the duplicate function from the classes.
> 
> > Have you tried enabling the assertions? [Link](https://stackoverflow.com/questions/18168257/where-to-add-compiler-options-like-ea-in-intellij-idea)
> 
> I enabled it from settings, and also ran someone's test code which show the thing is enabled. But then like if I run "project /view" from the start it still exits with error even though got assert, then I can only fix it with try-catch block. Also if I replace the "no project" errors from try-catch to assertion then the error message prints but the task is still added. I'm not sure if this is normal behavior. Maybe assertions cannot replace try-catch?

The error was because there is no check whether there is a project before executing _ViewProjectCommand_. The error has already been fixed by @gmit22 in his latest PR. 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/111#issuecomment-715399977" expanded>

Looks good. The bug seems to be fixed.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#issuecomment-715400656" expanded>

I have merged his PR, so you can do a pull on the repo and see if the error persist.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/112#issuecomment-715626026" expanded>

Apart from updating all the existing SprintCommands, I have changed the ProjectManager to use Hashtable to facilitate the deletion feature of projects in the future.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/112#issuecomment-715637479" expanded>

I have changed the command to allocate task from _/assign_ to _/allocate_ so that I can match the _/deallocate_ command
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/112#issuecomment-715638357" expanded>

Will update the user guide soon
</panel>

</panel>


<panel type="info" header="### 78. ONG XIN BIN `@n3wsoldier` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/144#discussion_r508174537" expanded>

I think for command, private will be the better access modifiers, as there will not be any subclass to AddWorkspaceCommand.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/142#discussion_r508174913" expanded>

I think for command, private will be the better access modifiers, as there will not be any subclass to SearchCommand.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/135#discussion_r507175275" expanded>

Yea I saw, but I was considering keeping my custom messages and logging. 
I think I will take up your advice to keep things consistent.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/135#discussion_r507175314" expanded>

Thanks for the feedback.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/183#discussion_r511322320" expanded>

 I understand the rationale with PARAMETER_NAME but I am consistent with the rest of our teammates,
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/29#issuecomment-704671499" expanded>

I understand your concerns regarding the conflict of the naming convention of AnimeList class and the array list object in the watchlist. I will take up your suggestion and rectify it to "AnimeData" to represent Animes from our offline data.
</panel>

</panel>


<panel type="info" header="### 79. MATTHEW GANI `@matthewgani` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/37#discussion_r501111445" expanded>

Agreed! Would make things more readable/understandable
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/72#discussion_r505658571" expanded>

nice use of assertion here!
</panel>

</panel>


<panel type="info" header="### 80. ELIJAH NG SHI YI `@mxksowie` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/14#discussion_r502827273" expanded>

Only fats is plural here.
Consider making all related names plural (might be more suggestive of type) or all singular.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/19#issuecomment-706794430" expanded>

The build tests are failing because of the dependency of the code on the Food class. Have you tested the code locally?

Possible workabouts:
- Consider moving changes to a branch that targets  snowbanana12345's Food class. 
- Otherwise, consider implementing a minimal Food class which we could also remove when merge conflicts arise later.

</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/21#issuecomment-706800622" expanded>

Changes to testing will be made in a new branch since this branch already has its core functionality. (removed fix #26) 

Plan to further streamline these features by adding more FP support and reducing repetition.


</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/58#issuecomment-714212030" expanded>

I currently disagree with the proposed change in the above comment. I think that the Loader class itself should not be dependent on these other classes (Person, FoodList/Food, etc). This is to streamline dependencies. Current implementation of generic Loader looks good to me. I propose the use of class specific wrappers or child classes of Loader in future updates.

LGTM.
</panel>

</panel>


<panel type="info" header="### 81. Tang Yuting `@t170815518` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-4/tp/pull/30#discussion_r504377517" expanded>

Maybe we can separate the events and deadlines in `toString` of `TaskList` 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-4/tp/pull/30#issuecomment-708147350" expanded>

I merge this 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-4/tp/issues/46#issuecomment-708445552" expanded>

A possible implementation can be to let the user add the holiday period e.g. `2020-9-30` first, and the display function will only display tasks without lesson if the queried date falls between the holiday period. 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-4/tp/issues/10#issuecomment-711155943" expanded>

Reminder: we can edit things only when it is necessary (e.g. tedious to delete and create a new one)
</panel>

</panel>


<panel type="info" header="### 82. WANG QIN `@wangqinNick` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/26#discussion_r499676450" expanded>

I think it should contain two module list, (or maps) 
One module map is for storing the loaded module map from the NUSMODS
The other one is for storing the modules added by user. 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r504376041" expanded>

ok
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r504376176" expanded>

done
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r504376183" expanded>

done
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/44#discussion_r504575627" expanded>

I deleted the exception throw. it is handled inside the func already
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/23#issuecomment-703386818" expanded>

> Seems like there's a lot of changes made... Can we get a more detailed description?
For Command part, I only added the editModuleCommand
For ModuleManager part, I only added a function to change the module code of the target module.
For Parser part, I only added a regex to match for editModuleCommand, and a prepareEditModuleCommand() to deal with user inputs
In the end, I added some Junit tests since it is the only way to test. 

PS: I edited your Module class and added a module description attribute
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/29#issuecomment-704286854" expanded>

Looks quite good. If it passes the checks, then can merge. 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/66#issuecomment-708444002" expanded>

> simple changes, can merge

I found the edit -m CS1231 CS3224 the CS3224 cannot be recognised. 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/issues/71#issuecomment-713399524" expanded>

Just saw it. I will look into the issue tonight. 
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/issues/89#issuecomment-713402035" expanded>

It seems the parser cannot parse the "del -m CS1231" command
</panel>

</panel>


<panel type="info" header="### 83. NG NGAI TENG, COLIN `@Colin386` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/105#discussion_r511533960" expanded>

Would you like to shift this command outside the while loop? will the reminder command keep reminding for every other command we write?
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/36#issuecomment-704936313" expanded>

I think its good. I like that you check for the date formats before running your code
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/issues/52#issuecomment-708309417" expanded>

There are no exceptions to implement for Goal
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/65#issuecomment-708506699" expanded>

Excellent, I think the code runs very well. Most of the exceptions have been dealt with. 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/83#issuecomment-712785510" expanded>

So far I thnk the code is good, I can see that there is a change from storing date time status structures to using entire clonable events instead. I think this will be helpful later down the line when we need to sort stuff as now to access the repeated events, they have a similar structure
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/105#issuecomment-716079841" expanded>

Overall I think the code on the whole is good. I can see that it will filter out all events that fall on the day the program is run. I noticed that the remind command is in the while loop. I was wondering if the intention is to get the reminder to keep reminding the user everytime another command is run. 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/104#issuecomment-716080033" expanded>

Overall I think the code looks good. 
</panel>

</panel>


<panel type="info" header="### 84. TOH YONG XIANG BRANDON `@brandontoh` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/21#discussion_r502340856" expanded>

hmm isn't that his own functions and not the old Duke functions?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503596171" expanded>

It would be best if you could add that as well
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503597134" expanded>

Yea we will be moving the printing stuff the Ui.Printer class. For now, these are for testing
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42#discussion_r503597542" expanded>

hmm, I think you're right
</panel>

</panel>


<panel type="info" header="### 85. EDMUND TAN WEI JIE `@EdmundEXE` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/26#discussion_r501655641" expanded>

there should be a @params here i think
</panel>

</panel>


<panel type="info" header="### 86. BRYAN BEH WAH JUN `@Bryanbeh1998` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/51#discussion_r506642184" expanded>

Just assume they know. Dont set default uh
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/6#issuecomment-704865184" expanded>

Very solid!
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/27#issuecomment-706892148" expanded>

On it
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/100#issuecomment-715879608" expanded>

I added into the printing list already
</panel>

</panel>


<panel type="info" header="### 87. OWEN CHEW YANG `@chewyang` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/30#discussion_r499237283" expanded>

Hi i think it would be better to merge the Activity class with the ActivityList class that i created, ie change the relevant Integer type in the activityList class to Activity class
</panel>

</panel>


<panel type="info" header="### 88. KENNETH EER `@KennethEer` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/49#discussion_r503532892" expanded>

I think the moduleCode should not be set as final for future extendibility, so in case if the user has already typed in the expected and actual time for a module, and after that the user realises the module code is wrong, the user can edit the module code if the module code is not final, but still retain the expected and actual time.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/43#discussion_r502873444" expanded>

The default `Object.equals()` method takes in the object of Object type as the parameter and I keep this method signature to overwrite the default method.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/43#discussion_r503339491" expanded>

Yes, the function name is renamed to checkIfModuleExist.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/6#issuecomment-706589792" expanded>

Closes #37 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/issues/36#issuecomment-708936812" expanded>

Closed in #43 deleteMod function
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/issues/11#issuecomment-708937527" expanded>

Closed in #43 addMod function
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/issues/35#issuecomment-708937941" expanded>

Closed in #43 deleteExp function
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/issues/34#issuecomment-708938098" expanded>

Closed in #43 addExp function
</panel>

</panel>


<panel type="info" header="### 89. ZEON CHUA FEIYI `@CFZeon` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#discussion_r501683586" expanded>

Agreed, but I think that it would be better after all the functions are up after the first iteration.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/90#discussion_r508445659" expanded>

will do
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#issuecomment-713505321" expanded>

LGTM! 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/110#issuecomment-714389230" expanded>

Looks good! 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/116#issuecomment-715436520" expanded>

lgtm!
</panel>

</panel>


<panel type="info" header="### 90. YUEN SI HAO `@yuen-sihao` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/137#discussion_r507609871" expanded>

Is the chinese because of some settings? :)
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/74#discussion_r502734444" expanded>

Yeah, didn't notice it. Should have used information.equals("") since information is String. Thanks for spotting :) 
</panel>

</panel>


<panel type="info" header="### 91. JOHN NG YEE SIANG `@JohnNub` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/33#discussion_r502937095" expanded>

Not sure why this is commented out
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/53#discussion_r507545354" expanded>

Great suggestion. I pushed a new update to implement the change you suggested. 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/53#issuecomment-711170287" expanded>

> e a /n CS2113T Tutorial /d next fri /t 2pm
> Hi john! thank you
> I will like to clarify, for the above example, is there any library that i have to add to recognize "next Friday" or its just if else statements?

Look at Event.java in https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/52/files it was implemented in the last PR.
</panel>

</panel>


<panel type="info" header="### 92. NGUYEN NGOC LONG `@longngng` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/70#discussion_r508255046" expanded>

Totally agree!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502864107" expanded>

Good suggestion!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502864119" expanded>

Sure, will add.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502864162" expanded>

This part I'm not sure. Could you explain how are we going to invoke the methods in this class?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502917951" expanded>

But the list() function needs the object as well, like listNotebooks_nsp(Notebook sampleNotebook), so I'm not sure how to code it. Also, should the List class handle input arguments like "nsp"? That doesn't seem follow the principle right?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/42#discussion_r502917980" expanded>

Sure!
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#discussion_r503167750" expanded>

Sounds good
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#discussion_r503168425" expanded>

Okay, will do
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#discussion_r503168754" expanded>

I'm not sure. What do others think?
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/41#issuecomment-706635684" expanded>

Looks good to me. 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/44#issuecomment-707018224" expanded>

Good job! How about we implement only one help function for v1.0 first?
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/46#issuecomment-707149210" expanded>

The changes look fine.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/45#issuecomment-707466805" expanded>

Close #17 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-3/tp/pull/70#issuecomment-712638538" expanded>

I feel like we should highlight the commands only. 
![image](https://user-images.githubusercontent.com/46754292/96551328-abda8380-12e4-11eb-8a58-f6ec0618dd09.png)
For example, in this pic, I think can change Timetable, task, deadline to another mark-up style, like italic. 
Other than that, it looks good.
Sorry this was from Francene's commit haha. 
</panel>

</panel>


<panel type="info" header="### 93. VO QUANG HUNG `@hungvo0603` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-4/tp/pull/177#discussion_r511551343" expanded>

Hi Yuxuan should line 25 be "String[] splitInput = word[1].split("d\\");" instead of "d\\\\"? We only use one backslash symbol.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-4/tp/issues/114#issuecomment-709658764" expanded>

Fixes #123 
</panel>

</panel>


<panel type="info" header="### 94. MARCUS TAN `@marcursor` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/37#discussion_r501079519" expanded>

Maybe can use constants to prevent magic numbers
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/37#issuecomment-705000958" expanded>

> Using \r in JUnit test only works for Windows. To make test platform independent try using StringWriter and PrintWriter.

maybe can try using System.lineSeparator() for line breaks?
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/38#issuecomment-705025148" expanded>

Nice use of lineSeparator for cross-platform compatibility
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/65#issuecomment-708507891" expanded>

すばらしです
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/70#issuecomment-709385976" expanded>

Appropriate use of assert, good job
</panel>

</panel>


<panel type="info" header="### 95. TAN WEI SHUANG `@weishuangtan` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/27#discussion_r503124786" expanded>

Can consider refactoring to reduce arrowhead coding
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/36#discussion_r506938668" expanded>

I removed it so that if it detects eg "buys" which contains "buy", it will print an error message and an example on how they can use the [buy] command, what do you all think?
</panel>

</panel>


<panel type="info" header="### 96. NI YILUN `@lunzard` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/81#discussion_r502878059" expanded>

Good work. I think `information` as a parameter of this method is redundant as it can be accessed across the Class `DeleteCommand` though
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/99#discussion_r504605445" expanded>

I think the question mark is caused by my default language of the system (CHINESE), i will look for ways to fix that
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-3/tp/pull/154#discussion_r509439794" expanded>

thanks for the suggestion!
</panel>

</panel>


<panel type="info" header="### 97. NUR AMALINA BTE MOHAMED SANI `@amalinasani` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-T09-2/tp/pull/88#discussion_r510019345" expanded>

Perhaps can add "streamlines information for easy viewing and management"? 
</panel>

</panel>


<panel type="info" header="### 98. XIE YAOYUE `@xieyaoyue` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-2/tp/pull/94#discussion_r507839400" expanded>

Since validSummaryMonth, summaryYear and summary throw no exception, you can move them outside the try block.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-2/tp/pull/25#issuecomment-703605219" expanded>

Fixes #18, #10, #8
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-2/tp/pull/75#issuecomment-710748654" expanded>

Fixes #74 #73 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-2/tp/issues/90#issuecomment-711171055" expanded>

As a user ready to start using the app, I can purge all current data, so that I can get rid of sample/experimental data I used for exploring the app.
</panel>

</panel>


<panel type="info" header="### 99. GUO AI `@GuoAi` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/87#discussion_r511444611" expanded>

Ya. Maybe we can have this command as "list tasks sorted" while keeping the original "list" command as unchanged?
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/issues/10#issuecomment-707455350" expanded>

Format category INDEX c/CATEGORY (e.g. category 1 c/academics)
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/87#issuecomment-715981822" expanded>

Or maybe we can just have one big constructor ListCommand, i.e. ListCommand(int priority, String category, boolean isSorted) and pass these arguments in CommandCreator?
</panel>

</panel>


<panel type="info" header="### 100. ANG CHUN YANG `@acyang97` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-4/tp/pull/24#issuecomment-706738128" expanded>

I decided that Lesson will be a sub class of Task. Lesson objects are special in the sense that they have a frequency. For now, I only considered the case where the Lessons are held weekly. Biweekly Lessons might be harder to implement, will think through again. Adding the Lesson class and enabling it to be added to the ScheduleManager and ModuleManager was the main bulk of what I tried to implement.

I still haven't changed the Deadline and Event classes to suit our TP code, which means as of now, Deadline and Event objects cannot be added to the ScheduleManager and ModuleManager yet. I also haven't added Junit tests and update the UserGuide.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-4/tp/issues/54#issuecomment-711156874" expanded>

At the bottom of ModuleManager, should put all sorts of task under it - Lesson, Deadlines and Events. 
At the bottom of ScheduleManager, should just put in the Deadlines -  should put down deadlines today and future as well. Will think of how to implement this and  update later
</panel>

</panel>


<panel type="info" header="### 101. MUHAMMAD HOZEFA ZUMKHAWALA `@MuhammadHoze` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/82#discussion_r510789998" expanded>

oops. alright thanks 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/20#issuecomment-706241047" expanded>

I see, thanks for the edit! 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/36#issuecomment-707669779" expanded>

Fixes #35 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/39#issuecomment-707821018" expanded>

Looks good!  
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/41#issuecomment-707866429" expanded>

LGTM
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/issues/12#issuecomment-707875077" expanded>

Done! 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/42#issuecomment-708115143" expanded>

for the failures in checks, go to yr project on IntelliJ and on the right side, you'll see a gradle tab, open it and then under the verification folder, run test and run check. it will show u the cases that has failed and then just edit them and re run the checks 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/55#issuecomment-709355058" expanded>

LGTM! i'll merge this for ya 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/76#issuecomment-712993541" expanded>

LGTM!
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/78#issuecomment-715180960" expanded>

Will take a look at this and refactor my deleteCommand as well. 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/83#issuecomment-715261621" expanded>

Sorry guys, accidentally created. suppose to merge into own repo. 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/87#issuecomment-715972231" expanded>

LGTM! 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/87#issuecomment-715975861" expanded>

yeah true, there will be a few more coming in soon.  yeap sure 2.1 
</panel>

</panel>


<panel type="info" header="### 102. TIKYI MIN KHANT NAING `@tikimonarch` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-4/tp/pull/61#discussion_r511331383" expanded>

Understandable but the reason for all is because all command is used so there would be like 11 import statements if i am specific? what do you think?
</panel>

</panel>


<panel type="info" header="### 103. CAO ZEYU `@Cao-Zeyu` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/28#discussion_r503612815" expanded>

Oh I didn't see this comment just now before I merge PR. I will change it later.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-3/tp/pull/78#issuecomment-713682320" expanded>

- Add the function of listing by category
- Update User Guide
- Update complete help message for listing and deleting, and update EXPECTED.txt
</panel>

</panel>


<panel type="info" header="### 104. CHAN JIAN XIANG `@scjx123` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/pull/3#issuecomment-698108015" expanded>

Add read courselist feature
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/24#issuecomment-703480464" expanded>

Associate this issue with milestone 1
label : priority high + task
author : Rafael & Chu han
Description: recommend to split this into 2 different smaller issue as per UG. eg. 
1) Ability to focus on todo
2) Ability to focus on deadline 


</panel>

</panel>


<panel type="info" header="### 105. ONG ZONG XIAN `@zongxian-ctrl` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/29#issuecomment-704082308" expanded>

Fixes #14 
</panel>

</panel>


<panel type="info" header="### 106. NG WEI SIONG `@weisiong24` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/pull/40#discussion_r502739825" expanded>

Hi, I have made the changes mentioned above and updated it. Kindly check if you can merge it. thank you!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/pull/15#issuecomment-704933192" expanded>

To create different user acoounts :User Class- > name,password,7 Arraylist timetable (one for each day)

Inside every timetable arraylist put event class->name,location, timeStart,timeEnd

For each features:

Login feature-> create obj from user class
Add feature->similar to add event command in IP
edit ->members of event class
display->sort timetable then similar to List command in Ip
delete->similar to delete command in Ip
clear-> delete for all events in timetable arraylist
compare->linear search thru timetable arraylist

command->program to prompt user for input individually (one at a time)
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-3/tp/issues/66#issuecomment-712819983" expanded>

Mentioned in Enhance the add verifications of Input #65 
</panel>

</panel>


<panel type="info" header="### 107. LOW ZHEN DONG LEON `@leonlowzd` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/62#issuecomment-706054977" expanded>

test succeed, will close PR now.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/65#issuecomment-706070174" expanded>

test is done:) 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/103#issuecomment-711797399" expanded>

Nicely done! Some methods are quite long though, maybe we can break it down further? 
</panel>

</panel>


<panel type="info" header="### 108. JOHANES RAFAEL SUDARDJI `@johanesrafael` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/pull/4#issuecomment-700394916" expanded>

needs to resolve conflict . Otherwise, it can not be merged.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/pull/39#issuecomment-703537413" expanded>

Going to merge it...

</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/24#issuecomment-703604133" expanded>

Splitted into smaller issues
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/pull/91#issuecomment-704979069" expanded>

please check with gradle again 
checkstyleTest and checkstyleMain
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/35#issuecomment-706710287" expanded>

We found a bug in Delete Action. delete action can not delete when focus action is also executed. No errors, however. Just nothing is changed
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/35#issuecomment-706725177" expanded>

branch -v1.0 has issue. it can't run main(). shows errors traced back to showText() in cli
</panel>

</panel>


<panel type="info" header="### 109. LIAU KAI JIE `@kaijiel24` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/11#issuecomment-703120547" expanded>

Update #19 
Added non-mode-specific `printPrompt` to be used in command execution
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/47#issuecomment-706516063" expanded>

#48 done
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/74#issuecomment-712998221" expanded>

Approval granted. 
</panel>

</panel>


<panel type="info" header="### 110. ANG CHENG JUN `@Ang-Cheng-Jun` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/58#issuecomment-706008332" expanded>

Good Work ! I will continue from here to do the JUnitTest on removing location.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/72#issuecomment-706735350" expanded>

Thanks Leon, solved the issue !
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/95#issuecomment-709276882" expanded>

Delete Pull Request 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/103#issuecomment-711799050" expanded>

Thanks for the feedback. Most of the code is repeated one. I will place them in a private function in the class
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/111#issuecomment-712232962" expanded>

Looks good !
</panel>

</panel>


<panel type="info" header="### 111. YANG FAN `@fanceso` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-1/tp/pull/111#issuecomment-712253305" expanded>

nice done
</panel>

</panel>


<panel type="info" header="### 112. LI BOZHAO `@TomLBZ` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/pull/4#issuecomment-700559355" expanded>

> needs to resolve conflict . Otherwise, it can not be merged.

My "Resolve conflicts" button is still greyed out...
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/25#issuecomment-704314738" expanded>

this is done alr
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/28#issuecomment-705851758" expanded>

No longer need a selection region. Use Focus instead. Closing this with my PR.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/31#issuecomment-705852407" expanded>

Back function is no longer needed. Just use focus. Closing this with my PR.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/29#issuecomment-705856634" expanded>

I intend to do it like:
edit [-type] [index] [field=newvalue] ...
for example:
edit -task 1 description=blahblahblah date=blabhblh
edit -mod 5 MC=4

Pre-requisites: the target item must be selected. If it is not selected, it will be automatically selected.

Related: Need to implement "unselect" and "untake". Planning to use base actions.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T13-2/tp/issues/29#issuecomment-705857673" expanded>

Also, the edit should be able to change tasks for a module:
edit -mod 5 updateTask
will set the task of module 5 to be tasks currently in the selected list.
If nothing is selected, this will clear the task for module 5.
</panel>

</panel>


<panel type="info" header="### 113. TEOH ZHIXIANG `@zhixiangteoh` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511567761" expanded>

Oh this one the idea is to make a stack of questions in jumbled order - that's why first shuffle then make a stack out of it. So it's like pre-determined order, but to the user it will be "random". Implementation-wise, it's just popping off the topmost question from the "jumbled" stack. Idk if this answers your question?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511567866" expanded>

^ sounds good! I think in checkAttempt() method excluding {Punc} probably already catches "\", if not then we can just add that to the regex to ignore. Great idea!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511568146" expanded>

Oh yea definitely. I wrote this before I finalised the runGameLoop. Thanks for the great catch!
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511568342" expanded>

^ Just checked, can confirm {Punct} regex includes "\". Will add this to FAQ portion of UG!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/94#discussion_r511589745" expanded>

I misunderstood this question! I have since fixed the issue. Thanks!
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/23#issuecomment-703152373" expanded>

Ignore failed text tests here; I modified Main to test Deck Commands.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/35#issuecomment-706218222" expanded>

A more elaborate 'game mode' will be focused on in v2, although minimal functionality for viewing flash cards will be implemented in v1.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/24#issuecomment-706514468" expanded>

Discussed as a team and decided not to throw exceptions within individual Command classes; instead all exception handling will be encapsulated in Normal and Deck Parser.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/pull/46#issuecomment-706536414" expanded>

Suspect tests failed due to "\n" in Windows
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/59#issuecomment-708236993" expanded>

Push to v2.0.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T14-2/tp/issues/59#issuecomment-716116429" expanded>

Game Mode:

Q: "What if my flashcard answer contains a single word 'done' or 'exit'?" 
> A: Escape the command using \exit or "exit".

Edit: Credit @LiewWS 
</panel>

</panel>


<panel type="info" header="### 114. PRACHI GOENKA `@prachi2023` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/53#discussion_r503268064" expanded>

Alright, will change that before merging

</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/71#discussion_r505096428" expanded>

Thanks. Have changed it 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113-T13-1/tp/pull/114#discussion_r510868138" expanded>

Instantiated by the parser function?
</panel>

</panel>


<panel type="info" header="### 115. SUN LING YUE `@Feudalord` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/issues/77#issuecomment-713669127" expanded>

Done
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-1/tp/issues/87#issuecomment-713675212" expanded>

Settled. Seperated exception handling and more detailed error message.
</panel>

</panel>


<panel type="info" header="### 116. Alvin Tan De Jun `@trolommonm` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-3/tp/issues/11#issuecomment-707632395" expanded>

#14 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-3/tp/issues/13#issuecomment-707632556" expanded>

#14 
</panel>

</panel>


<panel type="info" header="### 117. Tan Jun Hong `@TanJunHong` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-4/tp/pull/5#issuecomment-703124841" expanded>

Looks good to merge!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-4/tp/pull/15#issuecomment-704902615" expanded>

All checks passed, LGTM
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-4/tp/pull/20#issuecomment-706594124" expanded>

Checks failed. Minor edits required.
</panel>

</panel>


<panel type="info" header="### 118. Woon Yoke Min `@yokemin` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-3/tp/issues/12#issuecomment-707680139" expanded>

completed with #16 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-3/tp/pull/35#issuecomment-712283610" expanded>

LGTM.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-3/tp/issues/34#issuecomment-712295878" expanded>

close #35 
</panel>

</panel>


<panel type="info" header="### 119. Feng Qingyu `@Louis-Feng` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-2/tp/pull/3#issuecomment-701996391" expanded>

update
</panel>

</panel>


<panel type="info" header="### 120. Ang Jun Xian `@JunxianAng` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-3/tp/pull/45#issuecomment-713154540" expanded>

close #36 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-3/tp/pull/45#issuecomment-713154932" expanded>

close #36 
</panel>

</panel>


<panel type="info" header="### 121. Chong Yow Lim `@ychong032` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113-T16-4/tp/pull/19#issuecomment-706520044" expanded>

Very good!
</panel>

</panel>


<panel type="info" header="### 122. ZHANG SHUKAI `@zsk612` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#discussion_r501712553" expanded>

not sure whether commLib will be more convenient or not if we only have "diet", "workout", "profile" and "exit" commands which don't really execute many things. Maybe a simple switch case would be clearer?
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/30#issuecomment-705597265" expanded>

Reviewed code, good job. 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/12#issuecomment-705599191" expanded>

Fixed list command in DietSession.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/7#issuecomment-705599915" expanded>

Fixed add command in DietSession.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/8#issuecomment-705600322" expanded>

Fixed delete command in DietSession.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/32#issuecomment-705605744" expanded>

Fixed list command in DietManager.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/31#issuecomment-705606090" expanded>

Fixed create command in DietManager.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/22#issuecomment-705607264" expanded>

Fixed exit command in main
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/33#issuecomment-705610017" expanded>

Fixed exit command in DietSession.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/17#issuecomment-709371622" expanded>

Fix start workout session.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/16#issuecomment-709372392" expanded>

Fix end workout session
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/15#issuecomment-709372683" expanded>

Fix remove workout session
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/9#issuecomment-709373444" expanded>

Fix save diet session
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/11#issuecomment-709374449" expanded>

Fix add workout moves
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/14#issuecomment-709374774" expanded>

Fix list workout session
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/issues/57#issuecomment-709411184" expanded>

Fix delete dietSession
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/100#issuecomment-713651699" expanded>

Add javadoc and loggings for diet
update help for diet
add diet storage and main menu in DG
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/105#issuecomment-713738371" expanded>

hahahah

</panel>

</panel>


<panel type="info" header="### 123. MICHAEL DINATA `@michaeldinata` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/89#discussion_r504350547" expanded>

The logger has been updated for all the classes that I could find it in. Thanks for pointing it out!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-2/tp/pull/137#discussion_r507534454" expanded>

Done! Thanks for the heads-up! 👍 
</panel>

</panel>


<panel type="info" header="### 124. CHEN JIQING `@judowha` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/2#issuecomment-701158474" expanded>

good job
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/36#issuecomment-707450971" expanded>

> Just to explain the new changes for edit commands :
> 
> getRawEpisodesForSeasons() used instead of getEpisodesForSeasons() -> this one checks array using season-1 so it'll lead to bounds errors
> 
> * If numSeason increases:
>   - set a new array for episodes and init the new seasons with 1 episode
> * if numSeasons decreases:
>   - replace episodes with smaller sized array and delete the episodes in the later seasons
>   - initially episodes=[10,12] for 2 seasons, when resized to 1, episodes=[10]

Understand! But we need to ensure that users give a valid input. e.g. they change the number of seasons to 0. If we assume the user input is perfect, then it will work well.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/94#issuecomment-715650474" expanded>

a search function has been implemented
</panel>

</panel>


<panel type="info" header="### 125. LYU JIAWEN `@JiawenLyu` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/29#issuecomment-706119331" expanded>

Good to merge.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/40#issuecomment-706651694" expanded>

Good to merge.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/90#issuecomment-711215496" expanded>

Looks good.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/94#issuecomment-711282495" expanded>

Looks good.
</panel>

</panel>


<panel type="info" header="### 126. ZHU ZEYU `@Zhu-Ze-Yu` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#discussion_r504586674" expanded>

you mean the Storage storage?

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/56#issuecomment-707123860" expanded>

Fixes #31 
Fixes #32
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#issuecomment-708319350" expanded>

Fixes #51 
Fixes #52 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#issuecomment-708349695" expanded>

Fixes #43 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#issuecomment-708360975" expanded>

Fixes #42 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/63#issuecomment-708367232" expanded>

Save edited chapter name and module name 
Combine GoChapterCommand and GoModuleCommand 
Combine BackChapterCommand and BackModuleCommand 

</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/76#issuecomment-712639201" expanded>

Fixes #74 
</panel>

</panel>


<panel type="info" header="### 127. ZHANG YILIN `@Zhangyilin0203` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/22#issuecomment-704250318" expanded>

looks good
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/30#issuecomment-706548554" expanded>

looks good to merge
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/86#issuecomment-711156666" expanded>

looks good
</panel>

</panel>


<panel type="info" header="### 128. LU ZIYI `@luziyi9898` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/103#discussion_r510747725" expanded>

Alright thanks!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/61#issuecomment-708493340" expanded>

Fixes #7 .
Fixes #8 .
</panel>

</panel>


<panel type="info" header="### 129. ELANGO PRAVEEN `@PraveenElango` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/18#discussion_r497990790" expanded>

Thank you for pointing out!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/18#discussion_r497990795" expanded>

Thank you for pointing out!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/18#discussion_r497990800" expanded>

Thank you for pointing out!
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/26#discussion_r499549493" expanded>

Got it, thanks for pointing out Wira!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502994111" expanded>

I was not able to access them in the test files where I was trying to reference them. Changing from private to protected solved that problem.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502994368" expanded>

Oops, my bad! I'll use the pow function instead
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502994507" expanded>

Sure, that sounds good.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502994561" expanded>

Got it, will rename accordingly!
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502994634" expanded>

Right, I'll figure that out. Thanks Wira :)
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r502994714" expanded>

Agreed, will change.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/42#discussion_r503198309" expanded>

Oh, but aren't we testing the getter functions inside the templates and not the components?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506102199" expanded>

Okay good point - I didn't consider that. I modified the declaration as per IntelliJ's suggestion because if I remember correctly, it flagged a warning (but not an error).

But like @hughjazzman  pointed out, they will still work when we declare them as `final` right? 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/52#discussion_r506103369" expanded>

Right, will remove and push again. Thanks for pointing out!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507503171" expanded>

Sure, will remove it.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507503200" expanded>

Sure, will remove it.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507503534" expanded>

IntelliJ suggested it to me and I tried downloading it to experiment around, but I don't think it does anything particularly useful. I'll remove it now.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507503661" expanded>

Sure, will change it to SPACES.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507503718" expanded>

Sure, will remove it.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507503728" expanded>

Sure, will remove it.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507503769" expanded>

Sure, will remove it.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#discussion_r507503848" expanded>

My bad :(
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509898710" expanded>

Must have been by accident, I'll remove it now

</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r509899050" expanded>

Okay
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511539359" expanded>

Okay but it is already `SetBooleanCommand.png` right?
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/75#discussion_r511539402" expanded>

Sure, will do.
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/18#issuecomment-701970083" expanded>

@hughjazzman Got it, thanks for the help!
</panel>

</panel>


<panel type="info" header="### 130. HO MING JUN `@homingjun` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/31#issuecomment-706568204" expanded>

The code looks good to merge.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/60#issuecomment-707607782" expanded>

There's some conflicting files that needs to be fixed. 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/112#issuecomment-715696722" expanded>

Looks good to merge
</panel>

</panel>


<panel type="info" header="### 131. KHENUS TAN JIA LIANG `@Khenus` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/75#issuecomment-708988352" expanded>

The most fail-safe method is to create the map with the actual index of each module inside the full module list after loading. This causes an efficiency of o(n) but allows for the most robust map creation as the index in the map will always correspond to the index in the array list.
</panel>

</panel>


<panel type="info" header="### 132. LEE CHEIN PONG HARRY `@harryleecp` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/60#issuecomment-706558439" expanded>

jar file link has been amended

</panel>

</panel>


<panel type="info" header="### 133. LIN YUHENG `@slightlyharp` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/102#issuecomment-715270509" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 134. BENARDO TANG WEI XIAN `@BenardoTang` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/23#issuecomment-706725414" expanded>

wow excellent out of this world! thanks for the help!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/75#issuecomment-714193948" expanded>

thanks boss
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/pull/88#issuecomment-714668357" expanded>

Can u add the add review feature in UG/DG? not sure how it works. thanks
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-3/tp/issues/107#issuecomment-716140740" expanded>

On it boss
</panel>

</panel>


<panel type="info" header="### 135. YU JINYANG `@yujinyang1998` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/94#discussion_r509155904" expanded>

oh yeah I forgot to do this function
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/94#discussion_r509156008" expanded>

will do
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#discussion_r509248534" expanded>

good call

</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#discussion_r509249316" expanded>

good call
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/96#discussion_r509250355" expanded>

great idea
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511551261" expanded>

@zsk612 @CFZeon 
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511551271" expanded>

will do
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511551424" expanded>

Good idea
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/120#discussion_r511551429" expanded>

will do
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/29#issuecomment-705503527" expanded>

do a gradle build test on ur own system before you do pr
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/90#issuecomment-712782736" expanded>

Looks good
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-1/tp/pull/92#issuecomment-712883132" expanded>

Lgtm
</panel>

</panel>


<panel type="info" header="### 136. TAN YAN AN `@Darticune` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/20#discussion_r500159382" expanded>

@neojiaern can be used in conjunction with my computeNewDeadline functions for revision implementation
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/20#discussion_r500160256" expanded>

@neojiaern simplified comparing of date to: if dueBy is before or equals to todays date. Function can be used to reference for revision in card version.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505560237" expanded>

I cannot, because ui.showToUser enforces newline after printing string. I will use format string in the next iteration.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505560363" expanded>

I cannot, because ui.showToUser enforces newline after printing string. I will use format string in the next iteration.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-3/tp/pull/68#discussion_r505562606" expanded>

I cannot, because ui.showToUser enforces newline after printing string. I will use format string in the next iteration.
</panel>

</panel>


<panel type="info" header="### 137. TAN YU SHING `@TYS0n1` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-1/tp/issues/87#issuecomment-714911185" expanded>

Dropped functionality
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-1/tp/issues/90#issuecomment-715667685" expanded>

Merged
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-1/tp/issues/84#issuecomment-715667746" expanded>

Merged
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-1/tp/pull/116#issuecomment-715806393" expanded>

Failed text-ui-test, fix later merges
</panel>

</panel>


<panel type="info" header="### 138. TENG KIAN EN `@tengkianen` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/21#issuecomment-703678996" expanded>

Naming error resulting in failing Gradle checks
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-2/tp/pull/22#issuecomment-706492693" expanded>

UI updated by other teammates
</panel>

</panel>


<panel type="info" header="### 139. DASH ABHISHEK `@oasisbeatle` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#discussion_r503005646" expanded>

Should I remove the previously created LoadComponentTest class and split it into the respective component test subclasses?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#discussion_r503006408" expanded>

Yes, that's a good idea 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#discussion_r503270617" expanded>

Noted, thanks!
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508202192" expanded>

Yeah it looked redundant to me as well, will make the edits after we append the code.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508202336" expanded>

Noted!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#discussion_r508984101" expanded>

Updated it to cover the current implementation 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/43#issuecomment-706845237" expanded>

Please let me know how if the way I've done LoadComponentTest so far makes sense, if it does I will extend it to cover all components 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/49#issuecomment-709199115" expanded>

LGTM!
edit: After merge conflicts have been resolved
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/56#issuecomment-711779898" expanded>

LBGTM! (Looks blissfully good to merge)
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/61#issuecomment-712272906" expanded>

LGTM!
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-3/tp/pull/62#issuecomment-712862523" expanded>

Need a review on the latest version 
</panel>

</panel>


<panel type="info" header="### 140. LEE HAO YUAN `@lhydl` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/32#discussion_r502207559" expanded>

I declare outside because it is used in more than one methods.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/53#discussion_r504408813" expanded>

I think it is better to implement exception handling inside the respective methods. But I believe this method works for now to prevent the app from crashing first due to some weird inputs.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/88#discussion_r510028942" expanded>

Is there a better alternative? I used the above method as using "\u2713" and "\u2718" violates the Gradle style check. 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/88#discussion_r510065423" expanded>

Yeah, can.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/issues/15#issuecomment-703380486" expanded>

List week number, modules, expected workload and actual workload in a table.
Change the welcome screen to show a graphic of ModTracker.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-4/tp/pull/33#issuecomment-706483137" expanded>

Looks good to merge.
</panel>

</panel>


<panel type="info" header="### 141. XU CHE `@xuche123` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-4/tp/issues/51#issuecomment-714349735" expanded>

Currently 3 types of sorting implemented which are:
1. Sort by location
2. Sort by time
3. Sort by description

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-4/tp/pull/54#issuecomment-714360116" expanded>

Fixes #51 
</panel>

</panel>


<panel type="info" header="### 142. GOH SONG HAN `@gohsonghan98` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-2/tp/pull/32#issuecomment-705604151" expanded>

I think you may also consider saving and loading user configuration as txt file in your storage class.
</panel>

</panel>


<panel type="info" header="### 143. I MUTHUKUMAR `@syncode98` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/32#discussion_r503761219" expanded>

Noted
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/6#issuecomment-703087024" expanded>

Completed @jialerk 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/18#issuecomment-706156287" expanded>

Approved the merging of this pull request after looking through the code.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/10#issuecomment-707190844" expanded>

Successfully implemented the required features by @sugandha929 
</panel>

</panel>


<panel type="info" header="### 144. MARCUS NG YONG `@Reinbowl` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/issues/82#issuecomment-712604202" expanded>

Since goal extends event, goal command and goal class requires changes as well. In short a goal cant be repeated. 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/83#issuecomment-712605273" expanded>

Do not merge yet. Once reviewed to delete old classes not used by repeat anymore. 
</panel>

</panel>


<panel type="info" header="### 145. LAM TIAN YU JERROLD `@jerroldlam` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/35#issuecomment-706540674" expanded>

Hashmap has been updating.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/50#issuecomment-706638654" expanded>

Resolved with addition of academic planner.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/52#issuecomment-706638703" expanded>

Resolved with addition of CAP Calculator app.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/pull/65#issuecomment-706645767" expanded>

Update test for addModuleToUser
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/69#issuecomment-706799465" expanded>

Fixed for other inputs with similar situation as well
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/14#issuecomment-707185363" expanded>

Completed
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/92#issuecomment-709687780" expanded>

![image](https://user-images.githubusercontent.com/60382285/96204994-2c714b00-0f98-11eb-8880-a5c926089ca8.png)
Example when i manually edit the files
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/119#issuecomment-711697871" expanded>

Implemented with view by semester function in academic calendar
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/121#issuecomment-711698779" expanded>

Implemented with set SU in CAP Calculator
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/120#issuecomment-711699803" expanded>

Implemented with storage classes, which supporting saving and loading.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F12-1/tp/issues/95#issuecomment-716033775" expanded>

Testing coverage completed satisfactorily
</panel>

</panel>


<panel type="info" header="### 146. LOW QING NING `@ninggggx99` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/105#discussion_r511546688" expanded>

It will not run for every command. I would prefer not to switch it out because there's a try catch
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/56#issuecomment-707729166" expanded>

Your dateException is failing the test. Maybe try to fix the expected output?
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/66#issuecomment-708999796" expanded>

Excellent!
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/87#issuecomment-714443853" expanded>

nicely done! can consider adding in comments next time :)
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-4/tp/pull/101#issuecomment-714657953" expanded>

Well done! :) 
</panel>

</panel>


<panel type="info" header="### 147. LIU JINGMING `@Jingming517` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/22#issuecomment-704242560" expanded>

looks good
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/20#issuecomment-704791028" expanded>

Looks ok.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/40#issuecomment-706596834" expanded>

I'll change the expected.txt after deciding the format of timeline.
</panel>

</panel>


<panel type="info" header="### 148. ENERIO JOHANNINE SALVILLA `@johan9se` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/56#discussion_r505592758" expanded>

Oh yes! Thanks for that reminder, I've changed it accordingly!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-W13-4/tp/pull/56#discussion_r505595101" expanded>

But isn't Ui being passed into the execute method of all Command classes?
</panel>

</panel>


<panel type="info" header="### 149. ZHUANG MENGJIN `@Lee-Juntong` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-4/tp/issues/30#issuecomment-710734344" expanded>

syntax inferred:
edit *index*
the new event is entered with the same syntax as adding a new event.e.g. 'assignment xxx /t 2020-10-01 20:00 /l somewhere

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-4/tp/issues/30#issuecomment-710734470" expanded>

in a later version, we shall allow the user to edit only one part of the event. i.e. only time or location or type or description
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-4/tp/pull/39#issuecomment-711485077" expanded>

make sure you can pass CI. There is no bug in CI now.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-4/tp/pull/47#issuecomment-714219529" expanded>

coding style check failed
</panel>

</panel>


<panel type="info" header="### 150. YE YUTONG `@yeyutong811` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/25#issuecomment-706026663" expanded>

Ok!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/issues/11#issuecomment-706666789" expanded>

Achieved in Branch hr ver0.1
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/42#issuecomment-708260527" expanded>

JUnit
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/pull/63#issuecomment-713611209" expanded>

close # 22
</panel>

</panel>


<panel type="info" header="### 151. VARSHA MS `@Varsha3006` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/issues/12#issuecomment-705549339" expanded>

 so that I will not forget or miss the event.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/issues/6#issuecomment-705550074" expanded>

so that I can manage the schedule 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/issues/10#issuecomment-705550328" expanded>

 so I can easily filter by event type.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/issues/9#issuecomment-705550494" expanded>

so that I prevent myself from doing repetitive things
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F14-1/tp/issues/8#issuecomment-705550742" expanded>

so that I can get information on events quickly 
</panel>

</panel>


<panel type="info" header="### 152. CHAN WAN TING ELIZABETH `@elizabethcwt` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/issues/105#issuecomment-707741983" expanded>

Already implemented in PR to fix #103 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/issues/118#issuecomment-708481242" expanded>

Fixed by #120 
</panel>

</panel>


<panel type="info" header="### 153. ALICIA HO SHIMIN `@AliciaHo` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W12-4/tp/pull/71#issuecomment-707502802" expanded>

Fixes #69 
</panel>

</panel>


<panel type="info" header="### 154. JENNY LIN `@jlifah` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/72#issuecomment-707096183" expanded>

hello
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/72#issuecomment-707108293" expanded>

looks 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/71#issuecomment-707109764" expanded>

> overall well done just that there is minor coding style errors

i feel very attacked :(
</panel>

</panel>


<panel type="info" header="### 155. YEN PIN FANG `@pinfang` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F14-2/tp/pull/94#discussion_r508165094" expanded>

since the **xxx.execute()** method throws an exception, **summaryYear.excecute()** should be in the try block to catch exception if there is any
</panel>

</panel>


<panel type="info" header="### 156. LIU YIFENG `@LIU-YiFeng-1` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/20#issuecomment-704244107" expanded>

Looks good to merge.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/issues/33#issuecomment-706565308" expanded>

Fix printEventsCommand and checkstyles Closes#36
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/issues/32#issuecomment-706565430" expanded>

Fix printEventsCommand and checkstyles Closes#36
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/39#issuecomment-706569617" expanded>

Closes #38
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/issues/42#issuecomment-706664819" expanded>

already fixed. please ignore this issue.
</panel>

</panel>


<panel type="info" header="### 157. GAN JIA LERK `@jialerk` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/52#issuecomment-712774376" expanded>

closes #48 
closes #28 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/59#issuecomment-713609024" expanded>

Added user guide details
</panel>

</panel>


<panel type="info" header="### 158. ZHAO HAOXIANG `@e0426051` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/17#discussion_r500808666" expanded>

ok I removed the file.
Is the scrumptious package name ok though

</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/17#discussion_r500867913" expanded>

ok. I merge? Or someone merge after checking or sth?
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/12#issuecomment-703697396" expanded>

good
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/issues/23#issuecomment-704826171" expanded>

sounds ok imo
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/34#issuecomment-706678518" expanded>

Labels added and getTask() has been implemented for all applicable functions
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/30#issuecomment-706678611" expanded>

This PR is deprecated. Task function will use Gunit's implementation.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/80#issuecomment-709291833" expanded>

Looks ok. I can just copy paste my part in after merging
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/81#issuecomment-709324464" expanded>

Looks good
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/97#issuecomment-712687778" expanded>

Looks good.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#issuecomment-715356412" expanded>

I have merged the try-catch block and removed the duplicate function from the classes.


> Have you tried enabling the assertions? [Link](https://stackoverflow.com/questions/18168257/where-to-add-compiler-options-like-ea-in-intellij-idea)

I enabled it from settings, and also ran someone's test code which show the thing is enabled. But then like if I run "project /view" from the start it still exits with error even though got assert, then I can only fix it with try-catch block. Also if I replace the "no project" errors from try-catch to assertion then the error message prints but the task is still added. I'm not sure if this is normal behavior. Maybe assertions cannot replace try-catch?
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-F11-4/tp/pull/110#issuecomment-715479363" expanded>

> > I have merged the try-catch block and removed the duplicate function from the classes.
> > > Have you tried enabling the assertions? [Link](https://stackoverflow.com/questions/18168257/where-to-add-compiler-options-like-ea-in-intellij-idea)
> > 
> > 
> > I enabled it from settings, and also ran someone's test code which show the thing is enabled. But then like if I run "project /view" from the start it still exits with error even though got assert, then I can only fix it with try-catch block. Also if I replace the "no project" errors from try-catch to assertion then the error message prints but the task is still added. I'm not sure if this is normal behavior. Maybe assertions cannot replace try-catch?
> 
> The error was because there is no check whether there is a project before executing _ViewProjectCommand_. The error has already been fixed by @gmit22 in his latest PR.


Just checked again, the code is working as expected now.


> You are talking about the Unit Test assertions is it? Those assertions are different from the normal assertions. Normal assertions are placed in the code using the `assert` keyword, therefore the link I have provided only works for normal assertions. Anyway both have different purpose, so yeah.

I think the problem is I did not pull Gunit's latest code. Now everything looks good.

I made more changes regarding some commands without dashes, so maybe can review one more time before merge.
</panel>

</panel>


<panel type="info" header="### 159. NG HONG MING `@imhm` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/issues/18#issuecomment-704002470" expanded>

sub task of #19 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/20#issuecomment-704040488" expanded>

Closes #18 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/31#issuecomment-706649700" expanded>

lgtm
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T12-2/tp/pull/86#issuecomment-711168067" expanded>

Closes #85 
</panel>

</panel>


<panel type="info" header="### 160. KWEK ZHAN HAO `@Speedweener` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-W11-1/tp/issues/94#issuecomment-715270025" expanded>

Added in Colour and Checkstyle changes pull request
</panel>

</panel>


<panel type="info" header="### 161. POON CHUAN AN `@poonchuanan` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2021S1-CS2113T-T09-4/tp/pull/66#issuecomment-706705737" expanded>

> Looks good!

thank you
</panel>

</panel>
